{"version":3,"file":"chained_iterator_test.js","sourceRoot":"","sources":["../../src/iterators/chained_iterator_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;GAgBG;AAEH,OAAO,EAAC,eAAe,EAAC,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAC,iBAAiB,EAAC,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAC,mBAAmB,EAAC,MAAM,sBAAsB,CAAC;AAEzD,MAAM,mBAAmB,GAAG,EAAE,CAAC;AAE/B,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,eAAe,GAAG,IAAI,eAAe,CACvC,iBAAiB,CAAC,CAAC,IAAI,mBAAmB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvE,MAAM,cAAc,GAAa,EAAE,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,CAAC,EAAE,EAAE;gBAC5C,cAAc,CAAC,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACjD;SACF;QAED,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,cAAc,EAAE,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,eAAe,GAAG,IAAI,eAAe,CAAC,iBAAiB,CAAC;YAC5D,IAAI,mBAAmB,CAAC,mBAAmB,CAAC;YAC5C,IAAI,mBAAmB,CAAC,mBAAmB,CAAC;YAC5C,IAAI,mBAAmB,CAAC,mBAAmB,CAAC;SAC7C,CAAC,CAAC,CAAC;QAEJ,MAAM,cAAc,GAAa,EAAE,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,EAAE,CAAC,EAAE,EAAE;gBAC5C,cAAc,CAAC,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACjD;SACF;QAED,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,cAAc,EAAE,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\nimport {ChainedIterator} from './lazy_iterator';\nimport {iteratorFromItems} from './lazy_iterator';\nimport {TestIntegerIterator} from './lazy_iterator_test';\n\nconst SHORT_STREAM_LENGTH = 15;\n\ndescribe('ChainedIterator', () => {\n  it('produces a single underlying stream as expected', async () => {\n    const chainedIterator = new ChainedIterator(\n        iteratorFromItems([new TestIntegerIterator(SHORT_STREAM_LENGTH)]));\n\n    const expectedResult: number[] = [];\n    for (let i = 0; i < 1; i++) {\n      for (let j = 0; j < SHORT_STREAM_LENGTH; j++) {\n        expectedResult[i * SHORT_STREAM_LENGTH + j] = j;\n      }\n    }\n\n    const result = await chainedIterator.toArrayForTest();\n    expect(result).toEqual(expectedResult);\n  });\n  it('produces multiple underlying streams as expected', async () => {\n    const chainedIterator = new ChainedIterator(iteratorFromItems([\n      new TestIntegerIterator(SHORT_STREAM_LENGTH),\n      new TestIntegerIterator(SHORT_STREAM_LENGTH),\n      new TestIntegerIterator(SHORT_STREAM_LENGTH)\n    ]));\n\n    const expectedResult: number[] = [];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < SHORT_STREAM_LENGTH; j++) {\n        expectedResult[i * SHORT_STREAM_LENGTH + j] = j;\n      }\n    }\n\n    const result = await chainedIterator.toArrayForTest();\n    expect(result).toEqual(expectedResult);\n  });\n});\n"]}