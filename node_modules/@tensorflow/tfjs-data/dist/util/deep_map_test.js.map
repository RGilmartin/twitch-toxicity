{"version":3,"file":"deep_map_test.js","sourceRoot":"","sources":["../../src/util/deep_map_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;GAgBG;AAEH,OAAO,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAE5C,2CAA2C;AAC3C,OAAO,EAAC,YAAY,EAAE,OAAO,EAAE,kBAAkB,EAAqC,OAAO,EAAE,UAAU,EAAC,MAAM,YAAY,CAAC;AAE7H,MAAM,YAAY,GAAG;IACnB,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC;IAChE,EAAC,IAAI,EAAE,aAAa,EAAC;CACtB,CAAC;AAEF,kCAAkC;AAClC,SAAS,SAAS,CAAC,CAAM;IACvB,IAAI,CAAC,KAAK,IAAI,EAAE;QACd,OAAO,IAAI,CAAC;KACb;IACD,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC3B,OAAO,EAAC,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;KACjD;IAED,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;QACjB,OAAO,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;KACrC;SAAM;QACL,OAAO,EAAC,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;KACnC;AACH,CAAC;AAED,kCAAkC;AAClC,SAAS,cAAc,CAAC,CAAM;IAC5B,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5B,OAAO;QACL,KAAK,EAAE,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACnE,OAAO,EAAE,MAAM,CAAC,OAAO;KACxB,CAAC;AACJ,CAAC;AAED,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACzC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YACxD,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI;SAC9B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACjD,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;QACzE,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,SAAS,CAAC,CAAC;aACzC,OAAO,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAC,EAAE,SAAS,CAAC,CAAC;aACxD,OAAO,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,MAAM,KAAK,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,EAAC,CAAC;QAClE,MAAM,QAAQ,GAAG;YACf,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC;SACrD,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,KAAK,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,EAAC,CAAC;QAClE,MAAM,QAAQ,GAAG;YACf,CAAC,EAAE,OAAO;YACV,CAAC,EAAE;gBACD,KAAK,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC,EAAE,IAAI;gBAC9C,EAAC,EAAE,EAAE,EAAC,IAAI,EAAE,aAAa,EAAC,EAAE,EAAE,EAAE,OAAO,EAAC;aACzC;SACF,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAC7B,MAAM,KAAK,GAAG,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;YACrB,EAAE,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC;YACrC,EAAE,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC;YACrC,EAAE,EAAE,EAAC,IAAI,EAAE,aAAa,EAAC;YACzB,EAAE,EAAE,EAAC,IAAI,EAAE,aAAa,EAAC;SAC1B,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,kCAAkC;QAClC,MAAM,CAAC,GAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACT,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IACzD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,kBAAkB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC;YAClE,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC;YAClE,KAAK,EAAE,KAAK,EAAE,OAAO;SACtB,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,cAAc,CAAC,CAAC;aAClE,OAAO,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,CAAC,MAAM,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,cAAc,CAAC,CAAC;aAC5D,OAAO,CAAC,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,kBAAkB,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,cAAc,CAAC,CAAC;aAC/D,OAAO,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,kBAAkB,CACpB,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAC,EAAE,cAAc,CAAC,CAAC;aACzD,OAAO,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,KAAK,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,EAAC,CAAC;QAClE,MAAM,QAAQ,GAAG;YACf,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC;SACrD,CAAC;QACF,MAAM,CAAC,MAAM,kBAAkB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,KAAK,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,EAAC,CAAC;QAClE,MAAM,QAAQ,GAAG;YACf,CAAC,EAAE,OAAO;YACV,CAAC,EAAE;gBACD,KAAK,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC,EAAE,IAAI;gBAC9C,EAAC,EAAE,EAAE,EAAC,IAAI,EAAE,aAAa,EAAC,EAAE,EAAE,EAAE,OAAO,EAAC;aACzC;SACF,CAAC;QACF,MAAM,CAAC,MAAM,kBAAkB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,KAAK,GAAG,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;YACrB,EAAE,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC;YACrC,EAAE,EAAE,CAAC,uBAAuB,EAAE,MAAM,CAAC;YACrC,EAAE,EAAE,EAAC,IAAI,EAAE,aAAa,EAAC;YACzB,EAAE,EAAE,EAAC,IAAI,EAAE,aAAa,EAAC;SAC1B,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,4BAA4B,EAAE,KAAK,EAAC,IAAI,EAAC,EAAE;QAC5C,IAAI;YACF,kCAAkC;YAClC,MAAM,CAAC,GAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;YACpD,MAAM,CAAC,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,MAAM,kBAAkB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACV,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;YACjE,IAAI,EAAE,CAAC;SACR;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,CAAC,OAAO,CAAC;YACb,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;SAC3B,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;QACpC,MAAM,CAAC,OAAO,CAAC;YACb,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAC,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;YACjE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAC;SAC9B,CAAC,CAAC,CAAC,OAAO,CAAC;YACV,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACZ,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC;YAC1B,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACZ,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;SACnB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,KAAK,GAAG;YACZ,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,EAAC;YACnD,EAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAC,CAAC,EAAC;SACjD,CAAC;QACF,MAAM,QAAQ,GAAG;YACf,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;YACtB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,EAAC,CAAC;SACpE,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,kCAAkC;QAClC,MAAM,CAAC,GAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,EAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACT,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YACvC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YACrC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YACnD,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YAC7C,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;YAC/D,MAAM,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,CAAC,YAAY,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n\n// tslint:disable-next-line:max-line-length\nimport {canTensorify, deepMap, deepMapAndAwaitAll, DeepMapAsyncResult, DeepMapResult, deepZip, isIterable} from './deep_map';\n\nconst integerNames = [\n  'zero', 'one', 'two', 'three', ['an array representing', 'four'],\n  {five: 'I am a dict'}\n];\n\n// tslint:disable-next-line:no-any\nfunction transform(x: any): DeepMapResult {\n  if (x === null) {\n    return null;\n  }\n  if (typeof (x) === 'number') {\n    return {value: integerNames[x], recurse: false};\n  }\n\n  if (isIterable(x)) {\n    return {value: null, recurse: true};\n  } else {\n    return {value: x, recurse: false};\n  }\n}\n\n// tslint:disable-next-line:no-any\nfunction asyncTransform(x: any): DeepMapAsyncResult {\n  const result = transform(x);\n  return {\n    value: result.value === null ? null : Promise.resolve(result.value),\n    recurse: result.recurse\n  };\n}\n\ndescribe('deepMap', () => {\n  it('maps single mappable objects', () => {\n    expect(deepMap(null, transform)).toEqual(null);\n    expect(deepMap(1, transform)).toEqual('one');\n    expect(deepMap(3, transform)).toEqual('three');\n    expect(deepMap('hello', transform)).toEqual('hello');\n  });\n  it('maps arrays of mappable objects', () => {\n    expect(deepMap([null, 1], transform)).toEqual([null, 'one']);\n    expect(deepMap([1, 2, 3], transform)).toEqual(['one', 'two', 'three']);\n    expect(deepMap([1, 'hello', 3, null], transform)).toEqual([\n      'one', 'hello', 'three', null\n    ]);\n  });\n  it('maps objects containing mappable fields', () => {\n    expect(deepMap({a: null, b: 1}, transform)).toEqual({a: null, b: 'one'});\n    expect(deepMap({a: 1, b: 2, c: 3}, transform))\n        .toEqual({a: 'one', b: 'two', c: 'three'});\n    expect(deepMap({a: 1, b: 'hello', c: 3, d: null}, transform))\n        .toEqual({a: 'one', b: 'hello', c: 'three', d: null});\n  });\n  it('maps nested structures containing mappable fields', () => {\n    const input = {a: 'hello', b: [2, 3, null, {ba: 0, bb: 'world'}]};\n    const expected = {\n      a: 'hello',\n      b: ['two', 'three', null, {ba: 'zero', bb: 'world'}]\n    };\n    expect(deepMap(input, transform)).toEqual(expected);\n  });\n  it('maps elements that produce arrays or objects', () => {\n    const input = {a: 'hello', b: [2, 4, null, {ba: 5, bb: 'world'}]};\n    const expected = {\n      a: 'hello',\n      b: [\n        'two', ['an array representing', 'four'], null,\n        {ba: {five: 'I am a dict'}, bb: 'world'}\n      ]\n    };\n    expect(deepMap(input, transform)).toEqual(expected);\n  });\n  it('handles repetitions', () => {\n    const input = {a1: 4, a2: 4, b1: 5, b2: 5};\n    const result = deepMap(input, transform);\n    expect(result).toEqual({\n      a1: ['an array representing', 'four'],\n      a2: ['an array representing', 'four'],\n      b1: {five: 'I am a dict'},\n      b2: {five: 'I am a dict'}\n    });\n    const b1Mapped = result.b1;\n    const b2Mapped = result.b2;\n    expect(b2Mapped).toBe(b1Mapped);\n  });\n  it('detects and rejects cycles', () => {\n    // tslint:disable-next-line:no-any\n    const b: any[] = [2, 3, null, {ba: 0, bb: 'world'}];\n    const c = {a: 'hello', b};\n    b[4] = c;\n    const input = [b, c];\n    expect(() => deepMap(input, transform)).toThrowError();\n  });\n});\n\ndescribe('asyncDeepMap', () => {\n  it('Maps single mappable objects', async () => {\n    expect(await deepMapAndAwaitAll(null, asyncTransform)).toEqual(null);\n    expect(await deepMapAndAwaitAll(1, asyncTransform)).toEqual('one');\n    expect(await deepMapAndAwaitAll(3, asyncTransform)).toEqual('three');\n    expect(await deepMapAndAwaitAll('hello', asyncTransform)).toEqual('hello');\n  });\n  it('Maps arrays of mappable objects', async () => {\n    expect(await deepMapAndAwaitAll([null, 1], asyncTransform)).toEqual([\n      null, 'one'\n    ]);\n    expect(await deepMapAndAwaitAll([1, 2, 3], asyncTransform)).toEqual([\n      'one', 'two', 'three'\n    ]);\n    expect(await deepMapAndAwaitAll([1, 'hello', 3, null], asyncTransform))\n        .toEqual(['one', 'hello', 'three', null]);\n  });\n  it('Maps objects containing mappable fields', async () => {\n    expect(await deepMapAndAwaitAll({a: null, b: 1}, asyncTransform))\n        .toEqual({a: null, b: 'one'});\n    expect(await deepMapAndAwaitAll({a: 1, b: 2, c: 3}, asyncTransform))\n        .toEqual({a: 'one', b: 'two', c: 'three'});\n    expect(await deepMapAndAwaitAll(\n               {a: 1, b: 'hello', c: 3, d: null}, asyncTransform))\n        .toEqual({a: 'one', b: 'hello', c: 'three', d: null});\n  });\n  it('Maps nested structures containing mappable fields', async () => {\n    const input = {a: 'hello', b: [2, 3, null, {ba: 0, bb: 'world'}]};\n    const expected = {\n      a: 'hello',\n      b: ['two', 'three', null, {ba: 'zero', bb: 'world'}]\n    };\n    expect(await deepMapAndAwaitAll(input, asyncTransform)).toEqual(expected);\n  });\n  it('maps elements that produce arrays or objects', async () => {\n    const input = {a: 'hello', b: [2, 4, null, {ba: 5, bb: 'world'}]};\n    const expected = {\n      a: 'hello',\n      b: [\n        'two', ['an array representing', 'four'], null,\n        {ba: {five: 'I am a dict'}, bb: 'world'}\n      ]\n    };\n    expect(await deepMapAndAwaitAll(input, asyncTransform)).toEqual(expected);\n  });\n  it('handles repetitions', async () => {\n    const input = {a1: 4, a2: 4, b1: 5, b2: 5};\n    const result = await deepMapAndAwaitAll(input, asyncTransform);\n    expect(result).toEqual({\n      a1: ['an array representing', 'four'],\n      a2: ['an array representing', 'four'],\n      b1: {five: 'I am a dict'},\n      b2: {five: 'I am a dict'}\n    });\n    const b1Mapped = result.b1;\n    const b2Mapped = result.b2;\n    expect(b2Mapped).toBe(b1Mapped);\n  });\n  it('detects and rejects cycles', async done => {\n    try {\n      // tslint:disable-next-line:no-any\n      const b: any[] = [2, 3, null, {ba: 0, bb: 'world'}];\n      const c = {a: 'hello', b};\n      b[4] = c;\n      const input = [b, c];\n      await deepMapAndAwaitAll(input, asyncTransform);\n      done.fail();\n    } catch (e) {\n      expect(e.message).toBe('Circular references are not supported.');\n      done();\n    }\n  });\n});\n\ndescribe('deepZip', () => {\n  it('zips arrays of primitives', () => {\n    expect(deepZip([1, 2, 3])).toEqual([1, 2, 3]);\n    expect(deepZip([null, 1])).toEqual([null, 1]);\n    expect(deepZip([1, 'hello', 3, null])).toEqual([1, 'hello', 3, null]);\n  });\n  it('zips objects containing simple fields', () => {\n    expect(deepZip([\n      {a: 1, b: 2}, {a: 3, b: 4}\n    ])).toEqual({a: [1, 3], b: [2, 4]});\n    expect(deepZip([\n      {a: 1, b: 'hello', c: 4, d: null}, {a: 2, b: 'world', c: 5, d: 7},\n      {a: 3, b: '!', c: 6, d: null}\n    ])).toEqual({\n      a: [1, 2, 3],\n      b: ['hello', 'world', '!'],\n      c: [4, 5, 6],\n      d: [null, 7, null]\n    });\n  });\n  it('zips arrays containing simple fields', () => {\n    expect(deepZip([[1, 2], [3, 4]])).toEqual([[1, 3], [2, 4]]);\n  });\n  it('zips nested structures', () => {\n    const input = [\n      {a: 'plums', b: [1, 2, null, {ba: 3, bb: 'sweet'}]},\n      {a: 'icebox', b: [3, 4, 5, {ba: 6, bb: 'cold'}]}\n    ];\n    const expected = {\n      a: ['plums', 'icebox'],\n      b: [[1, 3], [2, 4], [null, 5], {ba: [3, 6], bb: ['sweet', 'cold']}]\n    };\n    expect(deepZip(input)).toEqual(expected);\n  });\n  it('detects and rejects cycles', () => {\n    // tslint:disable-next-line:no-any\n    const b: any[] = [2, 3, null, {ba: 0, bb: 'world'}];\n    const c = {a: 'hello', b};\n    b[4] = c;\n    const input = [b, c];\n    expect(() => deepZip(input)).toThrowError();\n  });\n\n  describe('canTensorify', () => {\n    it('returns true for primitives', () => {\n      expect(canTensorify('a')).toBeTruthy();\n      expect(canTensorify(1)).toBeTruthy();\n      expect(canTensorify(true)).toBeTruthy();\n    });\n\n    it('returns true for arrays', () => {\n      expect(canTensorify(['a', 'b', 'c'])).toBeTruthy();\n      expect(canTensorify([1, 2, 3])).toBeTruthy();\n      expect(canTensorify([true, false, true])).toBeTruthy();\n    });\n\n    it('returns true for TypedArrays', () => {\n      expect(canTensorify(new Float32Array([1, 2, 3]))).toBeTruthy();\n      expect(canTensorify(new Int32Array([1, 2, 3]))).toBeTruthy();\n    });\n\n    it('returns true for Tensors', () => {\n      expect(canTensorify(tf.tensor([1, 2, 3]))).toBeTruthy();\n    });\n\n    it('returns false for non-Tensor objects', () => {\n      expect(canTensorify({a: 1, b: 2, c: 3})).toBeFalsy();\n    });\n  });\n});\n"]}