{"version":3,"file":"readers_test.js","sourceRoot":"","sources":["../src/readers_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfd from './readers';\nimport {describeAllEnvs, describeBrowserEnvs, describeNodeEnvs, replaceHTMLVideoElementSource, setupFakeVideoStream} from './util/test_utils';\n\ndescribeAllEnvs('readers', () => {\n  it('generate dataset from function', async () => {\n    let i = -1;\n    const f = () =>\n        ++i < 5 ? {value: i, done: false} : {value: null, done: true};\n    const ds = tfd.func(f);\n    const result = await ds.toArrayForTest();\n    expect(result).toEqual([0, 1, 2, 3, 4]);\n  });\n\n  it('generate dataset from JavaScript generator', async () => {\n    function* dataGenerator() {\n      const numElements = 5;\n      let index = 0;\n      while (index < numElements) {\n        const x = index;\n        index++;\n        yield x;\n      }\n    }\n    const ds = tfd.generator(dataGenerator);\n    const result = await ds.toArrayForTest();\n    expect(result).toEqual([0, 1, 2, 3, 4]);\n  });\n\n  it('generate multiple datasets from JavaScript generator', async () => {\n    function* dataGenerator() {\n      const numElements = 5;\n      let index = 0;\n      while (index < numElements) {\n        const x = index;\n        index++;\n        yield x;\n      }\n    }\n    const ds = tfd.generator(dataGenerator);\n    const result1 = await ds.toArrayForTest();\n    expect(result1).toEqual([0, 1, 2, 3, 4]);\n    const result2 = await ds.toArrayForTest();\n    expect(result2).toEqual([0, 1, 2, 3, 4]);\n  });\n\n  it('generate dataset from JavaScript iterator factory', async () => {\n    function makeIterator() {\n      let iterationCount = 0;\n      const iterator = {\n        next: () => {\n          let result;\n          if (iterationCount < 5) {\n            result = {value: iterationCount, done: false};\n            iterationCount++;\n            return result;\n          }\n          return {value: iterationCount, done: true};\n        }\n      };\n      return iterator;\n    }\n    const ds = tfd.generator(makeIterator);\n    const result = await ds.toArrayForTest();\n    expect(result).toEqual([0, 1, 2, 3, 4]);\n  });\n\n  it('generate multiple datasets from JavaScript iterator factory',\n     async () => {\n       function makeIterator() {\n         let iterationCount = 0;\n         const iterator = {\n           next: () => {\n             let result;\n             if (iterationCount < 5) {\n               result = {value: iterationCount, done: false};\n               iterationCount++;\n               return result;\n             }\n             return {value: iterationCount, done: true};\n           }\n         };\n         return iterator;\n       }\n       const ds = tfd.generator(makeIterator);\n       const result1 = await ds.toArrayForTest();\n       expect(result1).toEqual([0, 1, 2, 3, 4]);\n       const result2 = await ds.toArrayForTest();\n       expect(result2).toEqual([0, 1, 2, 3, 4]);\n     });\n\n  it('generate dataset from async iterator factory', async () => {\n    async function waitAndCreateCount() {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve(3);\n        }, 1000);\n      });\n    }\n    async function makeIterator() {\n      let iterationCount = (await waitAndCreateCount()) as number;\n      const iterator = {\n        next: () => {\n          let result;\n          if (iterationCount < 6) {\n            result = {value: iterationCount, done: false};\n            iterationCount++;\n            return result;\n          }\n          return {value: iterationCount, done: true};\n        }\n      };\n      return iterator;\n    }\n    const ds = tfd.generator(makeIterator);\n    const result = await ds.toArrayForTest();\n    expect(result).toEqual([3, 4, 5]);\n  });\n});\n\ndescribeBrowserEnvs('readers in browser', () => {\n  it('generate data from webcam with HTML element', async () => {\n    setupFakeVideoStream();\n    const videoElement = document.createElement('video');\n    videoElement.width = 160;\n    videoElement.height = 90;\n\n    const webcamIterator = await tfd.webcam(videoElement);\n    await replaceHTMLVideoElementSource(videoElement);\n    const result = await webcamIterator.next();\n    expect(result.done).toBeFalsy();\n    expect(result.value.shape).toEqual([90, 160, 3]);\n  });\n\n  it('generate data from webcam with no HTML element', async () => {\n    setupFakeVideoStream();\n    const webcamIterator =\n        await tfd.webcam(null, {resizeWidth: 300, resizeHeight: 150});\n    const result = await webcamIterator.next();\n    expect(result.done).toBeFalsy();\n    expect(result.value.shape).toEqual([150, 300, 3]);\n  });\n\n  it('generate data from webcam with HTML element and resize', async () => {\n    setupFakeVideoStream();\n    const videoElement = document.createElement('video');\n    videoElement.width = 300;\n    videoElement.height = 500;\n\n    const webcamIterator = await tfd.webcam(\n        videoElement, {resizeWidth: 100, resizeHeight: 200, centerCrop: true});\n    const result = await webcamIterator.next();\n    expect(result.done).toBeFalsy();\n    expect(result.value.shape).toEqual([200, 100, 3]);\n  });\n});\n\ndescribeNodeEnvs('readers in node', () => {\n  it('webcam only available in browser env', async done => {\n    try {\n      await tfd.webcam();\n      done.fail();\n    } catch (e) {\n      expect(e.message).toEqual(\n          'tf.data.webcam is only supported in browser environment.');\n      done();\n    }\n  });\n\n  it('microphone only available in browser env', async done => {\n    try {\n      await tfd.microphone();\n      done.fail();\n    } catch (e) {\n      expect(e.message).toEqual(\n          'microphone API is only supported in browser environment.');\n      done();\n    }\n  });\n});\n"]}