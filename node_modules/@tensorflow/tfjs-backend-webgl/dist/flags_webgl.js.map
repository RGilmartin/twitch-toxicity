{"version":3,"file":"flags_webgl.js","sourceRoot":"","sources":["../src/flags_webgl.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {device_util, env} from '@tensorflow/tfjs-core';\n\nimport {getMaxTexturesInShader, getWebGLDisjointQueryTimerVersion, getWebGLMaxTextureSize, isCapableOfRenderingToFloatTexture, isDownloadFloatTextureEnabled, isWebGLFenceEnabled, isWebGLVersionEnabled} from './webgl_util';\n\nconst ENV = env();\n\n/**\n * This file contains WebGL-specific flag registrations.\n */\n\n/**\n * True if WebGL is supported.\n */\nENV.registerFlag('HAS_WEBGL', () => ENV.getNumber('WEBGL_VERSION') > 0);\n\n/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */\nENV.registerFlag('WEBGL_VERSION', () => {\n  if (isWebGLVersionEnabled(2)) {\n    return 2;\n  } else if (isWebGLVersionEnabled(1)) {\n    return 1;\n  }\n  return 0;\n});\n\n/** Whether to check for numerical representation problems. */\nENV.registerFlag('WEBGL_CHECK_NUMERICAL_PROBLEMS', () => false);\n\nENV.registerFlag(\n    'WEBGL_BUFFER_SUPPORTED', () => ENV.get('WEBGL_VERSION') === 2);\n\n/** Whether the WebGL backend will sometimes forward ops to the CPU. */\nENV.registerFlag('WEBGL_CPU_FORWARD', () => true);\n\n/** Whether the WebGL backend will always use f16 textures for rendering. */\nENV.registerFlag('WEBGL_FORCE_F16_TEXTURES', () => false);\n\n/** Whether to turn all packing related flags on. */\nENV.registerFlag('WEBGL_PACK', () => ENV.getBool('HAS_WEBGL'));\n\n/** Whether we will pack the batchnormalization op. */\nENV.registerFlag('WEBGL_PACK_NORMALIZATION', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack the clip op. */\nENV.registerFlag('WEBGL_PACK_CLIP', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack the depthwise conv op. */\nENV.registerFlag('WEBGL_PACK_DEPTHWISECONV', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack binary ops. */\nENV.registerFlag(\n    'WEBGL_PACK_BINARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack unary ops. */\nENV.registerFlag(\n    'WEBGL_PACK_UNARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack array ops. */\nENV.registerFlag(\n    'WEBGL_PACK_ARRAY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack image ops. */\nENV.registerFlag(\n    'WEBGL_PACK_IMAGE_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack reduce ops. */\nENV.registerFlag('WEBGL_PACK_REDUCE', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether packed WebGL kernels lazily unpack their outputs. */\nENV.registerFlag('WEBGL_LAZILY_UNPACK', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will use the im2col algorithm to speed up convolutions. */\nENV.registerFlag('WEBGL_CONV_IM2COL', () => ENV.getBool('WEBGL_PACK'));\n\n/** The maximum texture dimension. */\nENV.registerFlag(\n    'WEBGL_MAX_TEXTURE_SIZE',\n    () => getWebGLMaxTextureSize(ENV.getNumber('WEBGL_VERSION')));\n\n/** The maximum texture dimension. */\nENV.registerFlag(\n    'WEBGL_MAX_TEXTURES_IN_SHADER',\n    () => getMaxTexturesInShader(ENV.getNumber('WEBGL_VERSION')));\n\n/**\n * The disjoint_query_timer extension version.\n * 0: disabled, 1: EXT_disjoint_timer_query, 2:\n * EXT_disjoint_timer_query_webgl2.\n * In Firefox with WebGL 2.0,\n * EXT_disjoint_timer_query_webgl2 is not available, so we must use the\n * WebGL 1.0 extension.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', () => {\n  const webGLVersion = ENV.getNumber('WEBGL_VERSION');\n\n  if (webGLVersion === 0) {\n    return 0;\n  }\n  return getWebGLDisjointQueryTimerVersion(webGLVersion);\n});\n\n/**\n * Whether the timer object from the disjoint_query_timer extension gives\n * timing information that is reliable.\n */\nENV.registerFlag(\n    'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE',\n    () => ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n        !device_util.isMobile());\n\n/**\n * Whether the device is physically capable of rendering to float32 textures.\n */\nENV.registerFlag(\n    'WEBGL_RENDER_FLOAT32_CAPABLE',\n    () => isCapableOfRenderingToFloatTexture(ENV.getNumber('WEBGL_VERSION')));\n\n/**\n * Whether rendering to float32 textures is enabled. If disabled, renders to\n * float16 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_ENABLED', () => {\n  return ENV.getBool('WEBGL_FORCE_F16_TEXTURES') ?\n      false :\n      ENV.getBool('WEBGL_RENDER_FLOAT32_CAPABLE');\n});\n\n/**\n * Whether downloading float textures is enabled (16 or 32 bit). If disabled,\n * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.\n */\nENV.registerFlag(\n    'WEBGL_DOWNLOAD_FLOAT_ENABLED',\n    () => isDownloadFloatTextureEnabled(ENV.getNumber('WEBGL_VERSION')));\n\n/** Whether the fence API is available. */\nENV.registerFlag(\n    'WEBGL_FENCE_API_ENABLED',\n    () => isWebGLFenceEnabled(ENV.getNumber('WEBGL_VERSION')));\n\n/**\n * Tensors with size <= than this will be uploaded as uniforms, not textures.\n */\nENV.registerFlag('WEBGL_SIZE_UPLOAD_UNIFORM', () => {\n  // Use uniform uploads only when 32bit floats are supported. In\n  // 16bit\n  // environments there are problems with comparing a 16bit texture value\n  // with a 32bit uniform value.\n  const useUniforms = ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n  return useUniforms ? 4 : 0;\n});\n\n/**\n * If the total number of bytes allocated on the GPU is greater than this\n * number, we will aggressively delete textures upon disposal with\n * gl.deleteMatrixTexture, rather than making them available for reuse.\n *\n * Default value -1 indicates that we will never aggressively delete textures.\n */\nENV.registerFlag(\n    'WEBGL_DELETE_TEXTURE_THRESHOLD',\n    () => {\n      return -1;\n    },\n    threshold => {\n      if (threshold < 0 && threshold !== -1) {\n        throw new Error(\n            `WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never ` +\n            `delete) or at least 0, but got ${threshold}.`);\n      }\n    });\n\n/**\n * Trigger a manual GL command flush if the threshold of time has passed since\n * previous Kernel execution. This can be useful for Andorid device where GL\n * command flush are delayed un til the end of javascript task. This value is\n * measured in millisecond. Typically you want to set this value to close to 1.\n *\n * Default value 1 for mobile chrome, and -1 for rest cases. -1 indicates that\n * we will not enforce manual flush and depend on system default flush schedule.\n */\nENV.registerFlag(\n    'WEBGL_FLUSH_THRESHOLD',\n    () => {\n      return device_util.isMobile() && ENV.getBool('IS_CHROME') ? 1 : -1;\n    },\n    threshold => {\n      if (threshold < 0 && threshold !== -1) {\n        throw new Error(\n            `WEBGL_FLUSH_THRESHOLD must be -1 (indicating never ` +\n            `manual flush) or at least 0, but got ${threshold}.`);\n      }\n    });\n"]}