{"version":3,"file":"webgl_custom_op_test.js","sourceRoot":"","sources":["../src/webgl_custom_op_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {engine, Tensor, TensorInfo, test_util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nimport {WEBGL_ENVS} from './backend_webgl_test_registry';\nimport {GPGPUProgram, MathBackendWebGL} from './webgl';\n\ndescribeWithFlags('custom-op webgl', WEBGL_ENVS, () => {\n  class SquareAndAddKernel implements GPGPUProgram {\n    variableNames = ['X'];\n    outputShape: number[];\n    userCode: string;\n    constructor(inputShape: number[]) {\n      this.outputShape = inputShape.slice();\n\n      this.userCode = `\n          void main() {\n            float x = getXAtOutCoords();\n            float value = x * x + x;\n            setOutput(value);\n          }\n        `;\n    }\n  }\n\n  class SquareAndAddBackpropKernel implements GPGPUProgram {\n    variableNames = ['X'];\n    outputShape: number[];\n    userCode: string;\n    constructor(inputShape: number[]) {\n      this.outputShape = inputShape.slice();\n\n      this.userCode = `\n          void main() {\n            float x = getXAtOutCoords();\n            float value = 2.0 * x + 1.0;\n            setOutput(value);\n          }\n        `;\n    }\n  }\n\n  function squareAndAdd<T extends tf.Tensor>(x: T): T {\n    const fn = tf.customGrad((x: T, save: tf.GradSaveFunc) => {\n      save([x]);\n      const webglBackend = tf.backend() as MathBackendWebGL;\n      const program = new SquareAndAddKernel(x.shape);\n      const backpropProgram = new SquareAndAddBackpropKernel(x.shape);\n\n      const outInfo: TensorInfo = webglBackend.compileAndRun(program, [x]);\n      const value = engine().makeTensorFromDataId(\n                        outInfo.dataId, outInfo.shape, outInfo.dtype) as T;\n\n      const gradFunc = (dy: T, saved: Tensor[]) => {\n        const [x] = saved;\n        const backInfo = webglBackend.compileAndRun(backpropProgram, [x]);\n        const back: T =\n            engine().makeTensorFromDataId(\n                backInfo.dataId, backInfo.shape, backInfo.dtype) as T;\n        return back.mul(dy);\n      };\n      return {value, gradFunc};\n    });\n    return fn(x);\n  }\n\n  it('lets users use custom operations', async () => {\n    const inputArr = [1, 2, 3, 4];\n    const input = tf.tensor(inputArr);\n    const output = squareAndAdd(input);\n    test_util.expectArraysClose(\n        await output.data(), inputArr.map(x => x * x + x));\n  });\n\n  it('lets users define gradients for operations', async () => {\n    const inputArr = [1, 2, 3, 4];\n    const input = tf.tensor(inputArr);\n    const grads = tf.valueAndGrad(x => squareAndAdd(x));\n    const {value, grad} = grads(input);\n    test_util.expectArraysClose(\n        await value.data(), inputArr.map(x => x * x + x));\n    test_util.expectArraysClose(\n        await grad.data(), inputArr.map(x => 2 * x + 1));\n  });\n\n  it('multiplies by dy parameter when it is passed', async () => {\n    const inputArr = [1, 2, 3, 4];\n    const input = tf.tensor(inputArr);\n    const grads = tf.valueAndGrad(x => squareAndAdd(x));\n    const {value, grad} = grads(input, tf.zerosLike(input));\n    test_util.expectArraysClose(\n        await value.data(), inputArr.map(x => x * x + x));\n    test_util.expectArraysClose(await grad.data(), inputArr.map(() => 0.0));\n  });\n});\n"]}