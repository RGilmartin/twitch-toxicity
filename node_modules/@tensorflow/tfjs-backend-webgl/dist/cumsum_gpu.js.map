{"version":3,"file":"cumsum_gpu.js","sourceRoot":"","sources":["../src/cumsum_gpu.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class CumSumProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  // Caching uniform location for speed.\n  index: WebGLUniformLocation;\n\n  constructor(shape: number[], exclusive: boolean, reverse: boolean) {\n    this.outputShape = shape;\n    const rank = shape.length;\n    const val = exclusive ? '0.0' : `getX(${getCoords(rank, 'coords')})`;\n    const length = shape[shape.length - 1];\n    let condition = '';\n    let idxString = '';\n    // When exclusive is set, the cumsum op becomes roll op that copies the\n    // value from the previous index based on the direction specified by the\n    // reverse flag.\n    if (exclusive) {\n      condition = reverse ? `end != ${length - 1}` : 'end != 0';\n      idxString = reverse ? 'end + 1' : 'end - 1';\n    } else {\n      condition = reverse ? `end + pow2 < ${length}` : 'end >= pow2';\n      idxString = (reverse ? 'end + pow2' : 'end - pow2');\n    }\n\n    this.userCode = `\n      uniform float index;\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords')};\n        float val = ${val};\n        int pow2 = int(pow(2.0, index));\n        if (${condition}) {\n          int idx = ${idxString};\n          ${getFinalCoord(rank, 'coords')} = idx;\n          val += getX(${getCoords(rank, 'coords')});\n        }\n        setOutput(val);\n      }\n    `;\n  }\n\n  getCustomSetupFunc(index: number) {\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.index == null) {\n        this.index = gpgpu.getUniformLocation(webGLProgram, 'index');\n      }\n      gpgpu.gl.uniform1f(this.index, index);\n    };\n  }\n}\n\nfunction getCoords(rank: number, name: string): string {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.x, ${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.x, ${name}.y, ${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n  } else {\n    throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n  }\n}\n\nfunction getFinalCoord(rank: number, name: string): string {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.w`;\n  } else {\n    throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n  }\n}\n"]}