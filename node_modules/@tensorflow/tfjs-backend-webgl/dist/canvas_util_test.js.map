{"version":3,"file":"canvas_util_test.js","sourceRoot":"","sources":["../src/canvas_util_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC5C,iDAAiD;AACjD,OAAO,EAAC,YAAY,EAAE,iBAAiB,EAAC,MAAM,yCAAyC,CAAC;AAExF,OAAO,EAAC,eAAe,EAAC,MAAM,eAAe,CAAC;AAE9C,iBAAiB,CAAC,aAAa,EAAE,YAAY,EAAE,GAAG,EAAE;IAClD,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,MAAM,GACR,eAAe,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,MAE9C,CAAC;QACZ,MAAM,CACF,CAAC,MAAM,YAAY,iBAAiB,CAAC;YACrC,CAAC,MAAM,YAAY,eAAe,CAAC,CAAC;aACnC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,MAAM,EAAE,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,iBAAiB,CAAC,oBAAoB,EAAE,EAAC,KAAK,EAAE,EAAC,aAAa,EAAE,CAAC,EAAC,EAAC,EAAE,GAAG,EAAE;IACxE,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,MAAM,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {BROWSER_ENVS, describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nimport {getWebGLContext} from './canvas_util';\n\ndescribeWithFlags('canvas_util', BROWSER_ENVS, () => {\n  it('Returns a valid canvas', () => {\n    const canvas =\n        getWebGLContext(tf.env().getNumber('WEBGL_VERSION')).canvas as\n            // tslint:disable-next-line: no-any\n            any;\n    expect(\n        (canvas instanceof HTMLCanvasElement) ||\n        (canvas instanceof OffscreenCanvas))\n        .toBe(true);\n  });\n\n  it('Returns a valid gl context', () => {\n    const gl = getWebGLContext(tf.env().getNumber('WEBGL_VERSION'));\n    expect(gl.isContextLost()).toBe(false);\n  });\n});\n\ndescribeWithFlags('canvas_util webgl2', {flags: {WEBGL_VERSION: 2}}, () => {\n  it('is ok when the user requests webgl 1 canvas', () => {\n    const canvas = getWebGLContext(1).canvas;\n    expect(canvas.getContext != null).toBe(true);\n  });\n});\n"]}