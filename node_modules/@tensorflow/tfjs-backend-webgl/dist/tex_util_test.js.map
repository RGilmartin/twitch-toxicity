{"version":3,"file":"tex_util_test.js","sourceRoot":"","sources":["../src/tex_util_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// tslint:disable-next-line: no-imports-from-dist\nimport {test_util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nconst {expectArraysClose} = test_util;\nimport {WEBGL_ENVS} from './backend_webgl_test_registry';\nimport * as tex_util from './tex_util';\n\ndescribe('tex_util getUnpackedMatrixTextureShapeWidthHeight', () => {\n  it('[1x1] => [1x1]', () => {\n    expect(tex_util.getUnpackedMatrixTextureShapeWidthHeight(1, 1)).toEqual([\n      1, 1\n    ]);\n  });\n\n  it('[MxN] => [NxM]', () => {\n    expect(tex_util.getUnpackedMatrixTextureShapeWidthHeight(123, 456))\n        .toEqual([456, 123]);\n  });\n});\n\ndescribe('tex_util getPackedMatrixTextureShapeWidthHeight', () => {\n  it('[1x1] => [1x1]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(1, 1);\n    expect(shape).toEqual([1, 1]);\n  });\n\n  it('[1x2] => [1x1]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(1, 2);\n    expect(shape).toEqual([1, 1]);\n  });\n\n  it('[2x1] => [1x1]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(2, 1);\n    expect(shape).toEqual([1, 1]);\n  });\n\n  it('[2x2] => [1x1]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(2, 2);\n    expect(shape).toEqual([1, 1]);\n  });\n\n  it('[3x3] => [2x2]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(3, 3);\n    expect(shape).toEqual([2, 2]);\n  });\n\n  it('[4x3] => [2x2]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(4, 3);\n    expect(shape).toEqual([2, 2]);\n  });\n\n  it('[3x4] => [2x2]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(3, 4);\n    expect(shape).toEqual([2, 2]);\n  });\n\n  it('[4x4] => [2x2]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(4, 4);\n    expect(shape).toEqual([2, 2]);\n  });\n\n  it('[1024x1024] => [512x512]', () => {\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(1024, 1024);\n    expect(shape).toEqual([512, 512]);\n  });\n\n  it('[MxN] => [ceil(N/2)xceil(M/2)]', () => {\n    const M = 123;\n    const N = 5013;\n    const shape = tex_util.getPackedMatrixTextureShapeWidthHeight(M, N);\n    expect(shape).toEqual([Math.ceil(N / 2), Math.ceil(M / 2)]);\n  });\n});\n\ndescribeWithFlags('tex_util getDenseTexShape', WEBGL_ENVS, () => {\n  it('basic', () => {\n    const shape = [1, 3, 3, 4];\n    const denseShape = tex_util.getDenseTexShape(shape);\n    expectArraysClose(denseShape, [3, 3]);\n  });\n});\n"]}