{"version":3,"file":"gpgpu_context_test.js","sourceRoot":"","sources":["../src/gpgpu_context_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nimport {WEBGL_ENVS} from './backend_webgl_test_registry';\nimport * as canvas_util from './canvas_util';\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUContext, linearSearchLastTrue} from './gpgpu_context';\nimport * as tex_util from './tex_util';\n\nconst DOWNLOAD_FLOAT_ENVS = {\n  flags: {'WEBGL_DOWNLOAD_FLOAT_ENABLED': true},\n  predicate: WEBGL_ENVS.predicate\n};\n\ndescribeWithFlags(\n    'GPGPUContext setOutputMatrixTexture', DOWNLOAD_FLOAT_ENVS, () => {\n      let gpgpu: GPGPUContext;\n      let texture: WebGLTexture;\n      let gl: WebGLRenderingContext;\n\n      beforeEach(() => {\n        canvas_util.clearWebGLContext(tf.env().getNumber('WEBGL_VERSION'));\n        gl = canvas_util.getWebGLContext(tf.env().getNumber('WEBGL_VERSION'));\n        gpgpu = new GPGPUContext(gl);\n        // Silences debug warnings.\n        spyOn(console, 'warn');\n        tf.enableDebugMode();\n      });\n\n      afterEach(() => {\n        if (texture != null) {\n          gpgpu.deleteMatrixTexture(texture);\n        }\n        gpgpu.dispose();\n      });\n\n      it('sets the output texture property to the output texture', () => {\n        texture = gpgpu.createFloat32MatrixTexture(1, 1);\n        gpgpu.setOutputMatrixTexture(texture, 1, 1);\n        expect(gpgpu.outputTexture).toBe(texture);\n      });\n\n      it('sets the gl viewport to the output texture dimensions', () => {\n        const columns = 456;\n        const rows = 123;\n        texture = gpgpu.createFloat32MatrixTexture(rows, columns);\n        gpgpu.setOutputMatrixTexture(texture, rows, columns);\n        const expected = new Int32Array([0, 0, columns, rows]);\n        expect(gpgpu.gl.getParameter(gpgpu.gl.VIEWPORT)).toEqual(expected);\n      });\n    });\n\ndescribeWithFlags(\n    'GPGPUContext setOutputPackedMatrixTexture', DOWNLOAD_FLOAT_ENVS, () => {\n      let gpgpu: GPGPUContext;\n      let texture: WebGLTexture;\n      let gl: WebGLRenderingContext;\n\n      beforeEach(() => {\n        canvas_util.clearWebGLContext(tf.env().getNumber('WEBGL_VERSION'));\n        gl = canvas_util.getWebGLContext(tf.env().getNumber('WEBGL_VERSION'));\n        gpgpu = new GPGPUContext(gl);\n        // Silences debug warnings.\n        spyOn(console, 'warn');\n        tf.enableDebugMode();\n      });\n\n      afterEach(() => {\n        if (texture != null) {\n          gpgpu.deleteMatrixTexture(texture);\n        }\n        gpgpu.dispose();\n      });\n\n      it('sets the output texture property to the output texture', () => {\n        texture = gpgpu.createPackedMatrixTexture(1, 1);\n        gpgpu.setOutputPackedMatrixTexture(texture, 1, 1);\n        expect(gpgpu.outputTexture).toBe(texture);\n      });\n\n      it('sets the gl viewport to the output packed texture dimensions', () => {\n        const columns = 456;\n        const rows = 123;\n        texture = gpgpu.createPackedMatrixTexture(rows, columns);\n        gpgpu.setOutputPackedMatrixTexture(texture, rows, columns);\n        const [width, height] =\n            tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n        const expected = new Int32Array([0, 0, width, height]);\n        expect(gpgpu.gl.getParameter(gpgpu.gl.VIEWPORT)).toEqual(expected);\n      });\n    });\n\ndescribeWithFlags(\n    'GPGPUContext setOutputMatrixWriteRegion', DOWNLOAD_FLOAT_ENVS, () => {\n      let gpgpu: GPGPUContext;\n      let program: WebGLProgram;\n      let output: WebGLTexture;\n\n      beforeEach(() => {\n        gpgpu = new GPGPUContext();\n        // Silences debug warnings.\n        spyOn(console, 'warn');\n        tf.enableDebugMode();\n        const glsl = getGlslDifferences();\n        const src = `${glsl.version}\n          precision highp float;\n          ${glsl.defineOutput}\n          void main() {\n            ${glsl.output} = vec4(2,0,0,0);\n          }\n        `;\n        program = gpgpu.createProgram(src);\n        output = gpgpu.createFloat32MatrixTexture(4, 4);\n        gpgpu.uploadDenseMatrixToTexture(output, 4, 4, new Float32Array(16));\n        gpgpu.setOutputMatrixTexture(output, 4, 4);\n        gpgpu.setProgram(program);\n      });\n\n      afterEach(() => {\n        gpgpu.deleteMatrixTexture(output);\n        gpgpu.deleteProgram(program);\n        gpgpu.dispose();\n      });\n\n      it('sets the scissor box to the requested parameters', () => {\n        gpgpu.setOutputMatrixWriteRegion(0, 1, 2, 3);\n        const scissorBox = gpgpu.gl.getParameter(gpgpu.gl.SCISSOR_BOX);\n        expect(scissorBox[0]).toEqual(2);\n        expect(scissorBox[1]).toEqual(0);\n        expect(scissorBox[2]).toEqual(3);\n        expect(scissorBox[3]).toEqual(1);\n      });\n    });\n\ndescribeWithFlags('GPGPUContext', DOWNLOAD_FLOAT_ENVS, () => {\n  let gpgpu: GPGPUContext;\n\n  beforeEach(() => {\n    gpgpu = new GPGPUContext();\n    // Silences debug warnings.\n    spyOn(console, 'warn');\n    tf.enableDebugMode();\n  });\n\n  afterEach(() => {\n    gpgpu.dispose();\n  });\n\n  it('throws an error if used after dispose', () => {\n    const gpgpuContext = new GPGPUContext();\n    gpgpuContext.dispose();\n    expect(gpgpuContext.dispose).toThrowError();\n  });\n\n  it('throws an error if validation is on and framebuffer incomplete', () => {\n    const glsl = getGlslDifferences();\n    const src = `${glsl.version}\n      precision highp float;\n      void main() {}\n    `;\n    const program = gpgpu.createProgram(src);\n    const result = gpgpu.createFloat32MatrixTexture(1, 1);\n    gpgpu.setOutputMatrixTexture(result, 1, 1);\n    gpgpu.setProgram(program);\n    gpgpu.deleteMatrixTexture(result);\n    expect(gpgpu.executeProgram).toThrowError();\n    gpgpu.deleteProgram(program);\n  });\n});\n\ndescribe('gpgpu_context linearSearchLastTrue', () => {\n  it('[false]', () => {\n    const a: boolean[] = [false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(-1);\n  });\n\n  it('[true]', () => {\n    const a: boolean[] = [true];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(0);\n  });\n\n  it('[false, false]', () => {\n    const a: boolean[] = [false, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(-1);\n  });\n\n  it('[true, false]', () => {\n    const a: boolean[] = [true, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(0);\n  });\n\n  it('[true, true]', () => {\n    const a: boolean[] = [true, true];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(1);\n  });\n\n  it('[false, false, false]', () => {\n    const a: boolean[] = [false, false, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(-1);\n  });\n\n  it('[true, false, false]', () => {\n    const a: boolean[] = [true, false, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(0);\n  });\n\n  it('[true, true, false]', () => {\n    const a: boolean[] = [true, true, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(1);\n  });\n\n  it('[true, true, true]', () => {\n    const a: boolean[] = [true, true, true];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(2);\n  });\n\n  it('[false, false, false, false]', () => {\n    const a: boolean[] = [false, false, false, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(-1);\n  });\n\n  it('[true, false, false, false]', () => {\n    const a: boolean[] = [true, false, false, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(0);\n  });\n\n  it('[true, true, false, false]', () => {\n    const a: boolean[] = [true, true, false, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(1);\n  });\n\n  it('[true, true, true, false]', () => {\n    const a: boolean[] = [true, true, true, false];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(2);\n  });\n\n  it('[true, true, true, true]', () => {\n    const a: boolean[] = [true, true, true, true];\n    const arr = a.map(x => () => x);\n    expect(linearSearchLastTrue(arr)).toBe(3);\n  });\n});\n"]}