{"version":3,"file":"Mean_test.js","sourceRoot":"","sources":["../../src/kernels/Mean_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAC,SAAS,EAAC,MAAM,uBAAuB,CAAC;AAEhD,MAAM,EAAC,iBAAiB,EAAC,GAAG,SAAS,CAAC;AACtC,iDAAiD;AACjD,OAAO,EAAC,QAAQ,EAAE,iBAAiB,EAAC,MAAM,yCAAyC,CAAC;AAEpF,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,aAAa,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAEvD,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAErB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAErC,MAAM,eAAe,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QACzD,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;QAEnD,CAAC,CAAC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,OAAO,EAAE,CAAC;QAEZ,MAAM,mBAAmB,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC7D,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {test_util} from '@tensorflow/tfjs-core';\n\nconst {expectArraysClose} = test_util;\n// tslint:disable-next-line: no-imports-from-dist\nimport {ALL_ENVS, describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\ndescribeWithFlags('Mean.', ALL_ENVS, () => {\n  it('does not have memory leak and works for large dimensions.', async () => {\n    const beforeDataIds = tf.engine().backend.numDataIds();\n\n    const a = tf.ones([1, 70000]);\n    const r = tf.mean(a);\n\n    expect(r.dtype).toBe('float32');\n    expectArraysClose(await r.data(), 1);\n\n    const afterResDataIds = tf.engine().backend.numDataIds();\n    expect(afterResDataIds).toEqual(beforeDataIds + 2);\n\n    a.dispose();\n    r.dispose();\n\n    const afterDisposeDataIds = tf.engine().backend.numDataIds();\n    expect(afterDisposeDataIds).toEqual(beforeDataIds);\n  });\n});\n"]}