{"version":3,"file":"webgl_util_test.js","sourceRoot":"","sources":["../src/webgl_util_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nimport {WEBGL_ENVS} from './backend_webgl_test_registry';\nimport * as webgl_util from './webgl_util';\n\ndescribeWithFlags('getTextureShapeFromLogicalShape', WEBGL_ENVS, () => {\n  it('scalar', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([]);\n    expect(texShape).toEqual([1, 1]);\n  });\n\n  it('1d', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([4]);\n    expect(texShape).toEqual([1, 4]);\n  });\n\n  it('2d stays same', () => {\n    let texShape = webgl_util.getTextureShapeFromLogicalShape([5, 2]);\n    expect(texShape).toEqual([5, 2]);\n\n    texShape = webgl_util.getTextureShapeFromLogicalShape([5, 1]);\n    expect(texShape).toEqual([5, 1]);\n\n    texShape = webgl_util.getTextureShapeFromLogicalShape([1, 5]);\n    expect(texShape).toEqual([1, 5]);\n  });\n\n  it('3d 2x3x4', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([2, 3, 4]);\n    expect(texShape).toEqual([6, 4]);\n  });\n\n  it('3d 3x256x256', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([3, 256, 256]);\n    expect(texShape).toEqual([3 * 256, 256]);\n  });\n\n  it('3d 2x1x4 got squeezed', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([2, 1, 4]);\n    expect(texShape).toEqual([2, 4]);\n  });\n\n  it('3d 1x8x2 got squeezed', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([1, 8, 2]);\n    expect(texShape).toEqual([8, 2]);\n  });\n\n  it('4d 2x2x256x256 got squeezed', () => {\n    const texShape =\n        webgl_util.getTextureShapeFromLogicalShape([2, 2, 256, 256]);\n    expect(texShape).toEqual([2 * 2 * 256, 256]);\n  });\n\n  it('4d 1x8x1x3 got squeezed', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([1, 8, 1, 3]);\n    expect(texShape).toEqual([8, 3]);\n  });\n\n  it('4d 1x3x1x8 got squeezed', () => {\n    const texShape = webgl_util.getTextureShapeFromLogicalShape([1, 3, 1, 8]);\n    expect(texShape).toEqual([3, 8]);\n  });\n});\n\ndescribeWithFlags('getTextureShapeFromLogicalShape packed', WEBGL_ENVS, () => {\n  it('textures less than 2x max size of platform preserve their shapes', () => {\n    const isPacked = true;\n    const logicalShape = [\n      2,\n      util.nearestLargerEven(tf.env().getNumber('WEBGL_MAX_TEXTURE_SIZE') + 1)\n    ];\n    const texShape =\n        webgl_util.getTextureShapeFromLogicalShape(logicalShape, isPacked);\n    expect(texShape).toEqual(logicalShape);\n  });\n\n  it('rows/columns do not get squeezed', () => {\n    const isPacked = true;\n    const logicalShape = [1, 1, 1];\n    const texShape =\n        webgl_util.getTextureShapeFromLogicalShape(logicalShape, isPacked);\n    expect(texShape).toEqual([2, 2]);\n  });\n\n  it('squarified texture shapes account for packing constraints', () => {\n    const isPacked = true;\n    const max = tf.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', 5);\n    const logicalShape = [1, 12];\n    const texShape =\n        webgl_util.getTextureShapeFromLogicalShape(logicalShape, isPacked);\n\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', max);\n    expect(texShape).toEqual([6, 4]);\n  });\n});\n\ndescribeWithFlags('isReshapeFree', WEBGL_ENVS, () => {\n  it('is free when shapes have the same inner dimensions', () => {\n    const before = [1, 2, 3];\n    const after = [5, 2, 3];\n    expect(webgl_util.isReshapeFree(before, after)).toBe(true);\n  });\n\n  it('is free when one of the shapes is a scalar', () => {\n    const before: number[] = [];\n    const after = [1, 2, 3];\n    expect(webgl_util.isReshapeFree(before, after)).toBe(true);\n  });\n\n  it('is free when one of the dimensions equals 0', () => {\n    const before = [1, 0];\n    const after = [1, 2, 3];\n    expect(webgl_util.isReshapeFree(before, after)).toBe(true);\n  });\n\n  it('is free when one shape is a vector and the final dimensions match',\n     () => {\n       const before = [9];\n       const after = [1, 1, 9];\n       expect(webgl_util.isReshapeFree(before, after)).toBe(true);\n     });\n\n  it('is free when one shape is a vector and the other has 1 row' +\n         'in every batch and the final dimensions are even',\n     () => {\n       const before = [10];\n       const after = [5, 1, 2];\n       expect(webgl_util.isReshapeFree(before, after)).toBe(true);\n     });\n\n  it('is not free when one shape is a vector and the final dimensions' +\n         'do not match and are not even',\n     () => {\n       const before = [18];\n       const after = [2, 1, 9];\n       expect(webgl_util.isReshapeFree(before, after)).toBe(false);\n     });\n\n  it('is free if the rows are divisible by two and the columns are the same',\n     () => {\n       const before = [1, 2, 3];\n       const after = [1, 4, 3];\n       expect(webgl_util.isReshapeFree(before, after)).toBe(true);\n     });\n\n  it('is not free when the inner dimensions are different and even', () => {\n    const before = [1, 2, 4];\n    const after = [1, 8, 10];\n    expect(webgl_util.isReshapeFree(before, after)).toBe(false);\n  });\n\n  it('is not free when the inner dimensions are different and not all even',\n     () => {\n       const before = [1, 2, 3];\n       const after = [1, 3, 2];\n       expect(webgl_util.isReshapeFree(before, after)).toBe(false);\n     });\n});\n"]}