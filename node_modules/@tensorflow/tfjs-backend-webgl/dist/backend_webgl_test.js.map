{"version":3,"file":"backend_webgl_test.js","sourceRoot":"","sources":["../src/backend_webgl_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {engine, test_util, util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\nconst {expectArraysClose, expectArraysEqual} = test_util;\nconst {decodeString} = util;\n\nimport {getBinaryCache, MathBackendWebGL, WebGLMemoryInfo, WebGLTimingInfo} from './backend_webgl';\nimport {computeBytes} from './texture_manager';\nimport {PhysicalTextureType} from './tex_util';\nimport {WEBGL_ENVS} from './backend_webgl_test_registry';\nimport {GPGPUContext} from './gpgpu_context';\n\nfunction decodeStrings(bytes: Uint8Array[]): string[] {\n  return bytes.map(b => decodeString(b));\n}\n\nconst RENDER_FLOAT32_ENVS = {\n  flags: {'WEBGL_RENDER_FLOAT32_ENABLED': true},\n  predicate: WEBGL_ENVS.predicate\n};\n\ndescribeWithFlags('forced f16 render', RENDER_FLOAT32_ENVS, () => {\n  beforeAll(() => {\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', false);\n  });\n\n  it('should overflow if larger than 66k', async () => {\n    const a = tf.tensor1d([Math.pow(2, 17)], 'float32');\n    const b = tf.relu(a);\n    expect(await b.data()).toBeLessThan(Math.pow(2, 17));\n  });\n\n  it('should error in debug mode', () => {\n    // Silence debug warnings.\n    spyOn(console, 'warn');\n\n    tf.enableDebugMode();\n    const a = () => tf.tensor1d([2, Math.pow(2, 17)], 'float32');\n    expect(a).toThrowError();\n  });\n});\n\ndescribeWithFlags('lazy packing and unpacking', WEBGL_ENVS, () => {\n  let webglLazilyUnpackFlagSaved: boolean;\n  let webglCpuForwardFlagSaved: boolean;\n\n  beforeAll(() => {\n    webglLazilyUnpackFlagSaved = tf.env().getBool('WEBGL_LAZILY_UNPACK');\n    webglCpuForwardFlagSaved = tf.env().getBool('WEBGL_CPU_FORWARD');\n    tf.env().set('WEBGL_LAZILY_UNPACK', true);\n    tf.env().set('WEBGL_CPU_FORWARD', false);\n  });\n\n  afterAll(() => {\n    tf.env().set('WEBGL_LAZILY_UNPACK', webglLazilyUnpackFlagSaved);\n    tf.env().set('WEBGL_CPU_FORWARD', webglCpuForwardFlagSaved);\n  });\n\n  it('should not leak memory when lazily unpacking', () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    // c is packed to 1x1 RGBA texture.\n    const c = tf.matMul(a, b);\n\n    const startNumBytes = tf.memory().numBytes;\n    const startNumTensors = tf.memory().numTensors;\n    const startNumBytesInGPU = (tf.memory() as WebGLMemoryInfo).numBytesInGPU;\n\n    const webglPackBinaryOperationsFlagSaved =\n        tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', false);\n    // Add will unpack c before the operation to 2\n    tf.add(c, 1);\n    tf.env().set(\n        'WEBGL_PACK_BINARY_OPERATIONS', webglPackBinaryOperationsFlagSaved);\n\n    expect(tf.memory().numBytes - startNumBytes).toEqual(16);\n    expect(tf.memory().numTensors - startNumTensors).toEqual(1);\n    // result is unpacked 2x2 R texture.\n    expect((tf.memory() as WebGLMemoryInfo).numBytesInGPU - startNumBytesInGPU)\n        .toEqual(4 * tf.util.bytesPerElement(a.dtype));\n  });\n\n  it('should not leak memory when lazily packing', () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    const c = tf.add(a, 1);\n\n    const startNumBytes = tf.memory().numBytes;\n    const startNumTensors = tf.memory().numTensors;\n    const startNumBytesInGPU = (tf.memory() as WebGLMemoryInfo).numBytesInGPU;\n\n    tf.matMul(b, c);\n\n    expect(tf.memory().numBytes - startNumBytes).toEqual(36);\n    expect(tf.memory().numTensors - startNumTensors).toEqual(1);\n    // result [3, 3] is packed to four RGBA pixel texture b is packed to two\n    // RGBA texels texture: total 6 * 4 = 24 components.\n    expect((tf.memory() as WebGLMemoryInfo).numBytesInGPU - startNumBytesInGPU)\n        .toEqual(24 * tf.util.bytesPerElement(a.dtype));\n  });\n\n  it('should work when the same input must be represented by' +\n         'different textures',\n     async () => {\n       const a = tf.tensor1d([1, 2]);\n       const res = tf.dot(a, a);\n       expectArraysClose(await res.data(), [5]);\n     });\n});\n\ndescribeWithFlags('backendWebGL', WEBGL_ENVS, () => {\n  let prevBackend: string;\n\n  beforeAll(() => {\n    prevBackend = tf.getBackend();\n  });\n\n  afterEach(() => {\n    tf.setBackend(prevBackend);\n    tf.removeBackend('test-storage');\n  });\n\n  it('register string tensor with values', () => {\n    const backend = new MathBackendWebGL();\n    tf.registerBackend('test-storage', () => backend);\n    tf.setBackend('test-storage');\n\n    const t = engine().makeTensor(['a', 'b', 'c'], [3], 'string');\n    expectArraysEqual(\n        decodeStrings(backend.readSync(t.dataId) as Uint8Array[]),\n        ['a', 'b', 'c']);\n  });\n\n  it('register string tensor with values and wrong shape throws error', () => {\n    const backend = new MathBackendWebGL();\n    tf.registerBackend('test-storage', () => backend);\n    tf.setBackend('test-storage');\n    expect(() => tf.tensor(['a', 'b', 'c'], [4], 'string')).toThrowError();\n  });\n\n  it('reading', () => {\n    const backend = new MathBackendWebGL(null);\n    tf.registerBackend('test-storage', () => backend);\n    tf.setBackend('test-storage');\n\n    const texManager = backend.getTextureManager();\n    const t = engine().makeTensor(new Float32Array([1, 2, 3]), [3], 'float32');\n    expect(texManager.getNumUsedTextures()).toBe(0);\n    backend.getTexture(t.dataId);\n    expect(texManager.getNumUsedTextures()).toBe(1);\n    expectArraysClose(\n        backend.readSync(t.dataId) as Float32Array,\n        new Float32Array([1, 2, 3]));\n    expect(texManager.getNumUsedTextures()).toBe(0);\n    backend.getTexture(t.dataId);\n    expect(texManager.getNumUsedTextures()).toBe(1);\n    backend.disposeData(t.dataId);\n    expect(texManager.getNumUsedTextures()).toBe(0);\n  });\n\n  it('read packed and then use by an unpacked op', async () => {\n    const backend = new MathBackendWebGL(null);\n    tf.registerBackend('test-storage', () => backend);\n    tf.copyRegisteredKernels('webgl', 'test-storage');\n    tf.setBackend('test-storage');\n\n    const webglPackFlagSaved = tf.env().getBool('WEBGL_PACK');\n    tf.env().set('WEBGL_PACK', true);\n    const webglSizeUploadUniformSaved =\n        tf.env().getNumber('WEBGL_SIZE_UPLOAD_UNIFORM');\n    tf.env().set('WEBGL_SIZE_UPLOAD_UNIFORM', 0);\n    const a = tf.tensor2d([1, 2], [2, 1]);\n    const b = tf.tensor2d([1], [1, 1]);\n    const c = tf.matMul(a, b);\n    backend.readSync(c.dataId);\n    tf.env().set('WEBGL_PACK', false);\n    const d = tf.add(c, 1);\n    tf.env().set('WEBGL_PACK', webglPackFlagSaved);\n    tf.env().set('WEBGL_SIZE_UPLOAD_UNIFORM', webglSizeUploadUniformSaved);\n    expectArraysClose(await d.data(), [2, 3]);\n  });\n\n  it('delayed storage, overwriting', () => {\n    const backend = new MathBackendWebGL(null);\n    tf.registerBackend('test-storage', () => backend);\n    tf.setBackend('test-storage');\n\n    const texManager = backend.getTextureManager();\n    const t = engine().makeTensor(new Float32Array([1, 2, 3]), [3], 'float32');\n    backend.getTexture(t.dataId);\n    expect(texManager.getNumUsedTextures()).toBe(1);\n    expectArraysClose(\n        backend.readSync(t.dataId) as Float32Array,\n        new Float32Array([1, 2, 3]));\n    backend.getTexture(t.dataId);\n    expect(texManager.getNumUsedTextures()).toBe(1);\n    expectArraysClose(\n        backend.readSync(t.dataId) as Float32Array,\n        new Float32Array([1, 2, 3]));\n    expect(texManager.getNumUsedTextures()).toBe(0);\n  });\n});\n\ndescribeWithFlags('Webgl backend disposal', WEBGL_ENVS, () => {\n  it('register and dispose a backend outside unit test', () => {\n    // Simulate outside unit test environment.\n    tf.ENV.set('IS_TEST', false);\n\n    const backend = new MathBackendWebGL();\n    tf.registerBackend('test-disposal', () => backend);\n    tf.copyRegisteredKernels('webgl', 'test-disposal');\n    tf.setBackend('test-disposal');\n    // Compile and run a program.\n    tf.zeros([1000]).sqrt().dataSync();\n\n    // Dispose the backend.\n    tf.backend().dispose();\n\n    // Make sure the cache is empty.\n    const cache = getBinaryCache(tf.ENV.getNumber('WEBGL_VERSION'));\n    expect(Object.keys(cache).length).toBe(0);\n    tf.removeBackend('test-disposal');\n  });\n\n  it('register and dispose a backend inside unit test', () => {\n    // Simulate inside unit test environment.\n    tf.ENV.set('IS_TEST', true);\n\n    const backend = new MathBackendWebGL();\n    tf.registerBackend('test-disposal', () => backend);\n    tf.copyRegisteredKernels('webgl', 'test-disposal');\n    tf.setBackend('test-disposal');\n    // Compile and run a program.\n    tf.zeros([1000]).sqrt().dataSync();\n\n    // Dispose the backend.\n    tf.backend().dispose();\n\n    // Make sure the cache is NOT empty.\n    const cache = getBinaryCache(tf.ENV.getNumber('WEBGL_VERSION'));\n    expect(Object.keys(cache).length).toBeGreaterThan(0);\n    tf.removeBackend('test-disposal');\n  });\n\n  it('register, dispose and re-register a backend outside unit test', () => {\n    // Simulate outside unit test environment.\n    tf.ENV.set('IS_TEST', false);\n\n    tf.registerBackend('test-disposal', () => new MathBackendWebGL());\n    tf.copyRegisteredKernels('webgl', 'test-disposal');\n    tf.setBackend('test-disposal');\n    // Compile and run a program.\n    tf.zeros([1000]).sqrt().dataSync();\n\n    // Dispose the backend.\n    tf.backend().dispose();\n    tf.removeBackend('test-disposal');\n\n    // Re-register a backend.\n    tf.registerBackend('test-disposal', () => new MathBackendWebGL());\n    tf.copyRegisteredKernels('webgl', 'test-disposal');\n    tf.setBackend('test-disposal');\n    // Compile and run a program.\n    tf.zeros([1000]).sqrt().dataSync();\n\n    // Dispose the 2nd backend.\n    tf.backend().dispose();\n\n    // Make sure the cache is empty.\n    const cache = getBinaryCache(tf.ENV.getNumber('WEBGL_VERSION'));\n    expect(Object.keys(cache).length).toBe(0);\n    tf.removeBackend('test-disposal');\n  });\n});\n\ndescribeWithFlags('Custom window size', WEBGL_ENVS, () => {\n  const customBackendName = 'custom-webgl';\n\n  beforeAll(() => {\n    const kernelFunc = tf.getKernel('Square', 'webgl').kernelFunc;\n    tf.registerKernel(\n        {kernelName: 'Square', backendName: customBackendName, kernelFunc});\n  });\n\n  afterAll(() => {\n    tf.unregisterKernel('Square', customBackendName);\n  });\n\n  it('Set screen area to be 1x1', () => {\n    // This will set the screen size to 1x1 to make sure the page limit is\n    // very small.\n    spyOnProperty(window, 'screen', 'get')\n        .and.returnValue({height: 1, width: 1});\n\n    tf.registerBackend(customBackendName, () => new MathBackendWebGL());\n    tf.setBackend(customBackendName);\n\n    // Allocate ~40KB.\n    const a = tf.ones([100, 100]);\n    // No gpu memory used yet because of delayed storage.\n    expect((tf.memory() as WebGLMemoryInfo).numBytesInGPU).toBe(0);\n\n    // Expect console.warn() to be called.\n    let numWarnCalls = 0;\n    spyOn(console, 'warn').and.callFake(() => {\n      numWarnCalls++;\n    });\n\n    a.square();\n    expect(numWarnCalls).toBe(1);\n    expect((tf.memory() as WebGLMemoryInfo).numBytesInGPU)\n        .toBe(100 * 100 * 4 * 2);\n\n    // Allocate another 40KB.\n    a.square();\n\n    // Expect console.warn() to NOT be called more than once.\n    expect(numWarnCalls).toBe(1);\n    expect((tf.memory() as WebGLMemoryInfo).numBytesInGPU)\n        .toBe(100 * 100 * 4 * 3);\n    tf.removeBackend(customBackendName);\n  });\n});\n\nconst SIZE_UPLOAD_UNIFORM = 4;\n// Run only for environments that have 32bit floating point support.\nconst FLOAT32_WEBGL_ENVS = {\n  flags: {'WEBGL_RENDER_FLOAT32_ENABLED': true},\n  predicate: WEBGL_ENVS.predicate\n};\n\ndescribeWithFlags('upload tensors as uniforms', FLOAT32_WEBGL_ENVS, () => {\n  let savedUploadUniformValue: number;\n\n  beforeAll(() => {\n    savedUploadUniformValue =\n        tf.env().get('WEBGL_SIZE_UPLOAD_UNIFORM') as number;\n    tf.env().set('WEBGL_SIZE_UPLOAD_UNIFORM', SIZE_UPLOAD_UNIFORM);\n  });\n\n  afterAll(() => {\n    tf.env().set('WEBGL_SIZE_UPLOAD_UNIFORM', savedUploadUniformValue);\n  });\n\n  it('small tensor gets uploaded as scalar', () => {\n    let m = tf.memory() as WebGLMemoryInfo;\n    expect(m.numBytesInGPU).toBe(0);\n\n    const a = tf.zeros([SIZE_UPLOAD_UNIFORM - 1]);\n    a.square();\n\n    // Only the result lives on the gpu, the input is gone.\n    m = tf.memory() as WebGLMemoryInfo;\n    expect(m.numBytesInGPU).toBe(a.size * 4);\n  });\n\n  it('large tensor gets uploaded to gpu', () => {\n    let m = tf.memory() as WebGLMemoryInfo;\n    expect(m.numBytesInGPU).toBe(0);\n\n    const a = tf.zeros([SIZE_UPLOAD_UNIFORM + 1]);\n    a.square();\n\n    // Both the result and the input live on the gpu.\n    m = tf.memory() as WebGLMemoryInfo;\n    expect(m.numBytesInGPU).toBe(a.size * 4 * 2);\n  });\n\n  it('download and re-upload an output of a shader', async () => {\n    const vals = new Float32Array(SIZE_UPLOAD_UNIFORM + 1);\n    vals.fill(2);\n    const a = tf.square(vals);\n    a.dataSync();            // Download to CPU.\n    const res = a.square();  // Re-upload to GPU.\n\n    const expected = new Float32Array(SIZE_UPLOAD_UNIFORM + 1);\n    expected.fill(16);\n    expectArraysClose(await res.data(), expected);\n  });\n});\n\ndescribeWithFlags('indexing for large tensors', FLOAT32_WEBGL_ENVS, () => {\n  it('properly indexes large tensors', async () => {\n    const range = 3000 * 3000;\n    const aData = new Float32Array(range);\n    for (let i = 0; i < range; i++) {\n      aData[i] = i / range;\n    }\n\n    const a = tf.tensor1d(aData);\n    const aRelu = a.relu();\n\n    expectArraysClose(await a.data(), aData);\n    expectArraysClose(await aRelu.data(), aData);\n  });\n});\n\ndescribeWithFlags('debug on webgl', WEBGL_ENVS, () => {\n  beforeAll(() => {\n    // Silences debug warnings.\n    spyOn(console, 'warn');\n    tf.enableDebugMode();\n  });\n\n  it('debug mode errors when overflow in tensor construction', () => {\n    const savedRenderFloat32Flag =\n        tf.env().getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', false);\n    const a = () => tf.tensor1d([2, Math.pow(2, 17)], 'float32');\n    expect(a).toThrowError();\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', savedRenderFloat32Flag);\n  });\n\n  it('debug mode errors when underflow in tensor construction', () => {\n    const savedRenderFloat32Flag =\n        tf.env().getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', false);\n    const a = () => tf.tensor1d([2, 1e-8], 'float32');\n    expect(a).toThrowError();\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', savedRenderFloat32Flag);\n  });\n});\n\nconst WEBGL1_ENVS = {\n  flags: {'WEBGL_VERSION': 1},\n  predicate: WEBGL_ENVS.predicate\n};\n\nconst WEBGL2_ENVS = {\n  flags: {'WEBGL_VERSION': 2},\n  predicate: WEBGL_ENVS.predicate\n};\n\ndescribeWithFlags('computeBytes counts bytes correctly', WEBGL1_ENVS, () => {\n  it('for all physical texture types', () => {\n    const gpgpu = new GPGPUContext();\n\n    const shapeRC: [number, number] = [2, 3];\n\n    let bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.UNPACKED_FLOAT16, gpgpu.gl,\n        gpgpu.textureConfig, false /* isPacked */);\n    expect(bytesForTex).toBe(96);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.UNPACKED_FLOAT32, gpgpu.gl,\n        gpgpu.textureConfig, false /* isPacked */);\n    expect(bytesForTex).toBe(96);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE, gpgpu.gl,\n        gpgpu.textureConfig, true /* isPacked */);\n    expect(bytesForTex).toBe(32);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.PACKED_2X2_FLOAT32, gpgpu.gl,\n        gpgpu.textureConfig, true /* isPacked */);\n    expect(bytesForTex).toBe(32);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.PACKED_2X2_FLOAT16, gpgpu.gl,\n        gpgpu.textureConfig, true /* isPacked */);\n    expect(bytesForTex).toBe(32);\n\n    gpgpu.dispose();\n  });\n});\n\ndescribeWithFlags('computeBytes counts bytes correctly', WEBGL2_ENVS, () => {\n  it('test every physical tex type input to computeBytes', () => {\n    const gpgpu = new GPGPUContext();\n\n    const shapeRC: [number, number] = [2, 3];\n\n    let bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.UNPACKED_FLOAT16, gpgpu.gl,\n        gpgpu.textureConfig, false /* isPacked */);\n    expect(bytesForTex).toBe(12);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.UNPACKED_FLOAT32, gpgpu.gl,\n        gpgpu.textureConfig, false /* isPacked */);\n    expect(bytesForTex).toBe(24);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE, gpgpu.gl,\n        gpgpu.textureConfig, true /* isPacked */);\n    expect(bytesForTex).toBe(32);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.PACKED_2X2_FLOAT32, gpgpu.gl,\n        gpgpu.textureConfig, true /* isPacked */);\n    expect(bytesForTex).toBe(32);\n\n    bytesForTex = computeBytes(\n        shapeRC, PhysicalTextureType.PACKED_2X2_FLOAT16, gpgpu.gl,\n        gpgpu.textureConfig, true /* isPacked */);\n    expect(bytesForTex).toBe(16);\n\n    gpgpu.dispose();\n  });\n});\n\ndescribeWithFlags('aggressive texture deletion', WEBGL_ENVS, () => {\n  it('basic', () => {\n    const savedDeleteThreshold =\n        tf.env().get('WEBGL_DELETE_TEXTURE_THRESHOLD') as number;\n    tf.env().set('WEBGL_DELETE_TEXTURE_THRESHOLD', 0);\n\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    tf.matMul(a, b);\n\n    const startNumBytesAllocated =\n        (tf.memory() as WebGLMemoryInfo).numBytesInGPUAllocated;\n\n    a.dispose();\n    b.dispose();\n\n    expect(\n        startNumBytesAllocated -\n        (tf.memory() as WebGLMemoryInfo).numBytesInGPUAllocated)\n        .toBeGreaterThan(0);\n\n    tf.env().set('WEBGL_DELETE_TEXTURE_THRESHOLD', savedDeleteThreshold);\n  });\n});\n\ndescribeWithFlags('memory webgl', WEBGL_ENVS, () => {\n  it('unreliable is falsy/not present when all tensors are numeric', () => {\n    tf.tensor(1);\n    const mem = tf.memory();\n    expect(mem.numTensors).toBe(1);\n    expect(mem.numDataBuffers).toBe(1);\n    expect(mem.numBytes).toBe(4);\n    expect(mem.unreliable).toBeFalsy();\n  });\n});\n\ndescribeWithFlags('manual gl flush', WEBGL_ENVS, () => {\n  it('works when manual gl flush is enabled', async () => {\n    const savedGlThreshold = tf.env().get('WEBGL_FLUSH_THRESHOLD') as number;\n    tf.env().set('WEBGL_FLUSH_THRESHOLD', 1);\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([1, 1, -3, 2, 2, 1], [2, 3]);\n\n    const result = tf.div(tf.div(tf.mul(a, b), a), b);\n    expectArraysClose(await result.data(), [1, 1, 1, 1, 1, 1]);\n    tf.env().set('WEBGL_FLUSH_THRESHOLD', savedGlThreshold);\n  });\n});\n// We do not yet fully support half float backends. These tests are a starting\n// point.\ndescribeWithFlags('backend without render float32 support', WEBGL_ENVS, () => {\n  const savedRenderFloat32Flag =\n      tf.env().getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n  const customWebGLBackendName = 'half-float-webgl';\n\n  beforeAll(() => {\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', false);\n  });\n\n  beforeEach(() => {\n    tf.copyRegisteredKernels('webgl', customWebGLBackendName);\n    tf.registerBackend(\n        customWebGLBackendName, () => new MathBackendWebGL(null));\n  });\n\n  afterEach(() => {\n    tf.removeBackend(customWebGLBackendName);\n  });\n\n  afterAll(() => {\n    tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', savedRenderFloat32Flag);\n  });\n\n  it('basic usage', async () => {\n    tf.setBackend(customWebGLBackendName);\n\n    const a = tf.tensor2d([1, 2], [1, 2]);\n    const b = tf.tensor2d([1, 2], [1, 2]);\n    const c = tf.add(a, b);\n    expectArraysClose(await c.data(), [2, 4]);\n  });\n\n  it('disposing tensors should not cause errors', () => {\n    tf.setBackend(customWebGLBackendName);\n    expect(() => tf.tidy(() => {\n      const a = tf.tensor2d([1, 2], [1, 2]);\n      const b = tf.tensor2d([1, 2], [1, 2]);\n      const c = tf.add(a, b);\n      c.dataSync();\n      return c.add(tf.tensor2d([2, 4], [1, 2]));\n    })).not.toThrowError();\n  });\n});\n\ndescribeWithFlags('time webgl', WEBGL_ENVS, () => {\n  it('upload + compute', async () => {\n    const a = tf.zeros([10, 10]);\n    const time = await tf.time(() => a.square()) as WebGLTimingInfo;\n    expect(time.uploadWaitMs > 0);\n    expect(time.downloadWaitMs === 0);\n    expect(time.kernelMs > 0);\n    expect(time.wallMs >= time.kernelMs);\n  });\n\n  it('upload + compute + dataSync', async () => {\n    const a = tf.zeros([10, 10]);\n    const time = await tf.time(() => a.square().dataSync()) as WebGLTimingInfo;\n    expect(time.uploadWaitMs > 0);\n    expect(time.downloadWaitMs > 0);\n    expect(time.kernelMs > 0);\n    expect(time.wallMs >= time.kernelMs);\n  });\n\n  it('upload + compute + data', async () => {\n    const a = tf.zeros([10, 10]);\n    const time =\n        await tf.time(async () => a.square().data()) as WebGLTimingInfo;\n    expect(time.uploadWaitMs > 0);\n    expect(time.downloadWaitMs > 0);\n    expect(time.kernelMs > 0);\n    expect(time.wallMs >= time.kernelMs);\n  });\n\n  it('preupload (not included) + compute + data', async () => {\n    const a = tf.zeros([10, 10]);\n    // Pre-upload a on gpu.\n    a.square();\n    const time = await tf.time(() => a.sqrt()) as WebGLTimingInfo;\n    // The tensor was already on gpu.\n    expect(time.uploadWaitMs === 0);\n    expect(time.downloadWaitMs === 0);\n    expect(time.kernelMs > 0);\n    expect(time.wallMs >= time.kernelMs);\n  });\n\n  it('returns error for kernelMs if query timer extension is unavailable',\n     async () => {\n       const savedQueryReliableValue =\n           tf.env().get('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE');\n       tf.env().set('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', false);\n\n       const a = tf.zeros([10, 10]);\n       const time = await tf.backend().time(() => a.sqrt()) as WebGLTimingInfo;\n       expect(time.kernelMs).toEqual({\n         error: 'WebGL query timers are not supported in this environment.'\n       });\n\n       tf.env().set(\n           'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE',\n           savedQueryReliableValue);\n     });\n});\n\ndescribeWithFlags('caching on cpu', WEBGL_ENVS, () => {\n  const customBackendName = 'cache-on-cpu';\n\n  beforeAll(() => {\n    tf.env().set('WEBGL_CPU_FORWARD', false);\n    const kernelFunc = tf.getKernel('Square', 'webgl').kernelFunc;\n    tf.registerKernel(\n        {kernelName: 'Square', backendName: customBackendName, kernelFunc});\n  });\n\n  afterAll(() => {\n    tf.unregisterKernel('Square', customBackendName);\n  });\n\n  it('caches on cpu after async read', async () => {\n    const backend = new MathBackendWebGL();\n    tf.registerBackend(customBackendName, () => backend);\n    tf.setBackend(customBackendName);\n\n    const t = tf.square(2);\n    const info = backend.getDataInfo(t.dataId);\n\n    // Make sure the tensor is on the GPU.\n    expect(info.values == null).toBe(true);\n\n    await t.data();\n\n    // Make sure the tensor is cached on CPU.\n    expect(info.values).not.toBe(null);\n\n    tf.removeBackend(customBackendName);\n  });\n\n  it('caches on cpu after sync read', () => {\n    const backend = new MathBackendWebGL();\n    tf.registerBackend(customBackendName, () => backend);\n    tf.setBackend(customBackendName);\n\n    const t = tf.square(2);\n    const info = backend.getDataInfo(t.dataId);\n\n    // Make sure the tensor is on the GPU.\n    expect(info.values == null).toBe(true);\n\n    t.dataSync();\n\n    // Make sure the tensor is cached on CPU.\n    expect(info.values).not.toBe(null);\n\n    tf.removeBackend(customBackendName);\n  });\n});\n\ndescribeWithFlags('WebGL backend has sync init', WEBGL_ENVS, () => {\n  it('can do matmul without waiting for ready', async () => {\n    const customWebGLBackendName = 'my-webgl';\n\n    tf.copyRegisteredKernels('webgl', customWebGLBackendName);\n\n    tf.registerBackend(customWebGLBackendName, () => {\n      return new MathBackendWebGL();\n    });\n    tf.setBackend(customWebGLBackendName);\n    const a = tf.tensor1d([5]);\n    const b = tf.tensor1d([3]);\n    const res = tf.dot(a, b);\n    expectArraysClose(await res.data(), 15);\n    tf.dispose([a, b, res]);\n    tf.removeBackend(customWebGLBackendName);\n  });\n});\n"]}