{"version":3,"file":"webgl_ops_test.js","sourceRoot":"","sources":["../src/webgl_ops_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Rank, Tensor2D, Tensor3D, Tensor4D, test_util} from '@tensorflow/tfjs-core';\nconst expectArraysClose = test_util.expectArraysClose;\nconst expectArraysEqual = test_util.expectArraysEqual;\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags} from '@tensorflow/tfjs-core/dist/jasmine_util';\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport {WebGLMemoryInfo} from './backend_webgl';\nimport {PACKED_ENVS, WEBGL_ENVS} from './backend_webgl_test_registry';\n\ndescribeWithFlags('fromPixels + regular math op', WEBGL_ENVS, () => {\n  it('fromPixels + add', async () => {\n    const pixels = new ImageData(2, 2);\n    for (let i = 0; i < 8; i++) {\n      pixels.data[i] = 100;\n    }\n    for (let i = 8; i < 16; i++) {\n      pixels.data[i] = 250;\n    }\n\n    const a = tf.browser.fromPixels(pixels, 4);\n    const b = tf.scalar(20, 'int32');\n\n    const res = tf.add(a, b);\n\n    expectArraysEqual(await res.data(), [\n      120, 120, 120, 120, 120, 120, 120, 120, 270, 270, 270, 270, 270, 270, 270,\n      270\n    ]);\n  });\n});\n\ndescribeWithFlags('toPixels', WEBGL_ENVS, () => {\n  it('draws a rank-2 float32 tensor, canvas', done => {\n    const x = tf.tensor2d([.15, .2], [2, 1], 'float32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected = new Uint8ClampedArray([\n        Math.round(.15 * 255), Math.round(.15 * 255), Math.round(.15 * 255),\n        255, Math.round(.2 * 255), Math.round(.2 * 255), Math.round(.2 * 255),\n        255\n      ]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-2 int32 tensor, canvas', done => {\n    const x = tf.tensor2d([10, 20], [2, 1], 'int32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected =\n          new Uint8ClampedArray([10, 10, 10, 255, 20, 20, 20, 255]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-3 float32 tensor, 1 channel, canvas', done => {\n    const x = tf.tensor3d([.15, .2], [2, 1, 1], 'float32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected = new Uint8ClampedArray([\n        Math.round(.15 * 255), Math.round(.15 * 255), Math.round(.15 * 255),\n        255, Math.round(.2 * 255), Math.round(.2 * 255), Math.round(.2 * 255),\n        255\n      ]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-3 int32 tensor, 1 channel, canvas', done => {\n    const x = tf.tensor3d([10, 20], [2, 1, 1], 'int32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected =\n          new Uint8ClampedArray([10, 10, 10, 255, 20, 20, 20, 255]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-3 float32 tensor, 3 channel, canvas', done => {\n    const x =\n        tf.tensor3d([.05, .1001, .15, .20, .25, .3001], [2, 1, 3], 'float32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected = new Uint8ClampedArray([\n        Math.round(.05 * 255), Math.round(.1001 * 255), Math.round(.15 * 255),\n        255, Math.round(.2 * 255), Math.round(.25 * 255),\n        Math.round(.3001 * 255), 255\n      ]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-3 int32 tensor, 3 channel, canvas', done => {\n    const x = tf.tensor3d([10, 20, 30, 40, 50, 60], [2, 1, 3], 'int32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected =\n          new Uint8ClampedArray([10, 20, 30, 255, 40, 50, 60, 255]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-3 float32 tensor, 4 channel, canvas', done => {\n    // ImageData roundtrips are lossy because of pre-multiplied alphas, so we\n    // use an alpha = 1 to avoid losing precision on r, g, b channels in these\n    // tests https://www.w3.org/TR/2dcontext/\n    const x = tf.tensor3d(\n        [.05, .1001, .15, 1, .20, .25, .3001, 1], [2, 1, 4], 'float32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected = new Uint8ClampedArray([\n        Math.round(.05 * 255), Math.round(.1001 * 255), Math.round(.15 * 255),\n        255, Math.round(.20 * 255), Math.round(.25 * 255),\n        Math.round(.3001 * 255), 255\n      ]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('draws a rank-3 int32 tensor, 4 channel, canvas', done => {\n    // ImageData roundtrips are lossy because of pre-multiplied alphas, so we\n    // use an alpha = 1 to avoid losing precision on r, g, b channels in these\n    // tests https://www.w3.org/TR/2dcontext/\n    const x =\n        tf.tensor3d([10, 20, 30, 255, 50, 60, 70, 255], [2, 1, 4], 'int32');\n    const canvas = document.createElement('canvas');\n\n    tf.browser.toPixels(x, canvas).then(data => {\n      const expected =\n          new Uint8ClampedArray([10, 20, 30, 255, 50, 60, 70, 255]);\n      expect(data).toEqual(expected);\n\n      const ctx = canvas.getContext('2d');\n      const imgData = ctx.getImageData(0, 0, 1, 2);\n\n      expect(imgData.data).toEqual(expected);\n      done();\n    });\n  });\n\n  it('accepts a tensor-like object', async () => {\n    const x = [[127], [100]];  // 2x1;\n    const canvas = document.createElement('canvas');\n\n    const data = await tf.browser.toPixels(x, canvas);\n    const expected =\n        new Uint8ClampedArray([127, 127, 127, 255, 100, 100, 100, 255]);\n    expect(data).toEqual(expected);\n\n    const ctx = canvas.getContext('2d');\n    const imgData = ctx.getImageData(0, 0, 1, 2);\n\n    expect(imgData.data).toEqual(expected);\n  });\n});\n\ndescribeWithFlags('depthToSpace', WEBGL_ENVS, () => {\n  it('tensor4d, input shape=[1, 4, 1, 1], blockSize=2, format=NCHW',\n     async () => {\n       const t = tf.tensor4d([1, 2, 3, 4], [1, 4, 1, 1]);\n       const blockSize = 2;\n       const dataFormat = 'NCHW';\n\n       const res = tf.depthToSpace(t, blockSize, dataFormat);\n       expect(res.shape).toEqual([1, 1, 2, 2]);\n       expectArraysClose(await res.data(), [1, 2, 3, 4]);\n     });\n\n  it('tensor4d, input shape=[1, 12, 1, 1], blockSize=2, format=NCHW',\n     async () => {\n       const t =\n           tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1, 12, 1, 1]);\n       const blockSize = 2;\n       const dataFormat = 'NCHW';\n\n       const res = tf.depthToSpace(t, blockSize, dataFormat);\n       expect(res.shape).toEqual([1, 3, 2, 2]);\n       expectArraysClose(\n           await res.data(), [1, 4, 7, 10, 2, 5, 8, 11, 3, 6, 9, 12]);\n     });\n\n  it('tensor4d, input shape=[1, 4, 2, 2], blockSize=2, format=NCHW',\n     async () => {\n       const t = tf.tensor4d(\n           [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n           [1, 4, 2, 2]);\n       const blockSize = 2;\n       const dataFormat = 'NCHW';\n\n       const res = tf.depthToSpace(t, blockSize, dataFormat);\n       expect(res.shape).toEqual([1, 1, 4, 4]);\n       expectArraysClose(\n           await res.data(),\n           [1, 5, 2, 6, 9, 13, 10, 14, 3, 7, 4, 8, 11, 15, 12, 16]);\n     });\n\n  it('tensor4d, input shape=[1, 8, 2, 2], blockSize=2, format=NCHW',\n     async () => {\n       const t = tf.tensor4d(\n           [\n             1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16,\n             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32\n           ],\n           [1, 8, 2, 2]);\n       const blockSize = 2;\n       const dataFormat = 'NCHW';\n\n       const res = tf.depthToSpace(t, blockSize, dataFormat);\n       expect(res.shape).toEqual([1, 2, 4, 4]);\n       expectArraysClose(await res.data(), [\n         1, 9,  2, 10, 17, 25, 18, 26, 3, 11, 4, 12, 19, 27, 20, 28,\n         5, 13, 6, 14, 21, 29, 22, 30, 7, 15, 8, 16, 23, 31, 24, 32\n       ]);\n     });\n});\n\ndescribeWithFlags('maximum', WEBGL_ENVS, () => {\n  it('works with squarification for large dimension', async () => {\n    const maxTextureSize = tf.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', 5);\n    const a =\n        tf.tensor2d([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [2, 7]);\n    const b =\n        tf.tensor2d([-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 7]);\n\n    const result = tf.maximum(a, b);\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', maxTextureSize);\n    expectArraysClose(\n        await result.data(), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);\n  });\n});\n\ndescribeWithFlags('div', PACKED_ENVS, () => {\n  it('works when unused channels are divided', async () => {\n    // Tests that the 0's in unused channels for input textures do not corrupt\n    // the result when swizzled with 3 / 3.\n    const a = tf.tensor2d([1], [1, 1]);\n    const b = tf.tensor2d([1], [1, 1]);\n\n    const c = tf.add(a, b).div(a);\n    const d = tf.add(a, b).div(a);\n\n    const result = c.matMul(d);\n    expectArraysClose(await result.data(), [4]);\n  });\n\n  it('works when unused channels in tensors with size > 1 are divided',\n     async () => {\n       const a = tf.tensor2d([1, 2, 3], [3, 1]);\n       const b = tf.tensor2d([1, 2, 3], [3, 1]);\n       const c = a.div(b);\n\n       const d = tf.tensor1d([1, 2, 3]);\n       const e = tf.tensor1d([1, 2, 3]);\n       const f = d.div(e).reshape([1, 3]);\n\n       const result = c.matMul(f);\n       expectArraysClose(await result.data(), [1, 1, 1, 1, 1, 1, 1, 1, 1]);\n     });\n});\n\ndescribeWithFlags('conv2d webgl', WEBGL_ENVS, () => {\n  it('packed input x=[2,1,2] f=[1,1,2,2] s=1 d=1 p=0', async () => {\n    const inputShape: [number, number, number] = [2, 1, 2];\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w = tf.tensor4d([1, 2, 3, 4], [fSize, fSize, 2, 2]);\n\n    const webglLazilyUnpackFlagSaved = tf.env().getBool('WEBGL_LAZILY_UNPACK');\n    tf.env().set('WEBGL_LAZILY_UNPACK', true);\n    const webglPackBinaryOperationsFlagSaved =\n        tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', true);\n\n    // First conv2D tests conv2D with non-packed input |x|, and the second uses\n    // packed input |result|.\n    const result = tf.conv2d(x, w, stride, pad);\n    const result1 = tf.conv2d(result, w, stride, pad);\n\n    tf.env().set('WEBGL_LAZILY_UNPACK', webglLazilyUnpackFlagSaved);\n    tf.env().set(\n        'WEBGL_PACK_BINARY_OPERATIONS', webglPackBinaryOperationsFlagSaved);\n\n    expectArraysClose(await result.data(), [7, 10, 15, 22]);\n    expectArraysClose(await result1.data(), [37, 54, 81, 118]);\n  });\n\n  it('tf.memory() packed input x=[1,1,1,2] f=[1,1,2,2] s=1 d=1 p=0',\n     async () => {\n       const startNumBytesInGPU =\n           (tf.memory() as WebGLMemoryInfo).numBytesInGPU;\n       const startNumBytes = tf.memory().numBytes;\n\n       const inputShape: [number, number, number, number] = [1, 1, 1, 2];\n       const fSize = 1;\n       const pad = 0;\n       const stride = 1;\n\n       const xInit = tf.tensor4d([0, 1], inputShape);\n       const w = tf.tensor4d([1, 2, 3, 4], [fSize, fSize, 2, 2]);\n\n       const webglLazilyUnpackFlagSaved =\n           tf.env().getBool('WEBGL_LAZILY_UNPACK');\n       tf.env().set('WEBGL_LAZILY_UNPACK', true);\n       const webglPackBinaryOperationsFlagSaved =\n           tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n       tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', true);\n\n       const x = xInit.add<tf.Tensor4D>(1);\n       const result = tf.conv2d(x, w, stride, pad);\n\n       tf.env().set('WEBGL_LAZILY_UNPACK', webglLazilyUnpackFlagSaved);\n       tf.env().set(\n           'WEBGL_PACK_BINARY_OPERATIONS', webglPackBinaryOperationsFlagSaved);\n\n       expectArraysClose(await result.data(), [7, 10]);\n       result.dispose();\n       x.dispose();\n       xInit.dispose();\n       w.dispose();\n       expect(\n           (tf.memory() as WebGLMemoryInfo).numBytesInGPU - startNumBytesInGPU)\n           .toBe(0);\n       expect(tf.memory().numBytes - startNumBytes).toBe(0);\n     });\n});\n\ndescribeWithFlags('conv to matmul', PACKED_ENVS, () => {\n  it('im2col should not leak memory', () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 0;\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    const startNumBytes = tf.memory().numBytes;\n    tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n    const endNumBytes = tf.memory().numBytes;\n\n    expect(endNumBytes - startNumBytes).toEqual(4);\n  });\n\n  it('pointwise conv should work when matmul is unpacked', () => {\n    const inputDepth =\n        1001;  // this number must be greater than MATMUL_SHARED_DIM_THRESHOLD\n               // for matmul to be unpacked\n    const inputShape: [number, number, number] = [3, 3, inputDepth];\n    const outputDepth = 1;\n    const fSize = 1;\n    const pad = 'same';\n    const stride: [number, number] = [1, 1];\n\n    let x: tf.Tensor3D = tf.randomNormal(inputShape);\n    x = x.add(1);  // this packs x so we can test the case where we mistakenly\n                   // want to avoid expensive reshape in pointwise conv2d even\n                   // though matmul is unpacked\n    const w: tf.Tensor4D =\n        tf.randomNormal([fSize, fSize, inputDepth, outputDepth]);\n\n    expect(() => tf.conv2d(x, w, stride, pad)).not.toThrow();\n  });\n});\n\n// For operations on non-trivial matrix sizes, we skip the CPU-only ENV and use\n// only WebGL ENVs.\ndescribeWithFlags('gramSchmidt-non-tiny', WEBGL_ENVS, () => {\n  it('8x16', async () => {\n    // Part of this test's point is that operation on a matrix of this size\n    // can complete in the timeout limit of the unit test.\n    const xs: Tensor2D = tf.randomUniform([8, 16]);\n    const y = tf.linalg.gramSchmidt(xs) as Tensor2D;\n    const yTransposed: Tensor2D = y.transpose();\n    expectArraysClose(\n        await y.matMul(yTransposed).data(), await tf.eye(8).data());\n  });\n});\n\ndescribeWithFlags('matmul webgl-only', WEBGL_ENVS, () => {\n  it('Matrix times vector, large matrix', async () => {\n    const maxTexSize = 16000;\n    const sharedDim = maxTexSize + 4;\n    const matrix = tf.buffer<Rank.R2>([2, sharedDim], 'float32');\n    matrix.set(1, 0, sharedDim - 3);\n    matrix.set(1, 0, sharedDim - 2);\n\n    const v = tf.buffer<Rank.R1>([sharedDim], 'float32');\n    v.set(1, sharedDim - 3);\n    v.set(1, sharedDim - 2);\n\n    const result = tf.dot(matrix.toTensor(), v.toTensor());\n    const expected = [2, 0];\n    expectArraysClose(await result.data(), expected);\n  });\n});\n\ndescribeWithFlags('matmul', PACKED_ENVS, () => {\n  it('should not leak memory', () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8, 9], [3, 3]);\n    const b = tf.tensor2d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [3, 5]);\n\n    const startNumBytes = tf.memory().numBytes;\n    tf.matMul(a, b);\n    const endNumBytes = tf.memory().numBytes;\n\n    expect(endNumBytes - startNumBytes).toEqual(60);\n  });\n\n  it('should work when input matrix dimensions are not divisible by 2',\n     async () => {\n       const a = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8, 9], [3, 3]);\n       const b = tf.tensor2d(\n           [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [3, 5]);\n\n       const c = tf.matMul(a, b);\n\n       expect(c.shape).toEqual([3, 5]);\n       expectArraysClose(await c.data(), [\n         46, 52, 58, 64, 70, 100, 115, 130, 145, 160, 154, 178, 202, 226, 250\n       ]);\n     });\n\n  it('should work when output texture shape != physical shape', async () => {\n    const sharedDim = 16000;\n    const a = tf.buffer<Rank.R2>([2, sharedDim], 'float32');\n    const b = tf.buffer<Rank.R2>([sharedDim, 2], 'float32');\n\n    a.set(1, 0, sharedDim - 1);\n    a.set(1, 0, sharedDim - 2);\n    a.set(1, 1, sharedDim - 1);\n    b.set(1, sharedDim - 1, 0);\n    b.set(1, sharedDim - 2, 0);\n\n    const c = tf.matMul(a.toTensor(), b.toTensor());\n    const expected = [2, 0, 1, 0];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('should work when input texture shapes != physical shape', async () => {\n    const maxTextureSize = tf.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', 5);\n    const a = tf.tensor2d([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [1, 12]);\n    const b = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [12, 1]);\n\n    const c = tf.matMul(a, b);\n\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', maxTextureSize);\n\n    expectArraysClose(await c.data(), [572]);\n  });\n\n  it('should work when squarification results in zero padding', async () => {\n    const maxTextureSize = tf.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', 3);\n    const a = tf.tensor2d([1, 2], [1, 2]);\n    const b = tf.tensor2d(\n        [[0, 1, 2, 3, 4, 5, 6, 7, 8], [9, 10, 11, 12, 13, 14, 15, 16, 17]]);\n\n    const c = tf.matMul(a, b);\n\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', maxTextureSize);\n\n    expectArraysClose(await c.data(), [18, 21, 24, 27, 30, 33, 36, 39, 42]);\n  });\n\n  it('A x B', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    const c = tf.matMul(a, b);\n\n    expect(c.shape).toEqual([2, 2]);\n    expectArraysClose(await c.data(), [0, 8, -3, 20]);\n  });\n\n  it('A x B^t', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([1, 0, 2, 4, 3, 0], [2, 3]);\n\n    const transposeA = false;\n    const transposeB = true;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    const expected = [7, 10, 16, 31];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('A^t x B', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([1, 0, 2, 4, 3, 0], [2, 3]);\n\n    const transposeA = true;\n    const transposeB = false;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    const expected = [17, 12, 2, 22, 15, 4, 27, 18, 6];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('A^t x B^t', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n    const b = tf.tensor2d([1, 0, 2, 4, 3, 0], [2, 3]);\n\n    const transposeA = true;\n    const transposeB = true;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    const expected = [11, 13, 14, 20];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('works when followed by an op that requires unpacked inputs', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    const c = tf.matMul(a, b);\n\n    const webglPackBinarySaved =\n        tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', false);\n    const d = tf.add(c, 1);\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', webglPackBinarySaved);\n\n    expectArraysClose(await d.data(), [1, 9, -2, 21]);\n  });\n\n  // tslint:disable-next-line:max-line-length\n  it('works when followed by a packed reshape that changes texture layout, and then an unpacked op',\n     async () => {\n       const a = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8, 9], [9, 1]);\n       const b = tf.tensor2d([1], [1, 1]);\n       const c = tf.matMul(a, b);\n\n       const d = tf.reshape(c, [1, 3, 3, 1]);\n\n       const webglPackBinarySaved =\n           tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n       tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', false);\n       const e = tf.add(d, 1);\n       tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', webglPackBinarySaved);\n\n       expectArraysClose(await e.data(), [2, 3, 4, 5, 6, 7, 8, 9, 10]);\n     });\n\n  it('works when preceded by an op that requires packed inputs', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    const c = tf.add(a, 1);\n    const d = tf.matMul(b, c);\n\n    expectArraysClose(await d.data(), [5, 6, 7, 4, 3, 2, 9, 12, 15]);\n  });\n});\n\ndescribeWithFlags('Reduction: webgl packed input', WEBGL_ENVS, () => {\n  it('argmax 3D, odd number of rows, axis = -1', async () => {\n    const webglLazilyUnpackFlagSaved = tf.env().getBool('WEBGL_LAZILY_UNPACK');\n    tf.env().set('WEBGL_LAZILY_UNPACK', true);\n    const webglPackBinaryOperationsFlagSaved =\n        tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', true);\n\n    const a = tf.tensor3d([3, 2, 5, 100, -7, 2], [2, 1, 3]).add(1);\n    const r = tf.argMax(a, -1);\n    tf.env().set('WEBGL_LAZILY_UNPACK', webglLazilyUnpackFlagSaved);\n    tf.env().set(\n        'WEBGL_PACK_BINARY_OPERATIONS', webglPackBinaryOperationsFlagSaved);\n\n    expect(r.dtype).toBe('int32');\n    expectArraysEqual(await r.data(), [2, 0]);\n  });\n\n  it('argmin 4D, odd number of rows, axis = -1', async () => {\n    const webglLazilyUnpackFlagSaved = tf.env().getBool('WEBGL_LAZILY_UNPACK');\n    tf.env().set('WEBGL_LAZILY_UNPACK', true);\n    const webglPackBinaryOperationsFlagSaved =\n        tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', true);\n\n    const a =\n        tf.tensor4d(\n              [3, 2, 5, 100, -7, 2, 8, 7, -5, 101, 7, -2, 100, -7, 2, 8, 7, -5],\n              [1, 2, 3, 3])\n            .add(1);\n    const r = tf.argMin(a, -1);\n    tf.env().set('WEBGL_LAZILY_UNPACK', webglLazilyUnpackFlagSaved);\n    tf.env().set(\n        'WEBGL_PACK_BINARY_OPERATIONS', webglPackBinaryOperationsFlagSaved);\n\n    expect(r.dtype).toBe('int32');\n    expectArraysEqual(await r.data(), [1, 1, 2, 2, 1, 2]);\n  });\n\n  it('should not leak memory when called after unpacked op', async () => {\n    const webglPackBinaryOperationsFlagSaved =\n        tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    tf.env().set('WEBGL_PACK_BINARY_OPERATIONS', false);\n\n    const a =\n        tf.tensor5d(\n              [3, 2, 5, 100, -7, 2, 8, 7, -5, 101, 7, -2, 100, -7, 2, 8, 7, -5],\n              [1, 2, 3, 1, 3])\n            .add(1);\n    const startNumBytes = tf.memory().numBytes;\n    const startNumTensors = tf.memory().numTensors;\n    const r = tf.argMin(a, -1);\n    tf.env().set(\n        'WEBGL_PACK_BINARY_OPERATIONS', webglPackBinaryOperationsFlagSaved);\n    const endNumBytes = tf.memory().numBytes;\n    const endNumTensors = tf.memory().numTensors;\n    expect(endNumBytes - startNumBytes).toEqual(24);\n    expect(endNumTensors - startNumTensors).toEqual(1);\n    expect(r.dtype).toBe('int32');\n    expectArraysEqual(await r.data(), [1, 1, 2, 2, 1, 2]);\n  });\n});\n\ndescribeWithFlags('slice and memory usage', WEBGL_ENVS, () => {\n  beforeAll(() => {\n    tf.env().set('WEBGL_CPU_FORWARD', false);\n    tf.env().set('WEBGL_SIZE_UPLOAD_UNIFORM', 0);\n  });\n\n  it('slice a tensor, read it and check memory', async () => {\n    const getMem = () => tf.memory() as WebGLMemoryInfo;\n    expect(getMem().numBytesInGPU).toBe(0);\n\n    // Lazy upload won't increase gpu memory.\n    const a = tf.tensor([2, 3]);\n    expect(getMem().numBytesInGPU).toBe(0);\n\n    // Upload a to the GPU by running an op.\n    a.square().dispose();\n    expect(getMem().numBytesInGPU).toBe(8);\n\n    // Slicing does not allocate new memory.\n    const b = a.slice(0);\n    expect(getMem().numBytesInGPU).toBe(8);\n\n    // Download a to the CPU but the texture remains on GPU\n    // since b points to it.\n    await a.data();\n    expect(getMem().numBytesInGPU).toBe(8);\n\n    // Dispose a, but the texture should still remain on the GPU\n    // since b points to it.\n    a.dispose();\n    expect(getMem().numBytesInGPU).toBe(8);\n\n    // Dispose b and expect 0 memory on GPU.\n    b.dispose();\n    expect(getMem().numBytesInGPU).toBe(0);\n  });\n});\n\ndescribeWithFlags('slice a packed texture', WEBGL_ENVS, () => {\n  beforeAll(() => {\n    tf.env().set('WEBGL_PACK', true);\n  });\n\n  it('slice after a matmul', async () => {\n    const a = [[1, 2], [3, 4]];\n    const b = [[5, 6], [7, 8]];\n    // Matmul gives a packed tensor in webgl.\n    //  [19, 22]\n    //  [43, 50]\n    const c = tf.matMul(a, b);\n    expectArraysClose(await c.slice([0, 0]).data(), [19, 22, 43, 50]);\n    expectArraysClose(await c.slice([0, 1]).data(), [22, 50]);\n    expectArraysClose(await c.slice([1, 0]).data(), [43, 50]);\n    expectArraysClose(await c.slice([1, 1]).data(), [50]);\n  });\n});\n\ndescribeWithFlags('pointwise conv2d packed', WEBGL_ENVS, () => {\n  beforeAll(() => {\n    tf.env().set('WEBGL_SIZE_UPLOAD_UNIFORM', 0);\n  });\n\n  it('pointwise conv2d optimization with odd input size', async () => {\n    // We do special optimization in the webl backend which avoids an expensive\n    // reshape, when the following 3 conditions are met:\n    // 1) the input width/height is odd-shaped.\n    // 2) the input is already packed.\n    // 3) the filter size is 1x1, i.e. pointwise.\n    const inChannels = 1;\n    const outChannels = 2;\n    const oddInputSize = 3;\n    const x: Tensor3D = tf.ones([oddInputSize, oddInputSize, inChannels]);\n    const xPacked = tf.relu(x);\n    const pointwiseFilter: Tensor4D = tf.ones([1, 1, inChannels, outChannels]);\n    const strides = 1;\n    const pad = 'same';\n    const c = tf.conv2d(xPacked, pointwiseFilter, strides, pad);\n    expectArraysClose(\n        await c.data(), [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]);\n  });\n});\n\ndescribeWithFlags('relu', WEBGL_ENVS, () => {\n  it('works with squarification for prime number length vector', async () => {\n    const maxTextureSize = tf.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', 5);\n    const a = tf.tensor1d([1, -2, 5, -3, -1, 4, 7]);\n    const result = tf.relu(a);\n\n    tf.env().set('WEBGL_MAX_TEXTURE_SIZE', maxTextureSize);\n    expectArraysClose(await result.data(), [1, 0, 5, 0, 0, 4, 7]);\n  });\n});\n\ndescribeWithFlags('packed clip', PACKED_ENVS, () => {\n  it('should not leak memory', () => {\n    const a = tf.tensor1d([3, -1, 0, 100, -7, 2]);\n    const min = -1;\n    const max = 50;\n\n    const startNumBytes = tf.memory().numBytes;\n    const startNumTensors = tf.memory().numTensors;\n    tf.clipByValue(a, min, max);\n    const endNumBytes = tf.memory().numBytes;\n    const endNumTensors = tf.memory().numTensors;\n\n    expect(endNumBytes - startNumBytes).toEqual(24);\n    expect(endNumTensors - startNumTensors).toEqual(1);\n  });\n\n  it('basic', async () => {\n    const a = tf.tensor1d([3, -1, 0, 100, -7, 2]);\n    const min = -1;\n    const max = 50;\n\n    const result = tf.clipByValue(a, min, max);\n\n    expectArraysClose(await result.data(), [3, -1, 0, 50, -1, 2]);\n  });\n\n  it('using extreme values', async () => {\n    const a = tf.tensor1d([3, -1, 0, 100, -7, 2]);\n    let result =\n        tf.clipByValue(a, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n    expectArraysClose(await result.data(), [3, -1, 0, 100, -7, 2]);\n\n    result = tf.clipByValue(a, Number.MIN_VALUE, Number.MAX_VALUE);\n    expectArraysClose(\n        await result.data(),\n        [3, Number.MIN_VALUE, Number.MIN_VALUE, 100, Number.MIN_VALUE, 2]);\n  });\n\n  it('should work for scalars', async () => {\n    const a = tf.scalar(-4);\n    const min = -1;\n    const max = 50;\n\n    const result = tf.clipByValue(a, min, max);\n\n    expectArraysClose(await result.data(), [min]);\n  });\n\n  it('derivative: 1D tensor with max or min value', async () => {\n    const min = -1;\n    const max = 2;\n    const x = tf.tensor1d([-1, 1, 2, 3]);\n    const dy = tf.tensor1d([1, 10, 100, 1000]);\n    const gradients = tf.grad(x => x.clipByValue(min, max))(x, dy);\n\n    expect(gradients.shape).toEqual(x.shape);\n    expect(gradients.dtype).toEqual('float32');\n    expectArraysClose(await gradients.data(), [1, 10, 100, 0]);\n  });\n});\n\ndescribeWithFlags('depthwiseConv2d packed', PACKED_ENVS, () => {\n  it('should not leak memory', () => {\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, 1]);\n    const w = tf.tensor4d(\n        [0.303873, 0.229223, 0.144333, 0.803373],\n        [2, 2, 1, 1],\n    );\n\n    const startNumBytes = tf.memory().numBytes;\n    const startNumTensors = tf.memory().numTensors;\n\n    tf.depthwiseConv2d(x, w, 1, 'valid');\n\n    const endNumBytes = tf.memory().numBytes;\n    const endNumTensors = tf.memory().numTensors;\n\n    expect(endNumBytes - startNumBytes).toEqual(16);\n    expect(endNumTensors - startNumTensors).toEqual(1);\n  });\n});\n"]}