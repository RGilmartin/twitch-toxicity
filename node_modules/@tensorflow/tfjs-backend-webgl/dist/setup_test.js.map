{"version":3,"file":"setup_test.js","sourceRoot":"","sources":["../src/setup_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,8BAA8B,CAAC;AACtC,iDAAiD;AACjD,OAAO,wEAAwE,CAAC;AAChF,iDAAiD;AACjD,OAAO,mDAAmD,CAAC;AAC3D,OAAO,+BAA+B,CAAC;AACvC,iDAAiD;AACjD,OAAO,EAAC,0BAA0B,EAAE,WAAW,EAAE,gBAAgB,EAAE,SAAS,EAAa,MAAM,yCAAyC,CAAC;AAEzI,MAAM,YAAY,GAAiB,EAAE,CAAC;AACtC,MAAM,aAAa,GAAG,CAAC,QAAgB,EAAE,EAAE;IACzC,MAAM,SAAS,GACX,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;IAClE,KAAK,MAAM,MAAM,IAAI,SAAS,EAAE;QAC9B,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF,gBAAgB,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;AAK9C,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;IACpC,MAAM,OAAO,GAAG,0BAA0B,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC7E,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KACxB;CACF;AAED,kCAAkC;AAClC,gDAAgD;AAChD,OAAO,kCAAkC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '@tensorflow/tfjs-backend-cpu';\n// tslint:disable-next-line: no-imports-from-dist\nimport '@tensorflow/tfjs-core/dist/public/chained_ops/register_all_chained_ops';\n// tslint:disable-next-line: no-imports-from-dist\nimport '@tensorflow/tfjs-core/dist/register_all_gradients';\nimport './backend_webgl_test_registry';\n// tslint:disable-next-line: no-imports-from-dist\nimport {parseTestEnvFromKarmaFlags, setTestEnvs, setupTestFilters, TEST_ENVS, TestFilter} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nconst TEST_FILTERS: TestFilter[] = [];\nconst customInclude = (testName: string) => {\n  const toExclude =\n      ['isBrowser: false', 'tensor in worker', 'dilation gradient'];\n  for (const subStr of toExclude) {\n    if (testName.includes(subStr)) {\n      return false;\n    }\n  }\n  return true;\n};\nsetupTestFilters(TEST_FILTERS, customInclude);\n\n// Allow flags to override test envs\n// tslint:disable-next-line:no-any\ndeclare let __karma__: any;\nif (typeof __karma__ !== 'undefined') {\n  const testEnv = parseTestEnvFromKarmaFlags(__karma__.config.args, TEST_ENVS);\n  if (testEnv != null) {\n    setTestEnvs([testEnv]);\n  }\n}\n\n// Import and run tests from core.\n// tslint:disable-next-line:no-imports-from-dist\nimport '@tensorflow/tfjs-core/dist/tests';\n"]}