{"version":3,"file":"backend_cpu_test.js","sourceRoot":"","sources":["../src/backend_cpu_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {engine, test_util, util} from '@tensorflow/tfjs-core';\n\nconst {expectArraysEqual} = test_util;\n// tslint:disable-next-line: no-imports-from-dist\nimport {describeWithFlags, ALL_ENVS} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\nimport {MathBackendCPU} from './backend_cpu';\n\n/** Private test util for decoding array of strings in utf-8. */\nfunction decodeStrings(bytes: Uint8Array[]): string[] {\n  return bytes.map(b => util.decodeString(b));\n}\n\ndescribeWithFlags('backendCPU', ALL_ENVS, () => {\n  let backend: MathBackendCPU;\n  beforeEach(() => {\n    backend = tf.backend() as MathBackendCPU;\n  });\n\n  it('register string tensor with values', () => {\n    const t = engine().makeTensor(['a', 'b', 'c'], [3], 'string');\n    expectArraysEqual(\n        decodeStrings(backend.readSync(t.dataId) as Uint8Array[]),\n        ['a', 'b', 'c']);\n  });\n\n  it('register string tensor with values and mismatched shape', () => {\n    expect(() => tf.tensor(['a', 'b', 'c'], [4], 'string')).toThrowError();\n  });\n});\n\ndescribeWithFlags('depthToSpace', ALL_ENVS, () => {\n  it('throws when CPU backend used with data format NCHW', () => {\n    const t = tf.tensor4d([1, 2, 3, 4], [1, 4, 1, 1]);\n    const blockSize = 2;\n    const dataFormat = 'NCHW';\n\n    expect(() => tf.depthToSpace(t, blockSize, dataFormat))\n        .toThrowError(\n            `Only NHWC dataFormat supported on CPU for depthToSpace. Got ${\n                dataFormat}`);\n  });\n});\n\ndescribeWithFlags('gatherND CPU', ALL_ENVS, () => {\n  it('should throw error when index out of range', () => {\n    const indices = tf.tensor2d([0, 2, 99], [3, 1], 'int32');\n    const input = tf.tensor2d(\n        [100, 101, 102, 777, 778, 779, 10000, 10001, 10002], [3, 3], 'float32');\n    expect(() => tf.gatherND(input, indices)).toThrow();\n  });\n});\n\ndescribeWithFlags('scatterND CPU', ALL_ENVS, () => {\n  it('should throw error when index out of range', () => {\n    const indices = tf.tensor2d([0, 4, 99], [3, 1], 'int32');\n    const updates = tf.tensor2d(\n        [100, 101, 102, 777, 778, 779, 10000, 10001, 10002], [3, 3], 'float32');\n    const shape = [5, 3];\n    expect(() => tf.scatterND(indices, updates, shape)).toThrow();\n  });\n\n  it('should throw error when indices has wrong dimension', () => {\n    const indices = tf.tensor2d([0, 4, 99], [3, 1], 'int32');\n    const updates = tf.tensor2d(\n        [100, 101, 102, 777, 778, 779, 10000, 10001, 10002], [3, 3], 'float32');\n    const shape = [2, 3];\n    expect(() => tf.scatterND(indices, updates, shape)).toThrow();\n  });\n});\n\ndescribeWithFlags('sparseToDense CPU', ALL_ENVS, () => {\n  it('should throw error when index out of range', () => {\n    const defaultValue = 2;\n    const indices = tf.tensor1d([0, 2, 6], 'int32');\n    const values = tf.tensor1d([100, 101, 102], 'int32');\n    const shape = [6];\n    expect(() => tf.sparseToDense(indices, values, shape, defaultValue))\n        .toThrow();\n  });\n});\n\ndescribeWithFlags('memory cpu', ALL_ENVS, () => {\n  it('unreliable is true due to auto gc', () => {\n    tf.tensor(1);\n    const mem = tf.memory();\n    expect(mem.numTensors).toBe(1);\n    expect(mem.numDataBuffers).toBe(1);\n    expect(mem.numBytes).toBe(4);\n    expect(mem.unreliable).toBe(true);\n\n    const expectedReason =\n        'The reported memory is an upper bound. Due to automatic garbage ' +\n        'collection, the true allocated memory may be less.';\n    expect(mem.reasons.indexOf(expectedReason) >= 0).toBe(true);\n  });\n\n  it('unreliable is true due to both auto gc and string tensors', () => {\n    tf.tensor(1);\n    tf.tensor('a');\n\n    const mem = tf.memory();\n    expect(mem.numTensors).toBe(2);\n    expect(mem.numDataBuffers).toBe(2);\n    expect(mem.numBytes).toBe(5);\n    expect(mem.unreliable).toBe(true);\n\n    const expectedReasonGC =\n        'The reported memory is an upper bound. Due to automatic garbage ' +\n        'collection, the true allocated memory may be less.';\n    expect(mem.reasons.indexOf(expectedReasonGC) >= 0).toBe(true);\n    const expectedReasonString =\n        'Memory usage by string tensors is approximate ' +\n        '(2 bytes per character)';\n    expect(mem.reasons.indexOf(expectedReasonString) >= 0).toBe(true);\n  });\n});\n"]}