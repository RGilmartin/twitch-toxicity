{"version":3,"file":"base_callbacks_test.js","sourceRoot":"","sources":["../src/base_callbacks_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Unit tests for callbacks.\n */\n\nimport {scalar, zeros} from '@tensorflow/tfjs-core';\n\nimport {BaseCallback, BaseLogger, CallbackConstructorRegistry, CallbackList, History} from './base_callbacks';\nimport {Callback} from './callbacks';\nimport {LayersModel} from './engine/training';\nimport * as tfl from './index';\nimport {disposeTensorsInLogs, Logs, resolveScalarsInLogs, UnresolvedLogs} from './logs';\nimport {describeMathCPUAndGPU} from './utils/test_utils';\n\ndescribe('BaseLogger Callback', () => {\n  it('Records and averages losses in an epoch', async () => {\n    const baseLogger = new BaseLogger();\n    baseLogger.setParams({metrics: ['loss', 'val_loss']});\n    await baseLogger.onTrainBegin();\n    await baseLogger.onEpochBegin(0);\n    await baseLogger.onBatchBegin(0);\n    await baseLogger.onBatchEnd(0, {batch: 0, size: 10, loss: 5});\n    await baseLogger.onBatchBegin(1);\n    await baseLogger.onBatchEnd(1, {batch: 1, size: 10, loss: 6});\n    await baseLogger.onBatchBegin(2);\n    await baseLogger.onBatchEnd(2, {batch: 2, size: 5, loss: 7});\n    const epochLog: UnresolvedLogs = {val_loss: 3};\n    await baseLogger.onEpochEnd(0, epochLog);\n    expect(epochLog['val_loss'] as number).toEqual(3);\n    expect(epochLog['loss'] as number)\n        .toBeCloseTo((10 * 5 + 10 * 6 + 5 * 7) / (10 + 10 + 5));\n  });\n  it('Forgets old epochs', async () => {\n    const baseLogger = new BaseLogger();\n    baseLogger.setParams({metrics: ['loss', 'val_loss']});\n    const numOldEpochs = 2;\n    await baseLogger.onTrainBegin();\n    for (let i = 0; i < numOldEpochs; ++i) {\n      await baseLogger.onEpochBegin(i);\n      await baseLogger.onBatchBegin(0);\n      await baseLogger.onBatchEnd(0, {batch: 0, size: 10, loss: -5});\n      const epochLog: UnresolvedLogs = {val_loss: 3};\n      await baseLogger.onEpochEnd(i, epochLog);\n    }\n    await baseLogger.onEpochBegin(numOldEpochs);\n    await baseLogger.onBatchBegin(0);\n    await baseLogger.onBatchEnd(0, {batch: 0, size: 10, loss: 5});\n    await baseLogger.onBatchBegin(1);\n    await baseLogger.onBatchEnd(1, {batch: 1, size: 10, loss: 6});\n    await baseLogger.onBatchBegin(2);\n    await baseLogger.onBatchEnd(2, {batch: 2, size: 5, loss: 7});\n    const epochLog: UnresolvedLogs = {val_loss: 3};\n    await baseLogger.onEpochEnd(numOldEpochs, epochLog);\n    expect(epochLog['val_loss'] as number).toEqual(3);\n    expect(epochLog['loss'] as number)\n        .toBeCloseTo((10 * 5 + 10 * 6 + 5 * 7) / (10 + 10 + 5));\n  });\n});\n\ndescribe('CallbackList', () => {\n  it('Constructor with empty arg', async () => {\n    const callbackList = new CallbackList();\n    await callbackList.onTrainBegin();\n    await callbackList.onTrainEnd();\n  });\n  it('Constructor and setParams with array of callbacks', () => {\n    const history1 = new History();\n    const history2 = new History();\n    const callbackList = new CallbackList([history1, history2]);\n    const params = {'verbose': 3};\n    callbackList.setParams(params);\n    expect(history1.params).toEqual(params);\n    expect(history2.params).toEqual(params);\n  });\n  it('onTrainBegin', async () => {\n    const history1 = new History();\n    const history2 = new History();\n    const callbackList = new CallbackList([history1, history2]);\n    await callbackList.onTrainBegin();\n    expect(history1.epoch).toEqual([]);\n    expect(history1.history).toEqual({});\n    expect(history2.epoch).toEqual([]);\n    expect(history2.history).toEqual({});\n  });\n  it('onEpochEnd', async () => {\n    const history1 = new History();\n    const history2 = new History();\n    const callbackList = new CallbackList([history1, history2]);\n    await callbackList.onTrainBegin();\n    await callbackList.onEpochEnd(100, {'val_loss': 10, 'val_accuracy': 0.1});\n    expect(history1.epoch).toEqual([100]);\n    expect(history1.history).toEqual({'val_loss': [10], 'val_accuracy': [0.1]});\n    expect(history2.epoch).toEqual([100]);\n    expect(history2.history).toEqual({'val_loss': [10], 'val_accuracy': [0.1]});\n    await callbackList.onEpochEnd(101, {'val_loss': 9.5, 'val_accuracy': 0.2});\n    expect(history1.epoch).toEqual([100, 101]);\n    expect(history1.history)\n        .toEqual({'val_loss': [10, 9.5], 'val_accuracy': [0.1, 0.2]});\n    expect(history2.epoch).toEqual([100, 101]);\n    expect(history2.history)\n        .toEqual({'val_loss': [10, 9.5], 'val_accuracy': [0.1, 0.2]});\n  });\n  it('append', async () => {\n    const history1 = new History();\n    const history2 = new History();\n    const callbackList = new CallbackList([history1]);\n    await callbackList.onTrainBegin();\n    expect(history1.epoch).toEqual([]);\n    expect(history1.history).toEqual({});\n    await callbackList.append(history2);\n    await callbackList.onTrainBegin();\n    expect(history2.epoch).toEqual([]);\n    expect(history2.history).toEqual({});\n  });\n});\n\ndescribeMathCPUAndGPU('resolveScalarsInLogs', () => {\n  it('Resolve mixed numbers and scalars', async () => {\n    const logs: UnresolvedLogs = {\n      'a': 1,\n      'b': scalar(2),\n      'c': -3,\n      'd': scalar(-4),\n    };\n    await resolveScalarsInLogs(logs);\n    expect(logs['a']).toEqual(1);\n    expect(logs['b']).toEqual(2);\n    expect(logs['c']).toEqual(-3);\n    expect(logs['d']).toEqual(-4);\n  });\n\n  it('Resolve null works fine', async () => {\n    const logs: UnresolvedLogs = null;\n    await resolveScalarsInLogs(logs);\n    expect(logs).toEqual(null);\n  });\n\n  it('Resolve empty works fine', async () => {\n    const logs: UnresolvedLogs = {};\n    await resolveScalarsInLogs(logs);\n    expect(logs).toEqual({});\n  });\n});\n\ndescribeMathCPUAndGPU('disposeTensorsInLogs', () => {\n  it('Resolve mixed numbers and scalars', () => {\n    const logs: UnresolvedLogs = {\n      'a': 1,\n      'b': scalar(2),\n      'c': -3,\n      'd': scalar(-4),\n    };\n    disposeTensorsInLogs(logs);\n    expect(logs['a']).toEqual(1);\n    // tslint:disable-next-line:no-any\n    expect((logs['b'] as any).isDisposed).toEqual(true);\n    expect(logs['c']).toEqual(-3);\n    // tslint:disable-next-line:no-any\n    expect((logs['d'] as any).isDisposed).toEqual(true);\n  });\n});\n\ndescribe('History Callback', () => {\n  it('onTrainBegin', async () => {\n    const history = new History();\n    await history.onTrainBegin();\n    expect(history.epoch).toEqual([]);\n    expect(history.history).toEqual({});\n  });\n  it('onEpochEnd', async () => {\n    const history = new History();\n    await history.onTrainBegin();\n    await history.onEpochEnd(0, {'val_loss': 10, 'val_accuracy': 0.1});\n    expect(history.epoch).toEqual([0]);\n    expect(history.history).toEqual({'val_loss': [10], 'val_accuracy': [0.1]});\n    await history.onEpochEnd(1, {'val_loss': 9.5, 'val_accuracy': 0.2});\n    expect(history.epoch).toEqual([0, 1]);\n    expect(history.history)\n        .toEqual({'val_loss': [10, 9.5], 'val_accuracy': [0.1, 0.2]});\n  });\n});\n\nclass MockLayersModel extends LayersModel {\n  constructor(name: string) {\n    super({inputs: [], outputs: [], name});\n  }\n}\n\nclass MockCallback extends Callback {}\n\ndescribe('CallbackList', () => {\n  it('Constructor and setModel with array of callbacks', () => {\n    const mockCallback1 = new MockCallback();\n    const mockCallback2 = new MockCallback();\n    const callbackList = new CallbackList([mockCallback1, mockCallback2]);\n    const model = new MockLayersModel('MockModelA');\n    callbackList.setModel(model);\n    expect(mockCallback1.model).toEqual(model);\n    expect(mockCallback2.model).toEqual(model);\n  });\n});\n\nlet fake1Epochs: number[];\nclass FakeCallback1 extends BaseCallback {\n  constructor() {\n    super();\n    fake1Epochs = [];\n  }\n  async onEpochEnd(epoch: number, logs: Logs) {\n    fake1Epochs.push(epoch);\n  }\n}\n\nlet fake2Epochs: number[];\nclass FakeCallback2 extends BaseCallback {\n  constructor() {\n    super();\n    fake2Epochs = [];\n  }\n  async onEpochEnd(epoch: number, logs: Logs) {\n    fake2Epochs.push(epoch);\n  }\n}\n\ndescribe('CallbackConstructorRegistry', () => {\n  beforeEach(() => {\n    // tslint:disable-next-line:no-any\n    (CallbackConstructorRegistry as any).clear();\n  });\n\n  it('Empty registry creates empty list of callbacks', () => {\n    expect(CallbackConstructorRegistry.createCallbacks(0)).toEqual([]);\n    expect(CallbackConstructorRegistry.createCallbacks(1)).toEqual([]);\n    expect(CallbackConstructorRegistry.createCallbacks(2)).toEqual([]);\n  });\n\n  it('Registry with one element', () => {\n    tfl.registerCallbackConstructor(1, FakeCallback1);\n\n    let callbacks = CallbackConstructorRegistry.createCallbacks(0);\n    expect(callbacks.length).toEqual(0);\n\n    callbacks = CallbackConstructorRegistry.createCallbacks(1);\n    expect(callbacks.length).toEqual(1);\n    expect(callbacks[0] instanceof FakeCallback1).toEqual(true);\n\n    callbacks = CallbackConstructorRegistry.createCallbacks(2);\n    expect(callbacks.length).toEqual(1);\n    expect(callbacks[0] instanceof FakeCallback1).toEqual(true);\n  });\n\n  it('Registry with two elements on two levels', () => {\n    tfl.registerCallbackConstructor(1, FakeCallback1);\n    tfl.registerCallbackConstructor(2, FakeCallback2);\n\n    let callbacks = CallbackConstructorRegistry.createCallbacks(0);\n    expect(callbacks.length).toEqual(0);\n\n    callbacks = CallbackConstructorRegistry.createCallbacks(1);\n    expect(callbacks.length).toEqual(1);\n    expect(callbacks[0] instanceof FakeCallback1).toEqual(true);\n\n    callbacks = CallbackConstructorRegistry.createCallbacks(2);\n    expect(callbacks.length).toEqual(2);\n    expect(callbacks[0] instanceof FakeCallback1).toEqual(true);\n    expect(callbacks[1] instanceof FakeCallback2).toEqual(true);\n  });\n\n  it('Registry with two elements on the same level', () => {\n    tfl.registerCallbackConstructor(2, FakeCallback1);\n    tfl.registerCallbackConstructor(2, FakeCallback2);\n\n    let callbacks = CallbackConstructorRegistry.createCallbacks(0);\n    expect(callbacks.length).toEqual(0);\n\n    callbacks = CallbackConstructorRegistry.createCallbacks(1);\n    expect(callbacks.length).toEqual(0);\n\n    callbacks = CallbackConstructorRegistry.createCallbacks(2);\n    expect(callbacks.length).toEqual(2);\n    expect(callbacks[0] instanceof FakeCallback1).toEqual(true);\n    expect(callbacks[1] instanceof FakeCallback2).toEqual(true);\n  });\n\n  it('Duplicate registration on same level leads to Error', () => {\n    tfl.registerCallbackConstructor(1, FakeCallback1);\n    expect(() => tfl.registerCallbackConstructor(1, FakeCallback1))\n        .toThrowError(/Duplicate callback constructor/);\n  });\n\n  it('Duplicate registration on different level leads to Error', () => {\n    tfl.registerCallbackConstructor(1, FakeCallback1);\n    expect(() => tfl.registerCallbackConstructor(2, FakeCallback1))\n        .toThrowError(/Duplicate callback constructor/);\n  });\n\n  it('Invalid verbosityLevel leads to Error', () => {\n    expect(() => tfl.registerCallbackConstructor(-1, FakeCallback1))\n        .toThrowError(/is expected to be an integer >= 0/);\n    expect(() => tfl.registerCallbackConstructor(0.5, FakeCallback1))\n        .toThrowError(/is expected to be an integer >= 0/);\n    expect(() => tfl.registerCallbackConstructor(NaN, FakeCallback1))\n        .toThrowError(/is expected to be an integer >= 0/);\n  });\n});\n\ndescribeMathCPUAndGPU('CallbackConstructorRegistry initialization', () => {\n  it('CallbackConstructorRegistry is initialized properly', () => {\n    expect(CallbackConstructorRegistry.createCallbacks(1)).toEqual([]);\n  });\n});\n\ndescribeMathCPUAndGPU('LayersModel.fit and CallbackConstructorRegistry', () => {\n  beforeEach(() => {\n    // tslint:disable-next-line:no-any\n    (CallbackConstructorRegistry as any).clear();\n    fake1Epochs = [];\n    fake2Epochs = [];\n  });\n\n  it('LayersModel.fit call with no callback ctor registered', async () => {\n    const model = tfl.sequential();\n    model.add(tfl.layers.dense({units: 1, inputShape: [1]}));\n    model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n    const xs = zeros([4, 1]);\n    const ys = zeros([4, 1]);\n    await model.fit(xs, ys, {epochs: 3});\n\n    expect(fake1Epochs).toEqual([]);\n  });\n\n  it('LayersModel.fit call with one callback ctor registered', async () => {\n    tfl.registerCallbackConstructor(1, FakeCallback1);\n\n    const model = tfl.sequential();\n    model.add(tfl.layers.dense({units: 1, inputShape: [1]}));\n    model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n    const xs = zeros([4, 1]);\n    const ys = zeros([4, 1]);\n    await model.fit(xs, ys, {epochs: 3});\n\n    expect(fake1Epochs).toEqual([0, 1, 2]);\n  });\n\n  it('LayersModel.fit call with two callback ctor registered', async () => {\n    tfl.registerCallbackConstructor(1, FakeCallback1);\n    tfl.registerCallbackConstructor(2, FakeCallback2);\n\n    const model = tfl.sequential();\n    model.add(tfl.layers.dense({units: 1, inputShape: [1]}));\n    model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n    const xs = zeros([4, 1]);\n    const ys = zeros([4, 1]);\n\n    await model.fit(xs, ys, {epochs: 3, verbose: 2});\n    expect(fake1Epochs).toEqual([0, 1, 2]);\n    expect(fake2Epochs).toEqual([0, 1, 2]);\n\n    fake1Epochs = [];\n    fake2Epochs = [];\n\n    await model.fit(xs, ys, {epochs: 3, verbose: 1});\n    expect(fake1Epochs).toEqual([0, 1, 2]);\n    expect(fake2Epochs).toEqual([]);\n  });\n});\n"]}