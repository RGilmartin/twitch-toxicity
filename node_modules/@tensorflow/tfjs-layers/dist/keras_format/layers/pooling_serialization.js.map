{"version":3,"file":"pooling_serialization.js","sourceRoot":"","sources":["../../../src/keras_format/layers/pooling_serialization.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAwDH,4EAA4E;AAC5E,8EAA8E;AAE9E;;;;GAIG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAA4B;IAC7D,kBAAkB;IAClB,kBAAkB;IAClB,wBAAwB;IACxB,wBAAwB;IACxB,oBAAoB;IACpB,oBAAoB;IACpB,cAAc;IACd,cAAc;CACf,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {DataFormatSerialization, PaddingMode} from '../common';\nimport {BaseLayerSerialization, LayerConfig} from '../topology_config';\n\nexport interface Pooling1DLayerConfig extends LayerConfig {\n  pool_size?: [number];\n  strides?: [number];\n  padding?: PaddingMode;\n}\n\nexport type MaxPooling1DLayerSerialization =\n    BaseLayerSerialization<'MaxPooling1D', Pooling1DLayerConfig>;\n\nexport type AveragePooling1DLayerSerialization =\n    BaseLayerSerialization<'AveragePooling1D', Pooling1DLayerConfig>;\n\nexport interface Pooling2DLayerConfig extends LayerConfig {\n  pool_size?: number|[number, number];\n  strides?: number|[number, number];\n  padding?: PaddingMode;\n  data_format?: DataFormatSerialization;\n}\n\nexport type MaxPooling2DLayerSerialization =\n    BaseLayerSerialization<'MaxPooling2D', Pooling2DLayerConfig>;\n\nexport type AveragePooling2DLayerSerialization =\n    BaseLayerSerialization<'AveragePooling2D', Pooling2DLayerConfig>;\n\nexport type GlobalAveragePooling1DLayerSerialization =\n    BaseLayerSerialization<'GlobalAveragePooling1D', LayerConfig>;\n\nexport type GlobalMaxPooling1DLayerSerialization =\n    BaseLayerSerialization<'GlobalMaxPooling1D', LayerConfig>;\n\nexport interface GlobalPooling2DLayerConfig extends LayerConfig {\n  data_format?: DataFormatSerialization;\n}\n\nexport type GlobalAveragePooling2DLayerSerialization = BaseLayerSerialization<\n    'GlobalAveragePooling2D', GlobalPooling2DLayerConfig>;\n\nexport type GlobalMaxPooling2DLayerSerialization =\n    BaseLayerSerialization<'GlobalMaxPooling2D', GlobalPooling2DLayerConfig>;\n\n// Update poolingLayerClassNames below in concert with this.\nexport type PoolingLayerSerialization = MaxPooling1DLayerSerialization|\n    AveragePooling1DLayerSerialization|MaxPooling2DLayerSerialization|\n    AveragePooling2DLayerSerialization|GlobalAveragePooling1DLayerSerialization|\n    GlobalMaxPooling1DLayerSerialization|\n    GlobalAveragePooling2DLayerSerialization|\n    GlobalMaxPooling2DLayerSerialization;\n\nexport type PoolingLayerClassName = PoolingLayerSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid.\n\n/**\n * A string array of valid PoolingLayer class names.\n *\n * This is guaranteed to match the `PoolingLayerClassName` union type.\n */\nexport const poolingLayerClassNames: PoolingLayerClassName[] = [\n  'AveragePooling1D',\n  'AveragePooling2D',\n  'GlobalAveragePooling1D',\n  'GlobalAveragePooling2D',\n  'GlobalMaxPooling1D',\n  'GlobalMaxPooling2D',\n  'MaxPooling1D',\n  'MaxPooling2D',\n];\n"]}