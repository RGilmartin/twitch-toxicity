{"version":3,"file":"wrappers_serialization.js","sourceRoot":"","sources":["../../../src/keras_format/layers/wrappers_serialization.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AA4BH,4EAA4E;AAC5E,8EAA8E;AAE9E;;;;GAIG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAA4B;IAC7D,eAAe;IACf,iBAAiB;CAClB,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {BidirectionalMergeMode} from '../common';\nimport {BaseLayerSerialization, LayerConfig} from '../topology_config';\nimport {LayerSerialization} from './layer_serialization';\nimport {RecurrentLayerSerialization} from './recurrent_serialization';\n\nexport type TimeDistributedLayerSerialization =\n    BaseLayerSerialization<'TimeDistributed', TimeDistributedLayerConfig>;\n\nexport interface TimeDistributedLayerConfig extends LayerConfig {\n  layer: LayerSerialization;\n}\n\nexport type BidirectionalLayerSerialization =\n    BaseLayerSerialization<'Bidirectional', BidirectionalLayerConfig>;\n\nexport interface BidirectionalLayerConfig extends LayerConfig {\n  layer: RecurrentLayerSerialization;\n  merge_mode?: BidirectionalMergeMode;\n}\n\n// Update wrapperLayerClassNames below in concert with this.\nexport type WrapperLayerSerialization =\n    TimeDistributedLayerSerialization|BidirectionalLayerSerialization;\n\nexport type WrapperLayerClassName = WrapperLayerSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid.\n\n/**\n * A string array of valid WrapperLayer class names.\n *\n * This is guaranteed to match the `WrapperLayerClassName` union type.\n */\nexport const wrapperLayerClassNames: WrapperLayerClassName[] = [\n  'Bidirectional',\n  'TimeDistributed',\n];\n"]}