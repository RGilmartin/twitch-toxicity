{"version":3,"file":"advanced_activation_serialization.js","sourceRoot":"","sources":["../../../src/keras_format/layers/advanced_activation_serialization.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AA4DH,4EAA4E;AAC5E,8EAA8E;AAE9E;;;;;GAKG;AACH,MAAM,CAAC,MAAM,iCAAiC,GACL;IACnC,MAAM;IACN,WAAW;IACX,OAAO;IACP,KAAK;IACL,iBAAiB;IACjB,SAAS;CACV,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {ConstraintSerialization} from '../constraint_config';\nimport {InitializerSerialization} from '../initializer_config';\nimport {RegularizerSerialization} from '../regularizer_config';\nimport {BaseLayerSerialization, LayerConfig} from '../topology_config';\n\nexport interface ReLULayerConfig extends LayerConfig {\n  max_value?: number;\n}\n\nexport type ReLULayerSerialization =\n    BaseLayerSerialization<'ReLU', ReLULayerConfig>;\n\nexport interface LeakyReLULayerConfig extends LayerConfig {\n  alpha?: number;\n}\n\nexport type LeakyReLULayerSerialization =\n    BaseLayerSerialization<'LeakyReLU', LeakyReLULayerConfig>;\n\nexport interface PReLULayerConfig extends LayerConfig {\n  alpha_initializer?: InitializerSerialization;\n  alpha_regularizer?: RegularizerSerialization;\n  alpha_constraint?: ConstraintSerialization;\n  shared_axes?: number|number[];\n}\n\nexport type PReLULayerSerialization =\n    BaseLayerSerialization<'PReLU', PReLULayerConfig>;\n\nexport interface ELULayerConfig extends LayerConfig {\n  alpha?: number;\n}\n\nexport type ELULayerSerialization =\n    BaseLayerSerialization<'ELU', ELULayerConfig>;\n\nexport interface ThresholdedReLULayerConfig extends LayerConfig {\n  theta?: number;\n}\n\nexport type ThresholdedReLULayerSerialization =\n    BaseLayerSerialization<'ThresholdedReLU', ThresholdedReLULayerConfig>;\n\nexport interface SoftmaxLayerConfig extends LayerConfig {\n  axis?: number;\n}\n\nexport type SoftmaxLayerSerialization =\n    BaseLayerSerialization<'Softmax', SoftmaxLayerConfig>;\n\n// Update advancedActivationLayerClassNames below in concert with this.\nexport type AdvancedActivationLayerSerialization = ReLULayerSerialization|\n    LeakyReLULayerSerialization|PReLULayerSerialization|ELULayerSerialization|\n    ThresholdedReLULayerSerialization|SoftmaxLayerSerialization;\n\nexport type AdvancedActivationLayerClassName =\n    AdvancedActivationLayerSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid.\n\n/**\n * A string array of valid AdvancedActivationLayer class names.\n *\n * This is guaranteed to match the `AdvancedActivationLayerClassName` union\n * type.\n */\nexport const advancedActivationLayerClassNames:\n    AdvancedActivationLayerClassName[] = [\n      'ReLU',\n      'LeakyReLU',\n      'PReLU',\n      'ELU',\n      'ThresholdedReLU',\n      'Softmax',\n    ];\n"]}