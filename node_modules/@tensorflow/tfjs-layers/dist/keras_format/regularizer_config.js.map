{"version":3,"file":"regularizer_config.js","sourceRoot":"","sources":["../../src/keras_format/regularizer_config.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAgBH,4EAA4E;AAC5E,6EAA6E;AAC7E,6CAA6C;AAE7C;;;;GAIG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAA2B,CAAC,MAAM,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {BaseSerialization} from './types';\n\nexport type L1L2Config = {\n  l1?: number;\n  l2?: number;\n};\n\nexport type L1L2Serialization = BaseSerialization<'L1L2', L1L2Config>;\n\n// Update regularizerClassNames below in concert with this.\nexport type RegularizerSerialization = L1L2Serialization;\n\nexport type RegularizerClassName = RegularizerSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\n * A string array of valid Regularizer class names.\n *\n * This is guaranteed to match the `RegularizerClassName` union type.\n */\nexport const regularizerClassNames: RegularizerClassName[] = ['L1L2'];\n"]}