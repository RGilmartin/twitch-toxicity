{"version":3,"file":"constraint_config.js","sourceRoot":"","sources":["../../src/keras_format/constraint_config.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAoCH,4EAA4E;AAC5E,6EAA6E;AAC7E,6CAA6C;AAE7C;;;;GAIG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAC7B,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {BaseSerialization} from './types';\n\nexport type MaxNormConfig = {\n  max_value?: number;\n  axis?: number;\n};\n\nexport type MaxNormSerialization = BaseSerialization<'MaxNorm', MaxNormConfig>;\n\nexport type UnitNormConfig = {\n  axis?: number;\n};\n\nexport type UnitNormSerialization =\n    BaseSerialization<'UnitNorm', UnitNormConfig>;\n\nexport type NonNegSerialization = BaseSerialization<'NonNeg', null>;\n\nexport type MinMaxNormConfig = {\n  min_value?: number;\n  max_value?: number;\n  axis?: number;\n  rate?: number;\n};\n\nexport type MinMaxNormSerialization =\n    BaseSerialization<'MinMaxNorm', MinMaxNormConfig>;\n\n// Update constraintClassNames below in concert with this.\nexport type ConstraintSerialization = MaxNormSerialization|NonNegSerialization|\n    UnitNormSerialization|MinMaxNormSerialization;\n\nexport type ConstraintClassName = ConstraintSerialization['class_name'];\n\n// We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\n * A string array of valid Constraint class names.\n *\n * This is guaranteed to match the `ConstraintClassName` union type.\n */\nexport const constraintClassNames: ConstraintClassName[] =\n    ['MaxNorm', 'UnitNorm', 'NonNeg', 'MinMaxNorm'];\n"]}