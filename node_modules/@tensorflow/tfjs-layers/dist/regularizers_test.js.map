{"version":3,"file":"regularizers_test.js","sourceRoot":"","sources":["../src/regularizers_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* Unit tests for constraints */\n\nimport {scalar, serialization, Tensor, tensor1d} from '@tensorflow/tfjs-core';\n\nimport * as tfl from './index';\nimport {deserializeRegularizer, getRegularizer, serializeRegularizer} from './regularizers';\nimport {describeMathCPU, expectTensorsClose} from './utils/test_utils';\n\ndescribeMathCPU('Built-in Regularizers', () => {\n  it('l1_l2', () => {\n    const x = tensor1d([1, -2, 3, -4]);\n    const regularizer = tfl.regularizers.l1l2();\n    const score = regularizer.apply(x);\n    expectTensorsClose(\n        score, scalar(0.01 * (1 + 2 + 3 + 4) + 0.01 * (1 + 4 + 9 + 16)));\n  });\n  it('l1', () => {\n    const x = tensor1d([1, -2, 3, -4]);\n    const regularizer = tfl.regularizers.l1();\n    const score = regularizer.apply(x);\n    expectTensorsClose(score, scalar(0.01 * (1 + 2 + 3 + 4)));\n  });\n  it('l2', () => {\n    const x = tensor1d([1, -2, 3, -4]);\n    const regularizer = tfl.regularizers.l2();\n    const score = regularizer.apply(x);\n    expectTensorsClose(score, scalar(0.01 * (1 + 4 + 9 + 16)));\n  });\n  it('l1_l2 non default', () => {\n    const x = tensor1d([1, -2, 3, -4]);\n    const regularizer = tfl.regularizers.l1l2({l1: 1, l2: 2});\n    const score = regularizer.apply(x);\n    expectTensorsClose(\n        score, scalar(1 * (1 + 2 + 3 + 4) + 2 * (1 + 4 + 9 + 16)));\n  });\n  it('Using number arg for constructor leads to error', () => {\n    // tslint:disable-next-line:no-any\n    expect(() => tfl.regularizers.l1(0.001 as any))\n        .toThrowError(/expected.*object.*received.*0\\.001/);\n    // tslint:disable-next-line:no-any\n    expect(() => tfl.regularizers.l2(0.001 as any))\n        .toThrowError(/expected.*object.*received.*0\\.001/);\n    // tslint:disable-next-line:no-any\n    expect(() => tfl.regularizers.l1l2(0.001 as any))\n        .toThrowError(/expected.*object.*received.*0\\.001/);\n  });\n});\n\ndescribeMathCPU('regularizers.get', () => {\n  let x: Tensor;\n  beforeEach(() => {\n    x = tensor1d([1, -2, 3, -4]);\n  });\n\n  it('by string - lower camel', () => {\n    const regularizer = getRegularizer('l1l2');\n    expectTensorsClose(regularizer.apply(x), tfl.regularizers.l1l2().apply(x));\n  });\n  it('by string - upper camel', () => {\n    const regularizer = getRegularizer('L1L2');\n    expectTensorsClose(regularizer.apply(x), tfl.regularizers.l1l2().apply(x));\n  });\n\n  it('by existing object', () => {\n    const origReg = tfl.regularizers.l1l2({l1: 1, l2: 2});\n    const regularizer = getRegularizer(origReg);\n    expect(regularizer).toEqual(origReg);\n  });\n  it('by config dict', () => {\n    const origReg = tfl.regularizers.l1l2({l1: 1, l2: 2});\n    const regularizer = getRegularizer(\n        serializeRegularizer(origReg) as serialization.ConfigDict);\n    expectTensorsClose(regularizer.apply(x), origReg.apply(x));\n  });\n});\n\ndescribeMathCPU('Regularizer Serialization', () => {\n  it('Built-ins', () => {\n    const regularizer = tfl.regularizers.l1l2({l1: 1, l2: 2});\n    const config =\n        serializeRegularizer(regularizer) as serialization.ConfigDict;\n    const reconstituted = deserializeRegularizer(config);\n    const roundTripConfig =\n        serializeRegularizer(reconstituted) as serialization.ConfigDict;\n    expect(roundTripConfig.className).toEqual('L1L2');\n    const nestedConfig = roundTripConfig.config as serialization.ConfigDict;\n    expect(nestedConfig.l1).toEqual(1);\n    expect(nestedConfig.l2).toEqual(2);\n  });\n});\n"]}