{"version":3,"file":"activations_test.js","sourceRoot":"","sources":["../src/activations_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Unit tests for activations.ts.\n */\nimport {scalar, tensor1d, tensor2d, tensor3d} from '@tensorflow/tfjs-core';\n\nimport {Elu, HardSigmoid, Linear, LogSoftmax, Relu, Relu6, Selu, Sigmoid, Softmax, Softplus, Softsign, Tanh, Swish, Mish} from './activations';\nimport {describeMathCPUAndGPU, expectNoLeakedTensors, expectTensorsClose} from './utils/test_utils';\n\ndescribeMathCPUAndGPU('linear activation', () => {\n  const initVals = new Float32Array([-1, 2, 0, 4, -5, 6]);\n  const expectedVals = new Float32Array([-1, 2, 0, 4, -5, 6]);\n  const linear = new Linear().apply;\n  it('1D', () => {\n    const initX = tensor1d(initVals);\n    expectTensorsClose(linear(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initX = tensor2d(initVals, [2, 3]);\n    expectTensorsClose(linear(initX), tensor2d(expectedVals, [2, 3]));\n  });\n  it('3D', () => {\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(linear(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => linear(initX), 0);\n  });\n});\n\ndescribeMathCPUAndGPU('elu activation', () => {\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  const expectedVals = initVals.map(x => x < 0 ? Math.exp(x) - 1 : x);\n  const elu = new Elu().apply;\n  it('1D', () => {\n    const initX = tensor1d(initVals);\n    expectTensorsClose(elu(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initX = tensor2d(initVals, [2, 3]);\n    expectTensorsClose(elu(initX), tensor2d(expectedVals, [2, 3]));\n  });\n  it('3D', () => {\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(elu(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => elu(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('selu activation', () => {\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  const alpha = 1.6732632423543772848170429916717;\n  const scale = 1.0507009873554804934193349852946;\n\n  const expectedVals =\n      initVals.map(x => scale * (x < 0 ? (alpha * (Math.exp(x) - 1)) : x));\n  const selu = new Selu().apply;\n\n  it('1D', () => {\n    const initX = tensor1d(initVals);\n    expectTensorsClose(selu(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initX = tensor2d(initVals, [2, 3]);\n    expectTensorsClose(selu(initX), tensor2d(expectedVals, [2, 3]));\n  });\n  it('3D', () => {\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(selu(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => selu(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('relu activation', () => {\n  const initVals = new Float32Array([-1, 2, 0, 4, -5, 6]);\n  const expectedVals = new Float32Array([0, 2, 0, 4, 0, 6]);\n  const relu = new Relu().apply;\n  it('1D', () => {\n    const initX = tensor1d(initVals);\n    expectTensorsClose(relu(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initX = tensor2d(initVals, [2, 3]);\n    expectTensorsClose(relu(initX), tensor2d(expectedVals, [2, 3]));\n  });\n  it('3D', () => {\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(relu(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => relu(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('relu6 activation', () => {\n  const initVals = new Float32Array([-10, -5, 0, 1, 5, 15]);\n  const expectedVals = new Float32Array([0, 0, 0, 1, 5, 6]);\n  const relu6 = new Relu6().apply;\n  it('1D', () => {\n    const initX = tensor1d(initVals);\n    expectTensorsClose(relu6(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initX = tensor2d(initVals, [2, 3]);\n    expectTensorsClose(relu6(initX), tensor2d(expectedVals, [2, 3]));\n  });\n  it('3D', () => {\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(relu6(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => relu6(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('sigmoid activation', () => {\n  const sigmoid = new Sigmoid().apply;\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  it('Scalar', () => {\n    expectTensorsClose(sigmoid(scalar(0)), scalar(0.5));\n  });\n  it('3D', () => {\n    const expectedVals = initVals.map(v => 1 / (1 + Math.exp(-v)));\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(sigmoid(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => sigmoid(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('hardSigmoid activation', () => {\n  const hardSigmoid = new HardSigmoid().apply;\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  it('Scalar', () => {\n    expectTensorsClose(hardSigmoid(scalar(0)), scalar(0.5));\n  });\n  it('3D', () => {\n    const expectedVals = initVals.map(v => {\n      const y = 0.2 * v + 0.5;\n      if (y > 1) {\n        return 1;\n      } else if (y < 0) {\n        return 0;\n      } else {\n        return y;\n      }\n    });\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(hardSigmoid(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => hardSigmoid(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('softplus activation', () => {\n  const softplus = new Softplus().apply;\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  it('Scalar', () => {\n    expectTensorsClose(softplus(scalar(0)), scalar(Math.log(2)));\n  });\n  it('3D', () => {\n    const expectedVals = initVals.map(v => Math.log(Math.exp(v) + 1));\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(softplus(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => softplus(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('softsign activation', () => {\n  const softsign = new Softsign().apply;\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  it('Scalar', () => {\n    expectTensorsClose(softsign(scalar(0)), scalar(0));\n  });\n  it('3D', () => {\n    const expectedVals = initVals.map(v => v / (Math.abs(v) + 1));\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(softsign(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => softsign(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('tanh activation', () => {\n  const tanh = new Tanh().apply;\n  const initVals = [-1, 2, 0, 4, -5, 6];\n  const expectedVals = initVals.map(x => Math.tanh(x));\n  it('1D', () => {\n    const initX = tensor1d(initVals);\n    expectTensorsClose(tanh(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initX = tensor2d(initVals, [2, 3]);\n    expectTensorsClose(tanh(initX), tensor2d(expectedVals, [2, 3]));\n  });\n  it('3D', () => {\n    const initX = tensor3d(initVals, [1, 2, 3]);\n    expectTensorsClose(tanh(initX), tensor3d(expectedVals, [1, 2, 3]));\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => tanh(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('softmax activation', () => {\n  const softmax = new Softmax().apply;\n  // Setup: Array with initial values.\n  // Execute: Softmax on the last dimension.\n  // Expect: Output array matches size and approximate expected values.\n  it('1D', () => {\n    const initVals = new Float32Array([0, 1, 3, 9]);\n    const expectedVals = new Float32Array([0.000, 0.000, 0.002, 0.997]);\n    const initX = tensor1d(initVals);\n    expectTensorsClose(softmax(initX), tensor1d(expectedVals));\n  });\n  it('1D all equal', () => {\n    const initVals = new Float32Array([-1, -1, -1, -1]);\n    const expectedVals = new Float32Array([0.25, 0.25, 0.25, 0.25]);\n    const initX = tensor1d(initVals);\n    expectTensorsClose(softmax(initX), tensor1d(expectedVals));\n  });\n  it('2D', () => {\n    const initVals = new Float32Array([0, 1, 3, 9, 0, 1, 3, 9]);\n    const expectedVals = new Float32Array(\n        [0.000, 0.000, 0.002, 0.997, 0.000, 0.000, 0.002, 0.997]);\n    const initX = tensor2d(initVals, [2, 4]);\n    expectTensorsClose(softmax(initX), tensor2d(expectedVals, [2, 4]));\n  });\n  it('3D', () => {\n    const initVals = new Float32Array([0, 1, 3, 9, 0, 1, 3, 9]);\n    const expectedVals = new Float32Array(\n        [0.000, 0.000, 0.002, 0.997, 0.000, 0.000, 0.002, 0.997]);\n    const initX = tensor3d(initVals, [1, 2, 4]);\n    expectTensorsClose(softmax(initX), tensor3d(expectedVals, [1, 2, 4]));\n  });\n  it('Does not leak', () => {\n    const initVals = new Float32Array([0, 1, 3, 9]);\n    const initX = tensor1d(initVals);\n    expectNoLeakedTensors(() => softmax(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('logsoftmax activation', () => {\n  const logsoftmax = new LogSoftmax().apply;\n  // Setup: Array with initial values.\n  // Execute: logSoftmax on the last dimension.\n  // Expect: Output array matches size and approximate expected values.\n  it('1D', () => {\n    const initX = tensor1d([0, 1, 3, 9]);\n    const expectedVals = tensor1d([-9.003, -8.003, -6.003, -0.003]);\n    expectTensorsClose(logsoftmax(initX), expectedVals);\n  });\n  it('1D all equal', () => {\n    const initX = tensor1d([-1, -1, -1, -1]);\n    const expectedVals = tensor1d([-1.386, -1.386, -1.386, -1.386]);\n    expectTensorsClose(logsoftmax(initX), expectedVals);\n  });\n  it('2D', () => {\n    const initX = tensor2d([[0, 1, 3, 9], [0, 1, 3, 9]]);\n    const expectedVals = tensor2d(\n        [[-9.003, -8.003, -6.003, -0.003], [-9.003, -8.003, -6.003, -0.003]]);\n    expectTensorsClose(logsoftmax(initX), expectedVals);\n  });\n  it('3D', () => {\n    const initX = tensor3d([[[0, 1, 3, 9], [0, 1, 3, 9]]]);\n    const expectedVals = tensor3d(\n        [[[-9.003, -8.003, -6.003, -0.003], [-9.003, -8.003, -6.003, -0.003]]]);\n    expectTensorsClose(logsoftmax(initX), expectedVals);\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d([0, 1, 3, 9]);\n    expectNoLeakedTensors(() => logsoftmax(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('swish activation', () => {\n  const swish = new Swish().apply;\n  // Setup: Array with initial values.\n  // Execute: Swish on the last dimension.\n  // Expect: Output array matches size and approximate expected values.\n  it('1D', () => {\n    const initX = tensor1d([0, 1, 3, 9]);\n    const expectedVals = tensor1d([0, .731, 2.857, 8.998]);\n    expectTensorsClose(swish(initX), expectedVals);\n  });\n  it('1D all equal', () => {\n    const initX = tensor1d([-1, -1, -1, -1]);\n    const expectedVals = tensor1d([-.268, -.268, -.268, -.268]);\n    expectTensorsClose(swish(initX), expectedVals);\n  });\n  it('2D', () => {\n    const initX = tensor2d([[0, 1, 3, 9], [0, 1, 3, 9]]);\n    const expectedVals = tensor2d(\n        [[0, .731, 2.857, 8.998], [0, .731, 2.857, 8.998]]);\n    expectTensorsClose(swish(initX), expectedVals);\n  });\n  it('3D', () => {\n    const initX = tensor3d([[[0, 1, 3, 9], [0, 1, 3, 9]]]);\n    const expectedVals = tensor3d(\n        [[[0, .731, 2.857, 8.998], [0, .731, 2.857, 8.998]]]);\n    expectTensorsClose(swish(initX), expectedVals);\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d([0, 1, 3, 9]);\n    expectNoLeakedTensors(() => swish(initX), 1);\n  });\n});\n\ndescribeMathCPUAndGPU('mish activation', () => {\n  const mish = new Mish().apply;\n  // Setup: Array with initial values.\n  // Execute: Mish on the last dimension.\n  // Expect: Output array matches size and approximate expected values.\n  it('1D', () => {\n    const initX = tensor1d([0, 1, 3, 9]);\n    const expectedVals = tensor1d([0., .865, 2.987, 9.]);\n    expectTensorsClose(mish(initX), expectedVals);\n  });\n  it('1D all equal', () => {\n    const initX = tensor1d([-1, -1, -1, -1]);\n    const expectedVals = tensor1d([-0.303, -0.303, -0.303, -0.303]);\n    expectTensorsClose(mish(initX), expectedVals);\n  });\n  it('2D', () => {\n    const initX = tensor2d([[0, 1, 3, 9], [0, 1, 3, 9]]);\n    const expectedVals = tensor2d(\n        [[0., .865, 2.987, 9.], [0., .865, 2.987, 9.]]);\n    expectTensorsClose(mish(initX), expectedVals);\n  });\n  it('3D', () => {\n    const initX = tensor3d([[[0, 1, 3, 9], [0, 1, 3, 9]]]);\n    const expectedVals = tensor3d(\n        [[[0., .865, 2.987, 9.], [0., .865, 2.987, 9.]]]);\n    expectTensorsClose(mish(initX), expectedVals);\n  });\n  it('Does not leak', () => {\n    const initX = tensor1d([0, 1, 3, 9]);\n    expectNoLeakedTensors(() => mish(initX), 1);\n  });\n});\n"]}