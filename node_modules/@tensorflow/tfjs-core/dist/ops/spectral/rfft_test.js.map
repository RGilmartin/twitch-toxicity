{"version":3,"file":"rfft_test.js","sourceRoot":"","sources":["../../../src/ops/spectral/rfft_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../../index';\nimport {ALL_ENVS, describeWithFlags} from '../../jasmine_util';\nimport {expectArraysClose} from '../../test_util';\n\ndescribeWithFlags('1D RFFT', ALL_ENVS, () => {\n  it('should return the same value with TensorFlow (3 elements)', async () => {\n    const t1Real = tf.tensor1d([1, 2, 3]);\n    expectArraysClose(\n        await tf.spectral.rfft(t1Real).data(),\n        [6, 1.1920929e-07, -1.4999999, 8.6602521e-01]);\n  });\n\n  it('should calculate from tensor directly', async () => {\n    const t1Real = tf.tensor1d([1, 2, 3]);\n    expectArraysClose(\n        await t1Real.rfft().data(),\n        [6, 1.1920929e-07, -1.4999999, 8.6602521e-01]);\n  });\n\n  it('should return the same value with TensorFlow (6 elements)', async () => {\n    const t1Real = tf.tensor1d([-3, -2, -1, 1, 2, 3]);\n    expectArraysClose(await tf.spectral.rfft(t1Real).data(), [\n      -5.8859587e-07, 1.1920929e-07, -3.9999995, 6.9282026e+00, -2.9999998,\n      1.7320497, -4.0000000, -2.3841858e-07\n    ]);\n  });\n\n  it('should return the same value without any fftLength', async () => {\n    const t1Real = tf.tensor1d([-3, -2, -1, 1, 2, 3]);\n    const fftLength = 6;\n    expectArraysClose(await tf.spectral.rfft(t1Real, fftLength).data(), [\n      -5.8859587e-07, 1.1920929e-07, -3.9999995, 6.9282026e+00, -2.9999998,\n      1.7320497, -4.0000000, -2.3841858e-07\n    ]);\n  });\n\n  it('should return the value with cropped input', async () => {\n    const t1Real = tf.tensor1d([-3, -2, -1, 1, 2, 3]);\n    const fftLength = 3;\n    expectArraysClose(\n        await tf.spectral.rfft(t1Real, fftLength).data(),\n        [-6, 0.0, -1.5000002, 0.866]);\n  });\n\n  it('should return the value with padded input', async () => {\n    const t1Real = tf.tensor1d([-3, -2, -1]);\n    const fftLength = 4;\n    expectArraysClose(\n        await tf.spectral.rfft(t1Real, fftLength).data(),\n        [-6, 0, -2, 2, -2, 0]);\n  });\n});\n\ndescribeWithFlags('2D RFFT', ALL_ENVS, () => {\n  it('should return the same value with TensorFlow (2x2 elements)',\n     async () => {\n       const t1Real = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n       expectArraysClose(\n           await tf.spectral.rfft(t1Real).data(), [3, 0, -1, 0, 7, 0, -1, 0]);\n     });\n\n  it('should return the same value with TensorFlow (2x3 elements)',\n     async () => {\n       const t1Real = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n       expectArraysClose(await tf.spectral.rfft(t1Real).data(), [\n         6, 1.1920929e-07, -1.4999999, 8.6602521e-01, 15, -5.9604645e-08,\n         -1.4999998, 8.6602545e-01\n       ]);\n     });\n\n  it('should return the same value with TensorFlow (2x2x2 elements)',\n     async () => {\n       const t1Real = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 2]);\n       expectArraysClose(\n           await tf.spectral.rfft(t1Real).data(),\n           [3, 0, -1, 0, 7, 0, -1, 0, 11, 0, -1, 0, 15, 0, -1, 0]);\n     });\n\n  it('should return the value with cropping', async () => {\n    const t1Real = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const fftLength = 2;\n    expectArraysClose(\n        await tf.spectral.rfft(t1Real, fftLength).data(),\n        [3, 0, -1, 0, 9, 0, -1, 0]);\n  });\n\n  it('should return the value with padding', async () => {\n    const t1Real = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const fftLength = 4;\n    expectArraysClose(\n        await tf.spectral.rfft(t1Real, fftLength).data(),\n        [6, 0, -2, -2, 2, 0, 15, 0, -2, -5, 5, 0]);\n  });\n});\n"]}