{"version":3,"file":"dilation2d_test.js","sourceRoot":"","sources":["../../src/ops/dilation2d_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose} from '../test_util';\n\ndescribeWithFlags('dilation2d', ALL_ENVS, () => {\n  it('valid padding.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .0], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'valid');\n\n    expect(result.shape).toEqual([1, 1, 1, 1]);\n    expectArraysClose(await result.data(), [.5]);\n  });\n\n  it('same padding.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .0], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'same');\n\n    expect(result.shape).toEqual([1, 2, 2, 1]);\n    expectArraysClose(await result.data(), [.5, .6, .7, .8]);\n  });\n\n  it('same padding depth 3.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 3];\n    const filterShape: [number, number, number] = [2, 2, 3];\n    const x = tf.tensor4d(\n        [.1, .2, .0, .2, .3, .1, .3, .4, .2, .4, .5, .3], inputShape);\n    const filter = tf.tensor3d(\n        [.4, .5, .3, .3, .4, .2, .1, .2, .0, .0, .1, -.1], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'same');\n\n    expect(result.shape).toEqual([1, 2, 2, 3]);\n    expectArraysClose(\n        await result.data(), [.5, .7, .3, .6, .8, .4, .7, .9, .5, .8, 1., .6]);\n  });\n\n  it('same padding batch 2.', async () => {\n    const inputShape: [number, number, number, number] = [2, 2, 2, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4, .2, .3, .4, .5], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .0], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'same');\n\n    expect(result.shape).toEqual([2, 2, 2, 1]);\n    expectArraysClose(await result.data(), [.5, .6, .7, .8, .6, .7, .8, .9]);\n  });\n\n  it('same padding filter 2.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 3, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4, .5, .6, .7, .8, .9], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .2], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'same');\n\n    expect(result.shape).toEqual([1, 3, 3, 1]);\n    expectArraysClose(\n        await result.data(), [.7, .8, .7, 1, 1.1, 1, 1.1, 1.2, 1.3]);\n  });\n\n  it('valid padding non-square-window.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 1];\n    const filterShape: [number, number, number] = [1, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4], inputShape);\n    const filter = tf.tensor3d([.4, .3], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'valid');\n\n    expect(result.shape).toEqual([1, 2, 1, 1]);\n    expectArraysClose(await result.data(), [.5, .7]);\n  });\n\n  it('same padding dilations 2.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 3, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4, .5, .6, .7, .8, .9], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .2], filterShape);\n\n    const result = tf.dilation2d(x, filter, 1 /* strides */, 'same', 2);\n\n    // Because dilations = 2, the effective filter is [3, 3, 1]:\n    // filter_eff = [[[.4], [.0], [.3]],\n    //               [[.0], [.0], [.0]],\n    //               [[.1], [.0], [.2]]]\n    expect(result.shape).toEqual([1, 3, 3, 1]);\n    expectArraysClose(\n        await result.data(), [.7, .8, .6, 1., 1.1, .9, .8, .9, .9]);\n  });\n\n  it('valid padding uneven stride.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 4, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d(\n        [.1, .2, .3, .4, .5, .6, .7, .8, .9, 1., 1.1, 1.2], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .2], filterShape);\n\n    const result = tf.dilation2d(x, filter, [1, 2] /* strides */, 'valid');\n\n    expect(result.shape).toEqual([1, 2, 2, 1]);\n    expectArraysClose(await result.data(), [.8, 1., 1.2, 1.4]);\n  });\n\n  it('throws when input rank is not 3 or 4.', async () => {\n    const filterShape: [number, number, number] = [1, 1, 1];\n    // tslint:disable-next-line:no-any\n    const x: any = tf.tensor1d([.5]);\n    const filter = tf.tensor3d([.4], filterShape);\n\n    expect(() => tf.dilation2d(x, filter, 1, 'valid')).toThrowError();\n  });\n\n  it('thorws when filter is not rank 3.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 1];\n    const filterShape: [number, number] = [2, 2];\n    const x = tf.tensor4d([.1, .2, .3, .4], inputShape);\n    // tslint:disable-next-line:no-any\n    const filter: any = tf.tensor2d([.4, .3, .1, .0], filterShape);\n\n    expect(() => tf.dilation2d(x, filter, 1, 'valid')).toThrowError();\n  });\n\n  it('throws when data format is not NHWC.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .0], filterShape);\n    // tslint:disable-next-line:no-any\n    const dataFormat: any = 'NCHW';\n\n    expect(\n        () => tf.dilation2d(x, filter, 1 /* strides */, 'valid', 1, dataFormat))\n        .toThrowError();\n  });\n\n  it('dilation gradient valid padding.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 3, 1];\n    const filterShape: [number, number, number] = [1, 1, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4, .5, .6, .7, .8, .9], inputShape);\n    const filter = tf.tensor3d([.5], filterShape);\n    const dy = tf.tensor4d([.2, .3, .4, .2, .1, 1., .2, .3, .4], inputShape);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor3D) =>\n            x.dilation2d(filter, 1, 'valid'));\n\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), [.2, .3, .4, .2, .1, 1., .2, .3, .4]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [3.1]);\n  });\n\n  it('dilation gradient same padding.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 3, 1];\n    const filterShape: [number, number, number] = [1, 1, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4, .5, .6, .7, .8, .9], inputShape);\n    const filter = tf.tensor3d([.5], filterShape);\n    const dy = tf.tensor4d([.2, .3, .4, .2, .1, 1., .2, .3, .4], inputShape);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor3D) =>\n            x.dilation2d(filter, 1, 'same'));\n\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), [.2, .3, .4, .2, .1, 1., .2, .3, .4]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [3.1]);\n  });\n\n  it('dilation gradient same padding depth 2.', async () => {\n    const inputShape: [number, number, number, number] = [1, 2, 2, 3];\n    const filterShape: [number, number, number] = [1, 1, 3];\n    const x = tf.tensor4d(\n        [.1, .2, .0, .2, .3, .1, .3, .4, .2, .4, .5, .3], inputShape);\n    const filter = tf.tensor3d([.4, .5, .6], filterShape);\n    const dy = tf.tensor4d(\n        [.2, .3, .4, .2, .1, 1., .2, .3, .4, .8, -.1, .1], inputShape);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor3D) =>\n            x.dilation2d(filter, 1, 'same'));\n\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(\n        await dx.data(), [.2, .3, .4, .2, .1, 1., .2, .3, .4, .8, -.1, .1]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [1.4, .6, 1.9]);\n  });\n\n  it('dilation gradient valid padding filter 2.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 3, 1];\n    const filterShape: [number, number, number] = [2, 2, 1];\n    const dyShape: [number, number, number, number] = [1, 2, 2, 1];\n    const x = tf.tensor4d([.1, .2, .3, .4, .5, .6, .7, .8, .9], inputShape);\n    const filter = tf.tensor3d([.4, .3, .1, .2], filterShape);\n    const dy = tf.tensor4d([.2, .3, .4, .2], dyShape);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor3D) =>\n            x.dilation2d(filter, 1, 'valid'));\n\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), [0, 0, 0, 0, .2, .3, 0, .4, .2]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [0, 0, 0, 1.1]);\n  });\n\n  it('dilation gradient same padding filter 2 depth 3.', async () => {\n    const inputShape: [number, number, number, number] = [1, 3, 3, 3];\n    const filterShape: [number, number, number] = [2, 2, 3];\n    const x = tf.tensor4d(\n        [\n          .1, .2, .3, .4, .5, .6, .7, .8, .9, .3, .2, .3, .4, .5,\n          .1, .9, .6, .3, .4, .5, .6, .2, .3, .5, .1, .2, .3\n        ],\n        inputShape);\n    const filter = tf.tensor3d(\n        [.4, .3, .1, .2, .2, .1, .7, .3, .8, .4, .9, .1], filterShape);\n    const dy = tf.tensor4d(\n        [\n          .2, .3, .4, .2, .1, .5, 0,  .8, .7, .1, .2, .1, .2, .3,\n          .4, .5, .6, .6, .6, .7, .8, .3, .2, .1, .2, .4, .2\n        ],\n        inputShape);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor3D) =>\n            x.dilation2d(filter, 1, 'same'));\n\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), [\n      0, 0,  0,  0,  0,  0,  0,  .8, .5, .2, 0,  .4, 0, .3,\n      0, .9, .7, .7, .7, .7, .9, .3, .4, .5, .2, .7, .8\n    ]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(\n        await dfilter.data(),\n        [1.6, 2.7, 1.1, .2, 0, .5, .3, 0, 2.2, .2, .9, 0]);\n  });\n});\n"]}