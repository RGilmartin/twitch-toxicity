{"version":3,"file":"conv2d_test.js","sourceRoot":"","sources":["../../src/ops/conv2d_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose} from '../test_util';\nimport {Rank} from '../types';\n\nfunction generateCaseInputs(totalSizeTensor: number, totalSizeFilter: number) {\n  const inp = new Array(totalSizeTensor);\n  const filt = new Array(totalSizeFilter);\n\n  for (let i = 0; i < totalSizeTensor; i++) {\n    inp[i] = i + 1;\n  }\n  for (let i = 0; i < totalSizeFilter; i++) {\n    filt[i] = i + 1;\n  }\n\n  return {input: inp, filter: filt};\n}\n\ndescribeWithFlags('conv2d', ALL_ENVS, () => {\n  it('x=[1,4,4,1] f=[1,1,1,3] s=2 d=1 p=same', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const stride: [number, number] = [2, 2];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n\n    expectArraysClose(\n        await result.data(),\n        [10, 5, 10, 50, 25, 50, -10, -5, -10, -50, -25, -50]);\n  });\n\n  it('x=[2,2,2,2] f=[1,1,2,2] s=1 d=1 p=0', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected =\n        [-5, 2, -11, 5, -17, 8, -23, 11, -29, 14, -35, 17, -41, 20, -47, 23];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[2,2,1] f=[1,1,1,2] s=1 d=1 p=0', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w = tf.tensor4d([2], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n\n    expectArraysClose(await result.data(), [2, 4, 6, 8]);\n  });\n\n  it('x=[3,3,2] f=[2,2,2,1] s=1 d=1 p=valid', async () => {\n    const pad = 'valid';\n    const stride = 1;\n\n    const x = tf.tensor3d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90],\n        [3, 3, 2]);\n    const w = tf.tensor4d([.1, .2, .3, .4, .5, .6, .7, .8], [2, 2, 2, 1]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([2, 2, 1]);\n    expectArraysClose(resultData, new Float32Array([25.6, 53.5, 157.0, 220.9]));\n  });\n\n  it('x=[2,2,2,1] f=[1,1,1,1] s=1 d=1 p=0', async () => {\n    const inputDepth = 1;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8], inShape);\n    const w = tf.tensor4d([2], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n    expect(result.shape).toEqual([2, 2, 2, 1]);\n    const expected = [2, 4, 6, 8, 10, 12, 14, 16];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[2,1,2,2] f=[1,1,1,1] s=1 d=1 p=0 NCHW', async () => {\n    const inputDepth = 1;\n    const inShape: [number, number, number, number] = [2, inputDepth, 2, 2];\n    const outputDepth = 1;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n    const dataFormat = 'NCHW';\n\n    const x = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8], inShape);\n    const w = tf.tensor4d([2], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat);\n    expect(result.shape).toEqual([2, 1, 2, 2]);\n    const expected = [2, 4, 6, 8, 10, 12, 14, 16];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[4,2,1] f=[4,2,1,1] s=1 d=1 p=same', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const pad = 'same';\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], [4, 2, inputDepth]);\n    const w =\n        tf.tensor4d([3, 1, 5, 0, 2, 7, 8, 9], [4, 2, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([4, 2, 1]);\n    expectArraysClose(resultData, [133, 66, 200, 102, 108, 58, 56, 58]);\n  });\n\n  it('x=[4,2,1] f=[4,2,1,1] s=1 d=1 p=explicit', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const pad =\n        [[0, 0], [1, 2], [0, 1], [0, 0]] as tf.backend_util.ExplicitPadding;\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], [4, 2, inputDepth]);\n    const w =\n        tf.tensor4d([3, 1, 5, 0, 2, 7, 8, 9], [4, 2, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([4, 2, 1]);\n    expectArraysClose(resultData, [133, 66, 200, 102, 108, 58, 56, 58]);\n  });\n\n  it('x=[2,2,1] f=[2,2,1,1] s=1 d=1 p=same', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 'same';\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([2, 2, 1]);\n    expectArraysClose(resultData, new Float32Array([20, 26, 13, 12]));\n  });\n\n  it('x=[1,2,2] f=[2,2,1,1] s=1 d=1 p=same NCHW', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [inputDepth, 2, 2];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 'same';\n    const stride = 1;\n    const dataFormat = 'NCHW';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([1, 2, 2]);\n    expectArraysClose(resultData, [20, 26, 13, 12]);\n  });\n\n  it('x=[1,2,2] f=[2,2,1,1] s=1 d=1 p=explicit NCHW', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [inputDepth, 2, 2];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad =\n        [[0, 0], [0, 0], [0, 1], [0, 1]] as tf.backend_util.ExplicitPadding;\n    const stride = 1;\n    const dataFormat = 'NCHW';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([1, 2, 2]);\n    expectArraysClose(resultData, [20, 26, 13, 12]);\n  });\n\n  it('x=[2,2,2] f=[2,2,2,1] s=1 d=1 p=same NCHW', async () => {\n    const inputDepth = 2;\n    const inputShape: [number, number, number] = [inputDepth, 2, 2];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 'same';\n    const stride = 1;\n    const dataFormat = 'NCHW';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], inputShape);\n    const w = tf.tensor4d(\n        [3, 1, 5, 0, 0, 5, 1, 3], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([1, 2, 2]);\n    expectArraysClose(resultData, [81, 52, 36, 20]);\n  });\n\n  it('x=[2,1,2,2] f=[2,2,1,1] s=1 d=1 p=same NCHW', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, inputDepth, 2, 2];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 'same';\n    const stride = 1;\n    const dataFormat = 'NCHW';\n    const dilation = 1;\n\n    const x = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([2, 1, 2, 2]);\n    expectArraysClose(resultData, [20, 26, 13, 12, 56, 58, 29, 24]);\n  });\n\n  it('x=[2,2,1] f=[2,2,1,1] s=1 d=1 p=0', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 0;\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n    expectArraysClose(await result.data(), [20]);\n  });\n\n  it('x=[4,4,1] f=[2,2,1,1] s=1 d=2 p=0', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const fSizeDilated = 3;\n    const pad = 0;\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 2;\n    const noDilation = 1;\n\n    const x = tf.tensor3d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 2], [fSize, fSize, inputDepth, outputDepth]);\n    // adding a dilation rate is equivalent to using a filter\n    // with 0s for the dilation rate\n    const wDilated = tf.tensor4d(\n        [3, 0, 1, 0, 0, 0, 5, 0, 2],\n        [fSizeDilated, fSizeDilated, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad, dataFormat, dilation);\n    const expectedResult =\n        tf.conv2d(x, wDilated, stride, pad, dataFormat, noDilation);\n\n    expect(result.shape).toEqual(expectedResult.shape);\n    expectArraysClose(await result.data(), await expectedResult.data());\n    expect(result.shape).toEqual(expectedResult.shape);\n    expect(result.dtype).toBe(expectedResult.dtype);\n  });\n\n  it('x=[1,3,6,1] f=[2,2,1,1] s=[1,2] d=1 p=valid', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number, number] = [1, 3, 6, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 'valid';\n    const stride: [number, number] = [1, 2];\n\n    const inputs = generateCaseInputs(1 * 3 * 6 * inputDepth, fSize * fSize);\n    const x = tf.tensor4d(inputs.input, inputShape);\n    const w =\n        tf.tensor4d(inputs.filter, [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n    expectArraysClose(\n        await result.data(), [58.0, 78.0, 98.0, 118.0, 138.0, 158.0]);\n  });\n\n  it('x=[1,8,8,16] f=[3,3,16,1] s=[2,2] d=1 p=same', async () => {\n    const inputDepth = 16;\n    const xSize = 8;\n    const inputShape: [number, number, number, number] =\n        [1, xSize, xSize, inputDepth];\n    const outputDepth = 1;\n    const fSize = 3;\n    const pad = 'same';\n    const stride: [number, number] = [2, 2];\n\n    // TODO(annxingyuan): Make this test work with large inputs using\n    // generateCaseInputs https://github.com/tensorflow/tfjs/issues/3143\n    const inputData = [];\n    for (let i = 0; i < xSize * xSize * inputDepth; i++) {\n      inputData.push(i % 5);\n    }\n\n    const wData = [];\n    for (let i = 0; i < fSize * fSize * inputDepth * outputDepth; i++) {\n      wData.push(i % 5);\n    }\n\n    const x = tf.tensor4d(inputData, inputShape);\n    const w = tf.tensor4d(wData, [fSize, fSize, inputDepth, outputDepth]);\n    const result = tf.conv2d(x, w, stride, pad);\n    expect(result.shape).toEqual([1, 4, 4, 1]);\n    expectArraysClose(await result.data(), new Float32Array([\n                        854, 431, 568, 382, 580, 427, 854, 288, 431, 568, 580,\n                        289, 285, 570, 285, 258\n                      ]));\n  });\n\n  it('x=[1,8,8,3] f=[3,3,3,4] s=[2,2] d=1 p=same', async () => {\n    const inputDepth = 3;\n    const xSize = 8;\n    const inputShape: [number, number, number, number] =\n        [1, xSize, xSize, inputDepth];\n    const outputDepth = 4;\n    const fSize = 3;\n    const pad = 'same';\n    const stride: [number, number] = [2, 2];\n\n    // TODO(annxingyuan): Make this test work with large inputs using\n    // generateCaseInputs https://github.com/tensorflow/tfjs/issues/3143\n    const inputData = [];\n    for (let i = 0; i < xSize * xSize * inputDepth; i++) {\n      inputData.push(i % 5);\n    }\n\n    const wData = [];\n    for (let i = 0; i < fSize * fSize * inputDepth * outputDepth; i++) {\n      wData.push(i % 5);\n    }\n\n    const x = tf.tensor4d(inputData, inputShape);\n    const w = tf.tensor4d(wData, [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n    expect(result.shape).toEqual([1, 4, 4, 4]);\n    expectArraysClose(\n        await result.data(), new Float32Array([\n          104, 125, 126, 102, 133, 126, 104, 57,  137, 102, 57,  112, 64,\n          40,  76,  92,  116, 53,  110, 142, 50,  104, 133, 137, 104, 125,\n          126, 102, 83,  88,  78,  33,  133, 126, 104, 57,  137, 102, 57,\n          112, 116, 53,  110, 142, 37,  76,  100, 99,  33,  68,  83,  88,\n          70,  83,  76,  64,  92,  88,  64,  40,  51,  44,  27,  50\n        ]));\n  });\n\n  it('x=[1,8,8,3] f=[3,3,3,4] s=[2,2] d=1 p=valid', async () => {\n    const inputDepth = 3;\n    const xSize = 8;\n    const inputShape: [number, number, number, number] =\n        [1, xSize, xSize, inputDepth];\n    const outputDepth = 4;\n    const fSize = 3;\n    const pad = 'valid';\n    const stride: [number, number] = [2, 2];\n\n    const inputData = [];\n    for (let i = 0; i < xSize * xSize * inputDepth; i++) {\n      inputData.push(i % 5);\n    }\n\n    const wData = [];\n    for (let i = 0; i < fSize * fSize * inputDepth * outputDepth; i++) {\n      wData.push(i % 5);\n    }\n\n    const x = tf.tensor4d(inputData, inputShape);\n    const w = tf.tensor4d(wData, [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.conv2d(x, w, stride, pad);\n    expect(result.shape).toEqual([1, 3, 3, 4]);\n    expectArraysClose(\n        await result.data(), new Float32Array([\n          104, 125, 126, 102, 133, 126, 104, 57,  137, 102, 57,  112,\n          116, 53,  110, 142, 50,  104, 133, 137, 104, 125, 126, 102,\n          133, 126, 104, 57,  137, 102, 57,  112, 116, 53,  110, 142\n        ]));\n  });\n\n  it('x=[1,2,2,3] f=[1,1] s=2 p=1 fractional outputs default rounding',\n     async () => {\n       const inputDepth = 3;\n       const inShape: [number, number, number, number] = [1, 2, 2, inputDepth];\n       const outputDepth = 1;\n       const fSize = 1;\n\n       const x = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], inShape);\n       const w =\n           tf.tensor4d([2, 2, 1], [fSize, fSize, inputDepth, outputDepth]);\n       const pad =\n           [[0, 0], [1, 1], [1, 1], [0, 0]] as tf.backend_util.ExplicitPadding;\n       const strides = 2;\n\n       const result = tf.conv2d(x, w, strides, pad);\n\n       expect(result.shape).toEqual([1, 2, 2, 1]);\n       expectArraysClose(await result.data(), [0, 0, 0, 54]);\n     });\n\n  it('throws when x is not rank 3', () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 0;\n    const stride = 1;\n\n    // tslint:disable-next-line:no-any\n    const x: any = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    expect(() => tf.conv2d(x, w, stride, pad)).toThrowError();\n  });\n\n  it('throws when weights is not rank 4', () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    // tslint:disable-next-line:no-any\n    const w: any = tf.tensor3d([3, 1, 5, 0], [2, 2, 1]);\n\n    expect(() => tf.conv2d(x, w, stride, pad)).toThrowError();\n  });\n\n  it('throws when x depth does not match weight depth', () => {\n    const inputDepth = 1;\n    const wrongInputDepth = 5;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.randomNormal<Rank.R4>([fSize, fSize, wrongInputDepth, outputDepth]);\n\n    expect(() => tf.conv2d(x, w, stride, pad)).toThrowError();\n  });\n\n  it('throws when x depth does not match weight depth NCHW', () => {\n    const inputDepth = 1;\n    const wrongInputDepth = 5;\n    const inputShape: [number, number, number] = [inputDepth, 2, 2];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 0;\n    const stride = 1;\n    const dataFormat = 'NCHW';\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.randomNormal<Rank.R4>([fSize, fSize, wrongInputDepth, outputDepth]);\n\n    expect(() => tf.conv2d(x, w, stride, pad, dataFormat)).toThrowError();\n  });\n\n  it('throws when dimRoundingMode is set and pad is not a number', () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 'valid';\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n    const dimRoundingMode = 'round';\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w = tf.randomNormal<Rank.R4>([fSize, fSize, inputDepth, outputDepth]);\n\n    expect(\n        () =>\n            tf.conv2d(x, w, stride, pad, dataFormat, dilation, dimRoundingMode))\n        .toThrowError();\n  });\n\n  it('throws when both stride and dilation are greater than 1', () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const outputDepth = 1;\n    const fSize = 2;\n    const pad = 0;\n    const stride: [number, number] = [2, 1];\n    const dataFormat = 'NHWC';\n    const dilation: [number, number] = [1, 2];\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n    const w =\n        tf.tensor4d([3, 1, 5, 0], [fSize, fSize, inputDepth, outputDepth]);\n\n    expect(() => tf.conv2d(x, w, stride, pad, dataFormat, dilation))\n        .toThrowError();\n  });\n\n  it('gradient with clones input=[3,3,1] f=[2,2,1,1] s=1 p=0', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number] = [3, 3, inputDepth];\n    const filterSize = 2;\n    const stride = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.ones<Rank.R4>(filterShape);\n\n    const x = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor3d([3, 1, 2, 0], [2, 2, 1]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor3D, filter: tf.Tensor4D) =>\n            x.clone().conv2d(filter.clone(), stride, pad).clone());\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), [3, 4, 1, 5, 6, 1, 2, 2, 0]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [13, 19, 31, 37]);\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const stride = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.ones<Rank.R4>(filterShape);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor4D) => x.conv2d(filter, stride, pad));\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(\n        await dx.data(),\n        [3, 4, 1, 5, 6, 1, 2, 2, 0, 3, 4, 1, 5, 6, 1, 2, 2, 0]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [13 * 2, 19 * 2, 31 * 2, 37 * 2]);\n  });\n\n  it('gradient x=[1,1,3,3] f=[2,2,1,1] s=1 p=0 NCHW', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [1, inputDepth, 3, 3];\n    const filterSize = 2;\n    const stride = 1;\n    const pad = 0;\n    const dataFormat = 'NCHW';\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.ones<Rank.R4>(filterShape);\n\n    const x = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0], [1, 1, 2, 2]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor4D) =>\n            x.conv2d(filter, stride, pad, dataFormat));\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), [3, 4, 1, 5, 6, 1, 2, 2, 0]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [13, 19, 31, 37]);\n  });\n\n  it('gradient x=[2,1,3,3] f=[2,2,1,1] s=1 p=0 NCHW', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, inputDepth, 3, 3];\n    const filterSize = 2;\n    const stride = 1;\n    const pad = 0;\n    const dataFormat = 'NCHW';\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.ones<Rank.R4>(filterShape);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 1, 2, 2]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor4D) =>\n            x.conv2d(filter, stride, pad, dataFormat));\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(\n        await dx.data(),\n        [3, 4, 1, 5, 6, 1, 2, 2, 0, 3, 4, 1, 5, 6, 1, 2, 2, 0]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [26, 38, 62, 74]);\n  });\n\n  it('throws when passed x as a non-tensor', () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const w = tf.tensor4d([2], [fSize, fSize, inputDepth, outputDepth]);\n\n    expect(() => tf.conv2d({} as tf.Tensor3D, w, stride, pad))\n        .toThrowError(/Argument 'x' passed to 'conv2d' must be a Tensor/);\n  });\n\n  it('throws when passed filter as a non-tensor', () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [2, 2, inputDepth];\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4], inputShape);\n\n    expect(() => tf.conv2d(x, {} as tf.Tensor4D, stride, pad))\n        .toThrowError(/Argument 'filter' passed to 'conv2d' must be a Tensor/);\n  });\n\n  it('accepts a tensor-like object', async () => {\n    const pad = 0;\n    const stride = 1;\n    const x = [[[1], [2]], [[3], [4]]];  // 2x2x1\n    const w = [[[[2]]]];                 // 1x1x1x1\n\n    const result = tf.conv2d(x, w, stride, pad);\n    expectArraysClose(await result.data(), [2, 4, 6, 8]);\n  });\n});\n"]}