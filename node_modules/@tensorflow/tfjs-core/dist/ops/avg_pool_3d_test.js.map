{"version":3,"file":"avg_pool_3d_test.js","sourceRoot":"","sources":["../../src/ops/avg_pool_3d_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose} from '../test_util';\n\ndescribeWithFlags('avgPool3d', ALL_ENVS, () => {\n  it('x=[2,2,2,1] f=[2,2,2] s=1 p=valid', async () => {\n    const x = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 2, 1]);\n\n    const result = tf.avgPool3d(x, 2, 1, 'valid');\n\n    expect(result.shape).toEqual([1, 1, 1, 1]);\n    expectArraysClose(await result.data(), [4.5]);\n  });\n\n  it('x=[1,1,1,1,1] f=[1,1,1] s=1 [0] => [0]', async () => {\n    const x = tf.tensor5d([0], [1, 1, 1, 1, 1]);\n\n    const result = tf.avgPool3d(x, 1, 1, 0);\n\n    expect(result.shape).toEqual([1, 1, 1, 1, 1]);\n    expectArraysClose(await result.data(), [0]);\n  });\n\n  it('x=[1,2,2,2,1] f=[2,2,2] s=1 p=valid', async () => {\n    const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n\n    const result = tf.avgPool3d(x, 2, 1, 'valid');\n\n    expect(result.shape).toEqual([1, 1, 1, 1, 1]);\n    expectArraysClose(await result.data(), [4.5]);\n  });\n\n  it('x=[1,2,2,2,1] f=[2,2,2] s=1 p=same', async () => {\n    const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n    const expected = [4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8];\n    const result = tf.avgPool3d(x, 2, 1, 'same');\n\n    expect(result.shape).toEqual([1, 2, 2, 2, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[1,3,3,3,1] f=[2,2,2] s=1 p=valid', async () => {\n    const x = tf.tensor5d(\n        [\n          1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14,\n          15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27\n        ],\n        [1, 3, 3, 3, 1]);\n    const expected = [7.5, 8.5, 10.5, 11.5, 16.5, 17.5, 19.5, 20.5];\n    const result = tf.avgPool3d(x, 2, 1, 'valid');\n\n    expect(result.shape).toEqual([1, 2, 2, 2, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[1,3,3,3,1] f=[2,2,2] s=1 p=same', async () => {\n    const x = tf.tensor5d(\n        [\n          1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14,\n          15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27\n        ],\n        [1, 3, 3, 3, 1]);\n    const expected = [\n      7.5,  8.5,  9,    10.5, 11.5, 12,   12,   13,   13.5,\n      16.5, 17.5, 18,   19.5, 20.5, 21,   21,   22,   22.5,\n      21,   22,   22.5, 24,   25,   25.5, 25.5, 26.5, 27\n    ];\n    const result = tf.avgPool3d(x, 2, 1, 'same');\n\n    expect(result.shape).toEqual([1, 3, 3, 3, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[1,3,3,3,1] f=[2,2,2] s=1 p=valid, propagates NaNs', async () => {\n    const x = tf.tensor5d(\n        [\n          1,  2,  3,  4,  5,  6,  7,  8,   NaN, 10, 11, 12, 13, 14,\n          15, 16, 17, 18, 19, 20, 21, NaN, 23,  24, 25, 26, 27\n        ],\n        [1, 3, 3, 3, 1]);\n    const expected = [7.5, 8.5, 10.5, NaN, NaN, 17.5, NaN, 20.5];\n    const result = tf.avgPool3d(x, 2, 1, 'valid');\n\n    expect(result.shape).toEqual([1, 2, 2, 2, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[2,3,3,3,1] f=[2,2,2] s=1 p=valid', async () => {\n    const x = tf.tensor5d(\n        [\n          1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14,\n          15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\n          29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\n          43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54\n        ],\n        [2, 3, 3, 3, 1]);\n    const expected = [\n      7.5, 8.5, 10.5, 11.5, 16.5, 17.5, 19.5, 20.5, 34.5, 35.5, 37.5, 38.5,\n      43.5, 44.5, 46.5, 47.5\n    ];\n    const result = tf.avgPool3d(x, 2, 1, 'valid');\n\n    expect(result.shape).toEqual([2, 2, 2, 2, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[1,3,3,3,2] f=[2,2,2] s=1 p=valid', async () => {\n    const x = tf.tensor5d(\n        [\n          1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14,\n          15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\n          29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\n          43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54\n        ],\n        [1, 3, 3, 3, 2]);\n    const expected =\n        [14, 15, 16, 17, 20, 21, 22, 23, 32, 33, 34, 35, 38, 39, 40, 41];\n    const result = tf.avgPool3d(x, 2, 1, 'valid');\n\n    expect(result.shape).toEqual([1, 2, 2, 2, 2]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('x=[1,2,2,2,1] f=[2,2,2] s=1 p=1 roundingMode=floor', async () => {\n    const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n    const expected = [\n      1, 1.5, 2,   2, 2.5, 3,   3, 3.5, 4,   3, 3.5, 4,   4, 4.5,\n      5, 5,   5.5, 6, 5,   5.5, 6, 6,   6.5, 7, 7,   7.5, 8\n    ];\n    const result = tf.avgPool3d(x, 2, 1, 1, 'floor');\n\n    expect(result.shape).toEqual([1, 3, 3, 3, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('throws when x is not rank 5', async () => {\n    // tslint:disable-next-line:no-any\n    const x: any = tf.tensor1d([1]);\n\n    expect(() => tf.avgPool3d(x as tf.Tensor5D, 2, 1, 'valid')).toThrowError();\n  });\n\n  it('throws when dimRoundingMode is set and pad is not a number', async () => {\n    const x = tf.tensor5d([1], [1, 1, 1, 1, 1]);\n    const pad = 'valid';\n    const dimRoundingMode = 'round';\n\n    expect(() => tf.avgPool3d(x, 2, 1, pad, dimRoundingMode)).toThrowError();\n  });\n\n  it('throws when passed a non-tensor', () => {\n    expect(() => tf.avgPool3d({} as tf.Tensor5D, 2, 1, 'valid')).toThrowError();\n  });\n\n  it('throws when input dtype is not float32', () => {\n    const a = tf.tensor5d([1], [1, 1, 1, 1, 1], 'int32');\n    expect(() => tf.avgPool3d(a, 2, 1, 0)).toThrowError();\n  });\n\n  it('accepts a tensor-like object', async () => {\n    const x = [[[[[0]]]]];  // 1x1x1x1x1\n    const result = tf.avgPool3d(x, 1, 1, 0);\n    expect(result.shape).toEqual([1, 1, 1, 1, 1]);\n    expectArraysClose(await result.data(), [0]);\n  });\n});\n\ndescribeWithFlags('avgPool3dBackprop', ALL_ENVS, () => {\n  it('gradient x=[2,2,2,1] f=[1,1,1] s=1', async () => {\n    const dy = tf.tensor4d([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 2, 1]);\n    const x: tf.Tensor4D = tf.ones([2, 2, 2, 1]);\n    const expected = [1, 2, 3, 4, 5, 6, 7, 8];\n\n    const dx = tf.grad((x: tf.Tensor4D) => tf.avgPool3d(x, 1, 1, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient x=[1,2,2,2,1] f=[1,1,1] s=1', async () => {\n    const dy = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n    const x: tf.Tensor5D = tf.ones([1, 2, 2, 2, 1]);\n    const expected = [1, 2, 3, 4, 5, 6, 7, 8];\n\n    const dx = tf.grad((x: tf.Tensor5D) => tf.avgPool3d(x, 1, 1, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient x=[1,2,2,2,1] f=[2,2,2] s=2', async () => {\n    const dy = tf.tensor5d([8], [1, 1, 1, 1, 1]);\n    const x: tf.Tensor5D = tf.ones([1, 2, 2, 2, 1]);\n    const expected = [1, 1, 1, 1, 1, 1, 1, 1];\n\n    const dx = tf.grad((x: tf.Tensor5D) => tf.avgPool3d(x, 2, 1, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient with clone x=[1,2,2,2,1] f=[2,2,2] s=1', async () => {\n    const dy = tf.tensor5d([8], [1, 1, 1, 1, 1]);\n    const x: tf.Tensor5D = tf.ones([1, 2, 2, 2, 1]);\n    const expected = [1, 1, 1, 1, 1, 1, 1, 1];\n\n    const dx = tf.grad(\n        (x: tf.Tensor5D) => tf.avgPool3d(x.clone(), 2, 1, 0).clone())(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient x=[1,3,3,3,1] f=[2,2,2] s=1', async () => {\n    const dy = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n    const x: tf.Tensor5D = tf.ones([1, 3, 3, 3, 1]);\n    const expected = [\n      0.125, 0.375, 0.25, 0.5, 1.25, 0.75, 0.375, 0.875, 0.5,\n      0.75,  1.75,  1,    2,   4.5,  2.5,  1.25,  2.75,  1.5,\n      0.625, 1.375, 0.75, 1.5, 3.25, 1.75, 0.875, 1.875, 1\n    ];\n\n    const dx = tf.grad((x: tf.Tensor5D) => tf.avgPool3d(x, 2, 1, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient x=[1,4,4,4,1] f=[2,2,2] s=2', async () => {\n    const dy = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n    const x: tf.Tensor5D = tf.ones([1, 4, 4, 4, 1]);\n    const expected = [\n      0.125, 0.125, 0.25,  0.25,  0.125, 0.125, 0.25,  0.25,  0.375, 0.375,\n      0.5,   0.5,   0.375, 0.375, 0.5,   0.5,   0.125, 0.125, 0.25,  0.25,\n      0.125, 0.125, 0.25,  0.25,  0.375, 0.375, 0.5,   0.5,   0.375, 0.375,\n      0.5,   0.5,   0.625, 0.625, 0.75,  0.75,  0.625, 0.625, 0.75,  0.75,\n      0.875, 0.875, 1,     1,     0.875, 0.875, 1,     1,     0.625, 0.625,\n      0.75,  0.75,  0.625, 0.625, 0.75,  0.75,  0.875, 0.875, 1,     1,\n      0.875, 0.875, 1,     1\n    ];\n\n    const dx = tf.grad((x: tf.Tensor5D) => tf.avgPool3d(x, 2, 2, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient x=[1,3,3,3,2] f=[2,2,2] s=1', async () => {\n    const dy = tf.tensor5d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n        [1, 2, 2, 2, 2]);\n    const x: tf.Tensor5D = tf.ones([1, 3, 3, 3, 2]);\n    const expected = [\n      0.125, 0.25,  0.5,  0.75,  0.375, 0.5,   0.75, 1,     2,     2.5,  1.25,\n      1.5,   0.625, 0.75, 1.5,   1.75,  0.875, 1,    1.25,  1.5,   3,    3.5,\n      1.75,  2,     3.5,  4,     8,     9,     4.5,  5,     2.25,  2.5,  5,\n      5.5,   2.75,  3,    1.125, 1.25,  2.5,   2.75, 1.375, 1.5,   2.75, 3,\n      6,     6.5,   3.25, 3.5,   1.625, 1.75,  3.5,  3.75,  1.875, 2\n    ];\n\n    const dx = tf.grad((x: tf.Tensor5D) => tf.avgPool3d(x, 2, 1, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n\n  it('gradient x=[2,3,3,3,1] f=[2,2,2] s=1', async () => {\n    const dy = tf.tensor5d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n        [2, 2, 2, 2, 1]);\n    const x: tf.Tensor5D = tf.ones([2, 3, 3, 3, 1]);\n    const expected = [\n      0.125, 0.375, 0.25,  0.5,   1.25, 0.75,  0.375, 0.875, 0.5,   0.75, 1.75,\n      1,     2,     4.5,   2.5,   1.25, 2.75,  1.5,   0.625, 1.375, 0.75, 1.5,\n      3.25,  1.75,  0.875, 1.875, 1,    1.125, 2.375, 1.25,  2.5,   5.25, 2.75,\n      1.375, 2.875, 1.5,   2.75,  5.75, 3,     6,     12.5,  6.5,   3.25, 6.75,\n      3.5,   1.625, 3.375, 1.75,  3.5,  7.25,  3.75,  1.875, 3.875, 2\n    ];\n\n    const dx = tf.grad((x: tf.Tensor5D) => tf.avgPool3d(x, 2, 1, 0))(x, dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(await dx.data(), expected);\n  });\n});\n"]}