{"version":3,"file":"mat_mul_test.js","sourceRoot":"","sources":["../../src/ops/mat_mul_test.ts"],"names":[],"mappings":"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,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9B,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnD,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9B,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnD,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9B,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnD,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9B,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnD,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9B,EAAE,CAAC,GAAG,C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EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC3D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC;YAC3D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC5D,EAAE,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SAC7D,EAC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,CAAC,EAAI,EAAE,EAAG,CAAC,EAAE;YACvE,CAAC,EAAE,EAAE,CAAC,EAAI,CAAC,CAAC,EAAG,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAG,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE,EAAG,GAAG,EAAG,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,EAAG,EAAE;YACtE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EAAI,CAAC,EAAK,EAAE,EAAG,EAAE,EAAI,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC;YACrE,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,CAAC,CAAC,EAAI,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE;YACtE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAI,EAAE,EAAI,CAAC,EAAI,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;YACvE,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,EAAI,EAAE,EAAG,CAAC,EAAE,EAAG,EAAE,EAAI,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE;YACvE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,EAAE,EAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE;YACtE,CAAC,CAAC,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAI,CAAC,EA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AE,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC3D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC;YAC3D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC5D,EAAE,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,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AE,CAAC,EAAI,CAAC,CAAC;YAC5D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC;YAC5D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC;YAC5D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC;YAC5D,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC;SAC5D,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAClB;YACE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC;YAC9D,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC;YAC7D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC;YAC7D,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC;YAC9D,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC;YAC7D,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC;YAC7D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC;YAC7D,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,EAAG,CAAC,EAAE,EAAE,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAC9D,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAG,C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C,CAAC,EAAI,CAAC,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,EAAI,CAAC,EAAE;YACxE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,CAAC,CAAC,EAAG,EAAE,EAAI,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,CAAC;YACtE,CAAC,EAAK,CAAC,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAG,CAAC,CAAC,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE;YACxE,EAAE,EAAI,CAAC,EAAK,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,GAAG,EAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAG,EAAE,EAAG,CAAC,EAAI,EAAE,EAAG,CAAC,EAAE,EAAG,CAAC,EAAE;YACxE,CAAC,EAAE,EAAG,EAAE,EAAI,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAG,CAAC,EAAE;YACxE,CAAC,EAAK,CAAC,EAAE,EAAG,CAAC,EAAI,CAAC,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,CAAC,EAAG,CAAC,EAAI,CAAC,CAAC,EAAG,CAAC,GAAG,EAAE,EAAE;YACvE,GAAG,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAI,EAAE,EAAG,EAAE,EAAG,CAAC,EAAI,CAAC,EA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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Empirically determined minimal shared dimension in matmul before we forward\n// to a.mul(b).sum() in order to take advantage of GPU parallelism. See\n// https://github.com/tensorflow/tfjs-core/pull/1379 for benchmarks.\n// Copied from webgl backend.\n// TODO(yassogba, annyuan) copy tests over to webgl backend that want to\n// explicitly test this threshold.\nexport const MATMUL_SHARED_DIM_THRESHOLD = 1000;\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose, expectArraysEqual} from '../test_util';\nimport {Rank} from '../types';\n\ndescribeWithFlags('matmul', ALL_ENVS, () => {\n  it('A x B', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    const c = tf.matMul(a, b);\n\n    expect(c.shape).toEqual([2, 2]);\n    expectArraysClose(await c.data(), [0, 8, -3, 20]);\n  });\n\n  it('[8,4]x[4,8]', async () => {\n    const a = tf.tensor2d(\n        [\n          1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n          17, 18, 19, 20, 21, 22, 23, 24, 1, 2,  3,  4,  5,  6,  7,  8\n        ],\n        [8, 4]);\n    const b = tf.tensor2d(\n        [\n          0,  1,  -3, 2, 1,  -1, 0, 5,  6, 7, 8, 0, -2, -2, 1, 9,\n          11, 10, 0,  1, -3, 2,  1, -1, 1, 2, 3, 4, 5,  6,  7, 8\n        ],\n        [4, 8]);\n\n    const c = tf.matMul(a, b);\n    const cData = await c.data();\n\n    expect(c.shape).toEqual([8, 8]);\n    expectArraysClose(cData, [\n      49,  53,  25,  21,  8,   25,  33,  52,  121, 133, 57,  49,  12,\n      45,  69,  136, 193, 213, 89,  77,  16,  65,  105, 220, 265, 293,\n      121, 105, 20,  85,  141, 304, 337, 373, 153, 133, 24,  105, 177,\n      388, 409, 453, 185, 161, 28,  125, 213, 472, 49,  53,  25,  21,\n      8,   25,  33,  52,  121, 133, 57,  49,  12,  45,  69,  136\n    ]);\n  });\n\n  it('broadcast with unequal batch dims', async () => {\n    const a = tf.tensor3d(\n        [\n          2, 1, 3, 2, 1,  1,  1, 5, 6, 7, 8, 1,\n          2, 2, 1, 9, 11, 10, 1, 1, 3, 2, 1, 1\n        ],\n        [4, 3, 2]);\n    const b = tf.tensor3d([1, 0.5], [1, 2, 1]);\n    const c = tf.matMul(a, b);\n    expect(c.shape).toEqual([4, 3, 1]);\n    expectArraysClose(\n        await c.data(), [2.5, 4, 1.5, 3.5, 9.5, 8.5, 3, 5.5, 16, 1.5, 4, 1.5]);\n  });\n\n  it('broadcast with unequal ranks', async () => {\n    const a = tf.tensor5d(\n        [\n          2, 1, 3, 2, 1,  1,  1, 5, 6, 7, 8, 1,\n          2, 2, 1, 9, 11, 10, 1, 1, 3, 2, 1, 1\n        ],\n        [1, 2, 2, 3, 2]);\n    const b = tf.tensor2d([1, 0.5], [2, 1]);\n    const c = tf.matMul(a, b);\n    expect(c.shape).toEqual([1, 2, 2, 3, 1]);\n    expectArraysClose(\n        await c.data(), [2.5, 4, 1.5, 3.5, 9.5, 8.5, 3, 5.5, 16, 1.5, 4, 1.5]);\n  });\n\n  it('matmul followed by mul', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const b = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n\n    const c = tf.matMul(a, b);\n\n    const f = tf.tensor2d([0, 1, 0.5, 0, 0.25, 2], [2, 3]);\n    const d = tf.mul(c, f);\n\n    const dData = await d.data();\n\n    expect(d.shape).toEqual([2, 3]);\n    expectArraysClose(dData, [0, 12, 7.5, 0, 6.5, 66]);\n  });\n\n  it('upcasts when dtypes dont match', async () => {\n    const a = [1, 2, 3, 4, 5, 6];\n    const b = [0, 1, -3, 2, 2, 1];\n\n    let c = tf.matMul(\n        tf.tensor(a, [2, 3], 'float32'), tf.tensor(b, [3, 2], 'int32'));\n\n    expect(c.shape).toEqual([2, 2]);\n    expect(c.dtype).toBe('float32');\n    expectArraysClose(await c.data(), [0, 8, -3, 20]);\n\n    c = tf.matMul(tf.tensor(a, [2, 3], 'int32'), tf.tensor(b, [3, 2], 'bool'));\n\n    expect(c.shape).toEqual([2, 2]);\n    expect(c.dtype).toBe('int32');\n    expectArraysClose(await c.data(), [5, 6, 11, 15]);\n  });\n\n  it('A x B^t', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([1, 0, 2, 4, 3, 0], [2, 3]);\n\n    const transposeA = false;\n    const transposeB = true;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    const expected = [7, 10, 16, 31];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('A^t x B', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([1, 0, 2, 4, 3, 0], [2, 3]);\n\n    const transposeA = true;\n    const transposeB = false;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    const expected = [17, 12, 2, 22, 15, 4, 27, 18, 6];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('A^t x B^t', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n    const b = tf.tensor2d([1, 0, 2, 4, 3, 0], [2, 3]);\n\n    const transposeA = true;\n    const transposeB = true;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    const expected = [11, 13, 14, 20];\n    expectArraysClose(await c.data(), expected);\n  });\n\n  it('A x B^t shapes do not match', () => {\n    const a = tf.zeros<Rank.R2>([2, 3]);\n    const b = tf.zeros<Rank.R2>([3, 2]);\n\n    const f = () => {\n      const transposeA = false;\n      const transposeB = true;\n      tf.matMul(a, b, transposeA, transposeB);\n    };\n    expect(f).toThrowError();\n  });\n\n  it('A^t x B shapes do not match', () => {\n    const a = tf.zeros<Rank.R2>([2, 3]);\n    const b = tf.zeros<Rank.R2>([3, 2]);\n\n    const f = () => {\n      const transposeA = true;\n      const transposeB = false;\n      tf.matMul(a, b, transposeA, transposeB);\n    };\n    expect(f).toThrowError();\n  });\n\n  it('A^t x B^t shapes do not match', () => {\n    const a = tf.zeros<Rank.R2>([3, 2]);\n    const b = tf.zeros<Rank.R2>([3, 2]);\n\n    const f = () => {\n      const transposeA = true;\n      const transposeB = true;\n      tf.matMul(a, b, transposeA, transposeB);\n    };\n    expect(f).toThrowError();\n  });\n\n  it('matmul throws when inner dimensions dont match', () => {\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1, 2, 2], [4, 2]);\n\n    expect(() => tf.matMul(a, b)).toThrowError();\n  });\n\n  it('matmul throws when passed non matrices', () => {\n    // tslint:disable-next-line:no-any\n    const a: any =\n        tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 3, 2]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1, 2, 2], [4, 2]);\n\n    expect(() => tf.matMul(a, b)).toThrowError();\n    expect(() => tf.matMul(b, a)).toThrowError();\n  });\n\n  it('matmul throws when passed a vector', () => {\n    // tslint:disable-next-line:no-any\n    const v: any = tf.tensor1d([2, 3]);\n    const matrix = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n\n    expect(() => tf.matMul(matrix, v)).toThrowError();\n  });\n\n  it('Vector times matrix', async () => {\n    const v = tf.tensor1d([2, 3]);\n    const matrix = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const result = tf.dot(v, matrix);\n\n    const expected = [11, 16];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('Vector times matrix with implicit reshape', async () => {\n    const v = tf.tensor1d([2, 3]);\n\n    const matrix = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const result = tf.dot(v, matrix);\n\n    const expected = [11, 16];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('Matrix times vector', async () => {\n    const matrix = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const v = tf.tensor1d([2, 3]);\n    const result = tf.dot(matrix, v);\n\n    const expected = [8, 18];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('batched matmul with the matrices being vectors', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.tensor(values, [batch, 1, sharedDim]);\n    const b = tf.tensor(values, [batch, sharedDim, 1]);\n    const result = tf.matMul(a, b);\n    expect(result.shape).toEqual([batch, 1, 1]);\n    expectArraysClose(await result.data(), [4, 0, 0]);\n  });\n\n  it('batched matmul called twice so memory of output is reused', async () => {\n    const batch = 3;\n    const n = 2;\n    const vals = new Float32Array(batch * n * n);\n    vals[0] = 2;\n    vals[4] = 3;\n    vals[8] = 4;\n\n    const a = tf.tensor(vals, [batch, n, n]);\n    const b = tf.tensor(vals, [batch, n, n]);\n    const result = tf.matMul(a, b);\n    expect(result.shape).toEqual([batch, n, n]);\n    expectArraysClose(\n        await result.data(), [4, 0, 0, 0, 9, 0, 0, 0, 16, 0, 0, 0]);\n    // Dispose the first output, so memory of the second output (which has the\n    // same shape), could be reused.\n    result.dispose();\n\n    const vals2 = new Float32Array(batch * n * n);\n    vals2[3] = 2;\n    vals2[7] = 3;\n    vals2[11] = 4;\n    const a2 = tf.tensor(vals2, [batch, n, n]);\n    const b2 = tf.tensor(vals2, [batch, n, n]);\n    const result2 = tf.matMul(a2, b2);\n    expect(result2.shape).toEqual([batch, n, n]);\n    expectArraysClose(\n        await result2.data(), [0, 0, 0, 4, 0, 0, 0, 9, 0, 0, 0, 16]);\n  });\n\n  it('batched matmul with the matrices being vectors transposedA', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.tensor(values, [batch, sharedDim, 1]);\n    const b = tf.tensor(values, [batch, sharedDim, 1]);\n    const transposeA = true;\n    const transposeB = false;\n    const result = tf.matMul(a, b, transposeA, transposeB);\n    expect(result.shape).toEqual([batch, 1, 1]);\n    expectArraysClose(await result.data(), [4, 0, 0]);\n  });\n\n  it('batched matmul with the matrices being vectors transposedB', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.tensor(values, [batch, 1, sharedDim]);\n    const b = tf.tensor(values, [batch, 1, sharedDim]);\n    const transposeA = false;\n    const transposeB = true;\n    const result = tf.matMul(a, b, transposeA, transposeB);\n    expect(result.shape).toEqual([batch, 1, 1]);\n    expectArraysClose(await result.data(), [4, 0, 0]);\n  });\n\n  it('batched matmul with matrix x vector', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.ones([batch, 2, sharedDim]);\n    const b = tf.tensor(values, [batch, sharedDim, 1]);\n    const result = tf.matMul(a, b);\n    expect(result.shape).toEqual([batch, 2, 1]);\n    expectArraysClose(await result.data(), [2, 2, 0, 0, 0, 0]);\n  });\n\n  it('batched matmul with matrix x vector transposedA', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.ones([batch, sharedDim, 2]);\n    const b = tf.tensor(values, [batch, sharedDim, 1]);\n    const transposeA = true;\n    const transposeB = false;\n    const result = tf.matMul(a, b, transposeA, transposeB);\n    expect(result.shape).toEqual([batch, 2, 1]);\n    expectArraysClose(await result.data(), [2, 2, 0, 0, 0, 0]);\n  });\n\n  it('batched matmul with matrix x vector transposedB', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.ones([batch, 2, sharedDim]);\n    const b = tf.tensor(values, [batch, 1, sharedDim]);\n    const transposeA = false;\n    const transposeB = true;\n    const result = tf.matMul(a, b, transposeA, transposeB);\n    expect(result.shape).toEqual([batch, 2, 1]);\n    expectArraysClose(await result.data(), [2, 2, 0, 0, 0, 0]);\n  });\n\n  it('batched matmul with vector x matrix', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.tensor(values, [batch, 1, sharedDim]);\n    const b = tf.ones([batch, sharedDim, 2]);\n    const result = tf.matMul(a, b);\n    expect(result.shape).toEqual([batch, 1, 2]);\n    expectArraysClose(await result.data(), [2, 2, 0, 0, 0, 0]);\n  });\n\n  it('batched matmul with vector x matrix transposedA', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.tensor(values, [batch, sharedDim, 1]);\n    const b = tf.ones([batch, sharedDim, 2]);\n    const transposeA = true;\n    const transposeB = false;\n    const result = tf.matMul(a, b, transposeA, transposeB);\n    expect(result.shape).toEqual([batch, 1, 2]);\n    expectArraysClose(await result.data(), [2, 2, 0, 0, 0, 0]);\n  });\n\n  it('batched matmul with vector x matrix transposedB', async () => {\n    const batch = 3;\n    const sharedDim = MATMUL_SHARED_DIM_THRESHOLD + 1;\n    const values = new Float32Array(batch * sharedDim);\n    values[10] = 2;\n\n    const a = tf.tensor(values, [batch, 1, sharedDim]);\n    const b = tf.ones([batch, 2, sharedDim]);\n    const transposeA = false;\n    const transposeB = true;\n    const result = tf.matMul(a, b, transposeA, transposeB);\n    expect(result.shape).toEqual([batch, 1, 2]);\n    expectArraysClose(await result.data(), [2, 2, 0, 0, 0, 0]);\n  });\n\n  it('Matrix * vector propagates NaNs', async () => {\n    const matrix = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const v = tf.tensor1d([2, NaN]);\n    const result = tf.dot(matrix, v);\n\n    const expected = [NaN, NaN];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('matrix times vector throws when not passed a matrix', () => {\n    const v = tf.tensor1d([2, 3]);\n\n    // tslint:disable-next-line:no-any\n    const matrix: any = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 2]);\n\n    expect(() => tf.dot(matrix, v)).toThrowError();\n  });\n\n  it('Dot product', async () => {\n    const v1 = tf.tensor1d([2, 3]);\n    const v2 = tf.tensor1d([2, 1]);\n    const result = tf.dot(v1, v2);\n\n    expectArraysClose(await result.data(), [7]);\n  });\n\n  it('Dot product propagates NaNs', async () => {\n    const v1 = tf.tensor1d([2, NaN]);\n    const v2 = tf.tensor1d([2, 1]);\n    const result = tf.dot(v1, v2);\n    expectArraysEqual(await result.data(), [NaN]);\n  });\n\n  it('Dot product throws when vectors are different size', () => {\n    const v1 = tf.tensor1d([2, 3, 3]);\n    const v2 = tf.tensor1d([2, 1]);\n\n    expect(() => tf.dot(v1, v2)).toThrowError();\n    expect(() => tf.dot(v2, v1)).toThrowError();\n  });\n\n  it('Outer product', async () => {\n    const v1 = tf.tensor1d([2, 3]);\n    const v2 = tf.tensor1d([2, 1]);\n    const result = tf.outerProduct(v1, v2);\n\n    const expected = [4, 2, 6, 3];\n    expect(result.shape).toEqual([2, 2]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('outer product accepts a tensor-like object', async () => {\n    const v1 = [2, 3];\n    const v2 = [2, 1];\n    const result = tf.outerProduct(v1, v2);\n    const expected = [4, 2, 6, 3];\n    expect(result.shape).toEqual([2, 2]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('gradients: A * B', async () => {\n    const aT = tf.tensor2d([1, 2, 3, 10, 20, 30], [2, 3]);\n    const bT = tf.tensor2d([2, 3, 4, 1, 2, 3], [3, 2]);\n    const dyT = tf.tensor2d([1, 10, 20, 30], [2, 2]);\n\n    const transposeA = false;\n    const transposeB = false;\n    const grads = tf.grads(\n\n        (a: tf.Tensor2D, b: tf.Tensor2D) =>\n            tf.matMul(a, b, transposeA, transposeB));\n    const [da, db] = grads([aT, bT], dyT);\n\n    // da = dy * bT\n    expect(da.shape).toEqual(aT.shape);\n\n    const a = await aT.buffer();\n    const dy = await dyT.buffer();\n    const b = await bT.buffer();\n    expectArraysClose(\n        await da.data(),\n        [\n          dy.get(0, 0) * b.get(0, 0) + dy.get(0, 1) * b.get(0, 1),\n          dy.get(0, 0) * b.get(1, 0) + dy.get(0, 1) * b.get(1, 1),\n          dy.get(0, 0) * b.get(2, 0) + dy.get(0, 1) * b.get(2, 1),\n          dy.get(1, 0) * b.get(0, 0) + dy.get(1, 1) * b.get(0, 1),\n          dy.get(1, 0) * b.get(1, 0) + dy.get(1, 1) * b.get(1, 1),\n          dy.get(1, 0) * b.get(2, 0) + dy.get(1, 1) * b.get(2, 1)\n        ],\n        1e-1);\n\n    // db = aT * dy\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      a.get(0, 0) * dy.get(0, 0) + a.get(1, 0) * dy.get(1, 0),\n      a.get(0, 0) * dy.get(0, 1) + a.get(1, 0) * dy.get(1, 1),\n      a.get(0, 1) * dy.get(0, 0) + a.get(1, 1) * dy.get(1, 0),\n      a.get(0, 1) * dy.get(0, 1) + a.get(1, 1) * dy.get(1, 1),\n      a.get(0, 2) * dy.get(0, 0) + a.get(1, 2) * dy.get(1, 0),\n      a.get(0, 2) * dy.get(0, 1) + a.get(1, 2) * dy.get(1, 1)\n    ]);\n  });\n\n  it('gradient with clones', () => {\n    const a = tf.tensor2d([1, 2, 3, 10, 20, 30], [2, 3]);\n    const b = tf.tensor2d([2, 3, 4, 1, 2, 3], [3, 2]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor2D, b: tf.Tensor2D) =>\n            tf.matMul(a.clone(), b.clone()).clone());\n    const [da, db] = grads([a, b]);\n\n    expect(da.shape).toEqual(a.shape);\n    expect(db.shape).toEqual(b.shape);\n  });\n\n  it('gradients: a * bT', async () => {\n    const aT = tf.tensor2d([1, 2, 3, 10, 20, 30], [3, 2]);\n    const bT = tf.tensor2d([2, 3, 4, 1, 2, 3], [3, 2]);\n    const dyT = tf.tensor2d([1, 10, 20, 30, 40, 50, 60, 70, 80], [3, 3]);\n\n    const transposeA = false;\n    const transposeB = true;\n    const grads = tf.grads(\n\n        (a: tf.Tensor2D, b: tf.Tensor2D) =>\n            tf.matMul(a, b, transposeA, transposeB));\n    const [da, db] = grads([aT, bT], dyT);\n\n    // da = dy * b\n    expect(da.shape).toEqual(aT.shape);\n    const a = await aT.buffer();\n    const dy = await dyT.buffer();\n    const b = await bT.buffer();\n    expectArraysClose(await da.data(), [\n      dy.get(0, 0) * b.get(0, 0) + dy.get(0, 1) * b.get(1, 0) +\n          dy.get(0, 2) * b.get(2, 0),\n      dy.get(0, 0) * b.get(0, 1) + dy.get(0, 1) * b.get(1, 1) +\n          dy.get(0, 2) * b.get(2, 1),\n      dy.get(1, 0) * b.get(0, 0) + dy.get(1, 1) * b.get(1, 0) +\n          dy.get(1, 2) * b.get(2, 0),\n      dy.get(1, 0) * b.get(0, 1) + dy.get(1, 1) * b.get(1, 1) +\n          dy.get(1, 2) * b.get(2, 1),\n      dy.get(2, 0) * b.get(0, 0) + dy.get(2, 1) * b.get(1, 0) +\n          dy.get(2, 2) * b.get(2, 0),\n      dy.get(2, 0) * b.get(0, 1) + dy.get(2, 1) * b.get(1, 1) +\n          dy.get(2, 2) * b.get(2, 1)\n    ]);\n\n    // db = dyT * a\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      dy.get(0, 0) * a.get(0, 0) + dy.get(1, 0) * a.get(1, 0) +\n          dy.get(2, 0) * a.get(2, 0),\n      dy.get(0, 0) * a.get(0, 1) + dy.get(1, 0) * a.get(1, 1) +\n          dy.get(2, 0) * a.get(2, 1),\n      dy.get(0, 1) * a.get(0, 0) + dy.get(1, 1) * a.get(1, 0) +\n          dy.get(2, 1) * a.get(2, 0),\n      dy.get(0, 1) * a.get(0, 1) + dy.get(1, 1) * a.get(1, 1) +\n          dy.get(2, 1) * a.get(2, 1),\n      dy.get(0, 2) * a.get(0, 0) + dy.get(1, 2) * a.get(1, 0) +\n          dy.get(2, 2) * a.get(2, 0),\n      dy.get(0, 2) * a.get(0, 1) + dy.get(1, 2) * a.get(1, 1) +\n          dy.get(2, 2) * a.get(2, 1)\n    ]);\n  });\n\n  it('gradients: aT * b', async () => {\n    const aT = tf.tensor2d([1, 2, 3, 10, 20, 30], [3, 2]);\n    const bT = tf.tensor2d([2, 3, 4, 1, 2, 3], [3, 2]);\n    const dyT = tf.tensor2d([1, 10, 20, 30], [2, 2]);\n\n    const transposeA = true;\n    const transposeB = false;\n    const grads = tf.grads(\n\n        (a: tf.Tensor2D, b: tf.Tensor2D) =>\n            tf.matMul(a, b, transposeA, transposeB));\n    const [da, db] = grads([aT, bT], dyT);\n\n    // da = b * dyT\n    expect(da.shape).toEqual(aT.shape);\n    const a = await aT.buffer();\n    const dy = await dyT.buffer();\n    const b = await bT.buffer();\n    expectArraysClose(await da.data(), [\n      dy.get(0, 0) * b.get(0, 0) + dy.get(0, 1) * b.get(0, 1),\n      dy.get(1, 0) * b.get(0, 0) + dy.get(1, 1) * b.get(0, 1),\n      dy.get(0, 0) * b.get(1, 0) + dy.get(0, 1) * b.get(1, 1),\n      dy.get(1, 0) * b.get(1, 0) + dy.get(1, 1) * b.get(1, 1),\n      dy.get(0, 0) * b.get(2, 0) + dy.get(0, 1) * b.get(2, 1),\n      dy.get(1, 0) * b.get(2, 0) + dy.get(1, 1) * b.get(2, 1)\n    ]);\n\n    // db = a * dy\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      dy.get(0, 0) * a.get(0, 0) + dy.get(1, 0) * a.get(0, 1),\n      dy.get(0, 1) * a.get(0, 0) + dy.get(1, 1) * a.get(0, 1),\n      dy.get(0, 0) * a.get(1, 0) + dy.get(1, 0) * a.get(1, 1),\n      dy.get(0, 1) * a.get(1, 0) + dy.get(1, 1) * a.get(1, 1),\n      dy.get(0, 0) * a.get(2, 0) + dy.get(1, 0) * a.get(2, 1),\n      dy.get(0, 1) * a.get(2, 0) + dy.get(1, 1) * a.get(2, 1)\n    ]);\n  });\n\n  it('gradients: aT * bT', async () => {\n    const aT = tf.tensor2d([1, 2, 3, 10, 20, 30], [3, 2]);\n    const bT = tf.tensor2d([2, 3, 4, 1, 2, 3], [2, 3]);\n    const dyT = tf.tensor2d([1, 10, 20, 30], [2, 2]);\n\n    const transposeA = true;\n    const transposeB = true;\n    const grads = tf.grads(\n\n        (a: tf.Tensor2D, b: tf.Tensor2D) =>\n            tf.matMul(a, b, transposeA, transposeB));\n    const [da, db] = grads([aT, bT], dyT);\n\n    // da = bT * dyT\n    expect(da.shape).toEqual(aT.shape);\n    const a = await aT.buffer();\n    const dy = await dyT.buffer();\n    const b = await bT.buffer();\n    expectArraysClose(await da.data(), [\n      dy.get(0, 0) * b.get(0, 0) + dy.get(0, 1) * b.get(1, 0),\n      dy.get(1, 0) * b.get(0, 0) + dy.get(1, 1) * b.get(1, 0),\n      dy.get(0, 0) * b.get(0, 1) + dy.get(0, 1) * b.get(1, 1),\n      dy.get(1, 0) * b.get(0, 1) + dy.get(1, 1) * b.get(1, 1),\n      dy.get(0, 0) * b.get(0, 2) + dy.get(0, 1) * b.get(1, 2),\n      dy.get(1, 0) * b.get(0, 2) + dy.get(1, 1) * b.get(1, 2)\n    ]);\n\n    // db = dyT * aT\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      dy.get(0, 0) * a.get(0, 0) + dy.get(1, 0) * a.get(0, 1),\n      dy.get(0, 0) * a.get(1, 0) + dy.get(1, 0) * a.get(1, 1),\n      dy.get(0, 0) * a.get(2, 0) + dy.get(1, 0) * a.get(2, 1),\n      dy.get(0, 1) * a.get(0, 0) + dy.get(1, 1) * a.get(0, 1),\n      dy.get(0, 1) * a.get(1, 0) + dy.get(1, 1) * a.get(1, 1),\n      dy.get(0, 1) * a.get(2, 0) + dy.get(1, 1) * a.get(2, 1)\n    ]);\n  });\n\n  it('throws when passed a as a non-tensor', () => {\n    expect(() => tf.matMul({} as tf.Tensor2D, tf.tensor2d([2], [1, 1])))\n        .toThrowError(/Argument 'a' passed to 'matMul' must be a Tensor/);\n  });\n  it('throws when passed b as a non-tensor', () => {\n    expect(() => tf.matMul(tf.tensor2d([2], [1, 1]), {} as tf.Tensor2D))\n        .toThrowError(/Argument 'b' passed to 'matMul' must be a Tensor/);\n  });\n\n  it('accepts a tensor-like object', async () => {\n    const a = [[1, 2, 3], [4, 5, 6]];     // 2x3\n    const b = [[0, 1], [-3, 2], [2, 1]];  // 3x2\n    const c = tf.matMul(a, b);\n\n    expect(c.shape).toEqual([2, 2]);\n    expectArraysClose(await c.data(), [0, 8, -3, 20]);\n  });\n\n  it('accepts a tensor-like object chained', async () => {\n    const a = tf.tensor2d([[1, 2, 3], [4, 5, 6]], [2, 3]);  // 2x3\n    const b = [[0, 1], [-3, 2], [2, 1]];                    // 3x2\n    const c = a.matMul(b);\n\n    expect(c.shape).toEqual([2, 2]);\n    expectArraysClose(await c.data(), [0, 8, -3, 20]);\n  });\n\n  it('a * b where a has zero in its shape', async () => {\n    const a = tf.tensor2d([], [0, 3]);\n    const b = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n    const c = tf.matMul(a, b);\n    expect(c.shape).toEqual([0, 2]);\n    expect(c.rank).toBe(2);\n    expect(c.size).toBe(0);\n    expectArraysClose(await c.data(), []);\n  });\n\n  it('(a * b) * c where a has zero in its shape, so a*b does also',\n     async () => {\n       const a = tf.tensor2d([], [0, 3]);\n       const b = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n       const ab = tf.matMul(a, b);\n       expect(ab.shape).toEqual([0, 2]);\n       expectArraysClose(await ab.data(), []);\n       const c = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n       const res = tf.matMul(ab, c);\n       expect(res.shape).toEqual([0, 3]);\n       expectArraysClose(await res.data(), []);\n     });\n\n  it('throws error for string tensor', () => {\n    expect(() => tf.matMul([['a']], [['b']]))\n        .toThrowError(/Argument 'a' passed to 'matMul' must be numeric tensor/);\n  });\n});\n\ndescribeWithFlags('matmulBatch', ALL_ENVS, () => {\n  it('A x B', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 2, 3]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 3, 2]);\n\n    const c = tf.matMul(a, b);\n    expect(c.shape).toEqual([5, 2, 2]);\n    expectArraysClose(await c.data(), [\n      87, 20, -6,  -32, -24, -50, -36, -5, 24, 98,\n      70, 33, -64, 47,  -42, -28, -71, 24, 37, 5\n    ]);\n  });\n\n  it('A x B in 4D', async () => {\n    const a = tf.tensor4d(\n        [\n          -2, 3,  5,  -5, 3,  9,  -3, -5, 1,   1,  -9, 9,   -6, 6,  -8,\n          -7, -1, 3,  9,  -7, -7, 2,  10, -6,  -8, -6, 9,   -6, 4,  -1,\n          9,  -6, 10, 8,  -9, 5,  -8, -7, 0,   2,  -5, -1,  -9, -4, 3,\n          -2, 6,  -4, 7,  1,  -5, -4, 9,  -8,  -6, -8, 4,   -1, 4,  3,\n          -7, 8,  -7, 5,  -3, -2, -4, 9,  2,   -1, 1,  -10, -3, 5,  -4,\n          6,  -8, -8, 9,  -3, -5, 10, 3,  -3,  -3, 9,  3,   -3, 2,  -8,\n          10, 1,  9,  -2, -2, -3, -4, 6,  -10, -1, 8,  -8,  7,  3,  -2,\n          3,  6,  -2, -2, -4, 1,  -5, -4, 0,   5,  1,  9,   -8, -2, -1\n        ],\n        [4, 5, 2, 3]);\n    const b = tf.tensor4d(\n        [\n          -4, -3, -2, -6, 6,  -1, -4, -1, 7,  -4, 8,  -9,  -9, 0,   -1,\n          -4, -6, -7, -3, -4, -7, 6,  -8, 1,  -2, 1,  -1,  -3, 8,   -5,\n          9,  -2, 5,  9,  -2, 2,  -5, -5, -8, -1, -2, -3,  -2, -10, 6,\n          -3, 0,  1,  6,  7,  1,  2,  -4, -5, 2,  -5, -7,  9,  3,   -6,\n          6,  4,  -4, 6,  10, -3, -2, 8,  10, -8, 10, -1,  -9, -7,  -8,\n          -3, 1,  1,  -2, -9, -7, -6, -1, 0,  7,  -9, -7,  -5, 0,   -4,\n          -4, -7, 2,  4,  6,  6,  -4, -6, -8, 3,  -8, -9,  6,  9,   -4,\n          1,  -1, 0,  8,  9,  0,  -5, 3,  -1, 5,  0,  -10, 7,  -2,  6\n        ],\n        [4, 5, 3, 2]);\n\n    const transposeA = false;\n    const transposeB = false;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    expectArraysClose(await c.data(), [\n      32,  -17, 68,  -12,  -15, 14,  5,   -46, 96,  32,  46,  -17, 78,   -85,\n      -28, 46,  94,  -35,  0,   -13, 31,  -52, 17,  -87, 96,  47,  32,   -2,\n      -6,  105, 40,  -2,   63,  76,  17,  30,  56,  -66, -21, 23,  -144, 41,\n      22,  8,   118, -106, -88, -6,  -17, 2,   2,   -26, 8,   -63, -38,  -108,\n      -84, -30, -35, 49,   16,  -12, -14, -12, 48,  132, 4,   102, 32,   66,\n      -4,  33,  -13, 1,    -40, -25, -3,  61,  -18, -20\n    ]);\n  });\n\n  it('A x B^t', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 2, 3]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 2, 3]);\n\n    const transposeA = false;\n    const transposeB = true;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n    expect(c.shape).toEqual([5, 2, 2]);\n    expectArraysClose(await c.data(), [\n      66, 35, -48,  14, -45, -33, -12, 7,  -76, 64,\n      3,  66, -119, -9, -64, -60, -76, 48, 33,  -16\n    ]);\n  });\n\n  it('A^t x B', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 2, 3]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 2, 3]);\n\n    const transposeA = true;\n    const transposeB = false;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    expectArraysClose(await c.data(), [\n      40,  -36, 5,   40,  34, 5,   48,  80, 6,  -6, 21,  -48, -23, -20, -50,\n      -12, -21, -12, -58, 15, -96, 23,  6,  39, 20, 109, 42,  -67, 45,  -40,\n      76,  -52, 40,  -15, 1,  -60, -58, -3, 36, 40, -6,  -24, 51,  -33, -28\n    ]);\n  });\n\n  it('A^t x B in 4D', async () => {\n    const a = tf.tensor4d(\n        [\n          -2, 3,  5,  -5, 3,  9,  -3, -5, 1,   1,  -9, 9,   -6, 6,  -8,\n          -7, -1, 3,  9,  -7, -7, 2,  10, -6,  -8, -6, 9,   -6, 4,  -1,\n          9,  -6, 10, 8,  -9, 5,  -8, -7, 0,   2,  -5, -1,  -9, -4, 3,\n          -2, 6,  -4, 7,  1,  -5, -4, 9,  -8,  -6, -8, 4,   -1, 4,  3,\n          -7, 8,  -7, 5,  -3, -2, -4, 9,  2,   -1, 1,  -10, -3, 5,  -4,\n          6,  -8, -8, 9,  -3, -5, 10, 3,  -3,  -3, 9,  3,   -3, 2,  -8,\n          10, 1,  9,  -2, -2, -3, -4, 6,  -10, -1, 8,  -8,  7,  3,  -2,\n          3,  6,  -2, -2, -4, 1,  -5, -4, 0,   5,  1,  9,   -8, -2, -1\n        ],\n        [4, 5, 2, 3]);\n    const b = tf.tensor4d(\n        [\n          -4, -3, -2, -6, 6,  -1, -4, -1, 7,  -4, 8,  -9,  -9, 0,   -1,\n          -4, -6, -7, -3, -4, -7, 6,  -8, 1,  -2, 1,  -1,  -3, 8,   -5,\n          9,  -2, 5,  9,  -2, 2,  -5, -5, -8, -1, -2, -3,  -2, -10, 6,\n          -3, 0,  1,  6,  7,  1,  2,  -4, -5, 2,  -5, -7,  9,  3,   -6,\n          6,  4,  -4, 6,  10, -3, -2, 8,  10, -8, 10, -1,  -9, -7,  -8,\n          -3, 1,  1,  -2, -9, -7, -6, -1, 0,  7,  -9, -7,  -5, 0,   -4,\n          -4, -7, 2,  4,  6,  6,  -4, -6, -8, 3,  -8, -9,  6,  9,   -4,\n          1,  -1, 0,  8,  9,  0,  -5, 3,  -1, 5,  0,  -10, 7,  -2,  6\n        ],\n        [4, 5, 2, 3]);\n\n    const transposeA = true;\n    const transposeB = false;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n\n    expectArraysClose(await c.data(), [\n      38,  -24, 9,   -30, 9,   -9,  -74,  39,  -19,  8,    11,  -30, 56,  -67,\n      46,  -40, 71,  -74, 82,  42,  55,   -50, 6,    1,    60,  -18, -13, -15,\n      -52, -61, 81,  -52, 59,  -15, 76,   43,  34,   -56,  38,  0,   26,  -14,\n      -15, 1,   -4,  153, -34, 61,  -135, 30,  -48,  135,  -30, 60,  38,  36,\n      58,  40,  45,  71,  1,   2,   3,    24,  90,   -56,  -10, 40,  -18, 6,\n      -30, 14,  34,  65,  27,  24,  -29,  -44, -46,  -3,   35,  -21, 27,  48,\n      20,  52,  32,  35,  -11, -46, -12,  22,  13,   30,   2,   -23, -54, -48,\n      34,  16,  -42, -39, -26, 82,  89,   76,  -84,  30,   9,   27,  30,  -21,\n      -43, -48, 60,  20,  24,  -78, -91,  -63, -12,  24,   21,  28,  48,  35,\n      -6,  27,  33,  53,  -81, -71, 61,   -27, 11,   -48,  -82, 8,   -12, -19,\n      -10, -48, -81, 0,   13,  32,  41,   0,   -100, -120, 16,  124, 152, 45,\n      60,  -28, 24,  21,  -12, -14, -16,  8,   9,    -33,  5,   -12, -48, 4,\n      8,   9,   0,   -31, 16,  -98, -9,   4,   -22,  38,   2,   -96\n    ]);\n  });\n\n  it('A^t x B^t', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 3, 2]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 2, 3]);\n\n    const transposeA = true;\n    const transposeB = true;\n    const c = tf.matMul(a, b, transposeA, transposeB);\n    expectArraysClose(await c.data(), [\n      66,  42, 16,  -56, -12, 6,   -30, 19,  -1, 102,\n      -94, 14, -56, 32,  100, -56, -47, -11, 5,  -31\n    ]);\n  });\n\n  it('batch dimensions do not match', () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8,  -2, -8, 4, -7, -6, -9, -1, 3,\n          7,  -2, 5,  -6, 3,  8,  7, -8, 1,  4,  -4, 6\n        ],\n        [4, 3, 2]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 2, 3]);\n\n    const f = () => {\n      tf.matMul(a, b, false, false);\n    };\n    expect(f).toThrowError();\n  });\n\n  it('gradients: A x B', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 2, 3]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 3, 2]);\n    const dy = tf.tensor3d(\n        [8, 2, -3, -2, -8, 4, 5, 7, 4, -4, -4, 5, 8, 10, 1, 0, 6, 6, -4, 7],\n        [5, 2, 2]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor3D, b: tf.Tensor3D) => tf.matMul(a, b, false, false));\n    const [da, db] = grads([a, b], dy);\n\n    // da = dy * bT\n    expect(da.shape).toEqual(a.shape);\n    expectArraysClose(await da.data(), [\n      -72, -8, -56, 32, 3,   21,   -12, -40, 40, 36,  44, 51, -52, -44, -4,\n      61,  49, 13,  -2, -10, -108, -9,  0,   -1, -24, 60, -6, 49,  26,  -40\n    ]);\n\n    // db = aT * dy\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      -64, -26, -34, -6, -24, 4,   -77, -47, 51, -35, 63,  -3,  52,  -58, -20,\n      23,  -12, 20,  60, 70,  -68, -80, 14,  10, 44,  -11, -32, -10, -46, -68\n    ]);\n  });\n\n  it('4d gradients: A x B', async () => {\n    const a = tf.tensor4d(\n        [\n          -2, 3,  5,  -5, 3,  9,  -3, -5, 1,   1,  -9, 9,   -6, 6,  -8,\n          -7, -1, 3,  9,  -7, -7, 2,  10, -6,  -8, -6, 9,   -6, 4,  -1,\n          9,  -6, 10, 8,  -9, 5,  -8, -7, 0,   2,  -5, -1,  -9, -4, 3,\n          -2, 6,  -4, 7,  1,  -5, -4, 9,  -8,  -6, -8, 4,   -1, 4,  3,\n          -7, 8,  -7, 5,  -3, -2, -4, 9,  2,   -1, 1,  -10, -3, 5,  -4,\n          6,  -8, -8, 9,  -3, -5, 10, 3,  -3,  -3, 9,  3,   -3, 2,  -8,\n          10, 1,  9,  -2, -2, -3, -4, 6,  -10, -1, 8,  -8,  7,  3,  -2,\n          3,  6,  -2, -2, -4, 1,  -5, -4, 0,   5,  1,  9,   -8, -2, -1\n        ],\n        [4, 5, 2, 3]);\n    const b = tf.tensor4d(\n        [\n          -4, -3, -2, -6, 6,  -1, -4, -1, 7,  -4, 8,  -9,  -9, 0,   -1,\n          -4, -6, -7, -3, -4, -7, 6,  -8, 1,  -2, 1,  -1,  -3, 8,   -5,\n          9,  -2, 5,  9,  -2, 2,  -5, -5, -8, -1, -2, -3,  -2, -10, 6,\n          -3, 0,  1,  6,  7,  1,  2,  -4, -5, 2,  -5, -7,  9,  3,   -6,\n          6,  4,  -4, 6,  10, -3, -2, 8,  10, -8, 10, -1,  -9, -7,  -8,\n          -3, 1,  1,  -2, -9, -7, -6, -1, 0,  7,  -9, -7,  -5, 0,   -4,\n          -4, -7, 2,  4,  6,  6,  -4, -6, -8, 3,  -8, -9,  6,  9,   -4,\n          1,  -1, 0,  8,  9,  0,  -5, 3,  -1, 5,  0,  -10, 7,  -2,  6\n        ],\n        [4, 5, 3, 2]);\n    const dy = tf.tensor4d(\n        [\n          8,  -7, 0,  -9,  -5, -5, 0,  3,  7,  -4, 6,  -8,  -8, 0,  -1, -8,\n          -9, -7, -4, -9,  2,  3,  5,  8,  -5, -7, 3,  -10, -5, -9, -5, 1,\n          7,  1,  -9, -10, 8,  5,  0,  8,  -6, 4,  0,  -5,  8,  -7, -2, 1,\n          -8, 9,  9,  -7,  1,  7,  -2, 5,  -2, 9,  1,  -5,  7,  5,  -7, -6,\n          6,  7,  -8, 7,   4,  -5, 4,  -5, 3,  -4, -5, 4,   -6, 3,  -8, 10\n        ],\n        [4, 5, 2, 2]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor4D, b: tf.Tensor4D) => tf.matMul(a, b, false, false));\n    const [da, db] = grads([a, b], dy);\n\n    // da = dy * bT\n    expect(da.shape).toEqual(a.shape);\n    expectArraysClose(await da.data(), [\n      -11,  26,  55,  27,  54,  9,   25,  -15, 5,   -3,   -12, -27, -63, 9,\n      -14,  -54, 26,  20,  24,  56,  64,  35,  -41, 0,    11,  30,  -37, -1,\n      31,   13,  12,  37,  2,   29,  97,  6,   60,  47,   31,  35,  -14, 24,\n      100,  -3,  -9,  0,   -33, 1,   49,  9,   -33, -124, -29, 86,  -9,  -11,\n      -6,   -40, 72,  -48, -20, 48,  -72, -20, -30, 15,   -72, 136, 87,  12,\n      -28,  -21, 9,   37,  1,   -32, -51, 2,   -65, -49,  -1,  -41, -16, 2,\n      -95,  -31, -36, 52,  18,  20,  -63, 34,  72,  70,   -38, -78, -66, -27,\n      -111, -10, 85,  1,   -21, -21, -4,  -21, -21, -4,   -12, 20,  13,  -4,\n      -20,  -19, -30, 81,  30,  -40, 150, 76\n    ]);\n\n    // db = aT * dy\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      -16, 59,  24,  -48,  40,   -116, 15,  18,  25,  -2,  -5,  22,  -84, 80,\n      36,  -16, -38, 8,    -74,  -16,  46,  -80, 62,  48,  96,  110, 38,  6,\n      -77, -54, 58,  91,   -57,  -90,  45,  70,  46,  36,  20,  99,  -3,  10,\n      55,  79,  -10, 42,   5,    -31,  85,  47,  -74, -89, 37,  75,  -48, -38,\n      -64, -8,  32,  44,   42,   -53,  -48, 47,  42,  -18, -30, 27,  70,  -62,\n      36,  -24, 78,  -69,  -112, 101,  -40, 20,  -11, 113, -9,  -6,  1,   -50,\n      3,   -12, -16, 71,   -14,  67,   84,  62,  21,  17,  84,  63,  -16, -35,\n      -28, 98,  4,   -126, 40,   -50,  36,  -45, -16, 20,  19,  -12, 8,   0,\n      3,   -4,  34,  -65,  10,   -17,  -46, 17\n    ]);\n  });\n\n  it('gradients: A x B^t', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 3, 2]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 3, 2]);\n    const dy = tf.tensor3d(\n        [\n          -0, 7,  5, 0,  -9, 5, -7, 6,  -5, -3,  -2, -2, -4, 10, -3,\n          5,  -1, 3, -2, -9, 4, -5, 7,  9,  -10, -8, -8, -5, -0, -1,\n          3,  3,  4, 9,  -7, 6, -2, -9, 5,  1,   -5, -3, -1, 9,  4\n        ],\n        [5, 3, 3]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor3D, b: tf.Tensor3D) => tf.matMul(a, b, false, true));\n    const [da, db] = grads([a, b], dy);\n\n    expect(da.shape).toEqual(a.shape);\n    expectArraysClose(await da.data(), [\n      -42, 0,  -26,  0,  85,  28,  -19, -29, 51, -16, 6,   37,  94,  -27, 50,\n      71,  24, -202, 46, -25, -31, -22, -87, 10, -7,  -80, -36, -15, 55,  35\n    ]);\n\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      14,  56, 7,    -155, -45, 55, 7,   72,  -67, -79, 7, 50, -69, -46, -52,\n      -88, 49, -126, -68,  106, 31, -30, -27, 60,  -19, 5, 27, 43,  55,  -13\n    ]);\n  });\n\n  it('4d gradients: A x B^t', async () => {\n    const a = tf.tensor4d(\n        [\n          -2, 3,  5,  -5, 3,  9,  -3, -5, 1,   1,  -9, 9,   -6, 6,  -8,\n          -7, -1, 3,  9,  -7, -7, 2,  10, -6,  -8, -6, 9,   -6, 4,  -1,\n          9,  -6, 10, 8,  -9, 5,  -8, -7, 0,   2,  -5, -1,  -9, -4, 3,\n          -2, 6,  -4, 7,  1,  -5, -4, 9,  -8,  -6, -8, 4,   -1, 4,  3,\n          -7, 8,  -7, 5,  -3, -2, -4, 9,  2,   -1, 1,  -10, -3, 5,  -4,\n          6,  -8, -8, 9,  -3, -5, 10, 3,  -3,  -3, 9,  3,   -3, 2,  -8,\n          10, 1,  9,  -2, -2, -3, -4, 6,  -10, -1, 8,  -8,  7,  3,  -2,\n          3,  6,  -2, -2, -4, 1,  -5, -4, 0,   5,  1,  9,   -8, -2, -1\n        ],\n        [4, 5, 3, 2]);\n    const b = tf.tensor4d(\n        [\n          -4, -3, -2, -6, 6,  -1, -4, -1, 7,  -4, 8,  -9,  -9, 0,   -1,\n          -4, -6, -7, -3, -4, -7, 6,  -8, 1,  -2, 1,  -1,  -3, 8,   -5,\n          9,  -2, 5,  9,  -2, 2,  -5, -5, -8, -1, -2, -3,  -2, -10, 6,\n          -3, 0,  1,  6,  7,  1,  2,  -4, -5, 2,  -5, -7,  9,  3,   -6,\n          6,  4,  -4, 6,  10, -3, -2, 8,  10, -8, 10, -1,  -9, -7,  -8,\n          -3, 1,  1,  -2, -9, -7, -6, -1, 0,  7,  -9, -7,  -5, 0,   -4,\n          -4, -7, 2,  4,  6,  6,  -4, -6, -8, 3,  -8, -9,  6,  9,   -4,\n          1,  -1, 0,  8,  9,  0,  -5, 3,  -1, 5,  0,  -10, 7,  -2,  6\n        ],\n        [4, 5, 3, 2]);\n    const dy = tf.tensor4d(\n        [\n          5,  -1, -5, -4, -1,  9,  1,   -2, 10,  7,  -1, 6,   -8, 8,  -3,\n          9,  -4, 2,  -4, -8,  8,  4,   8,  -10, -8, -8, 6,   6,  -5, 9,\n          -1, -7, -5, -3, -3,  2,  -6,  5,  8,   -9, 5,  -8,  -3, 8,  6,\n          2,  8,  5,  9,  7,   6,  2,   -3, 10,  7,  7,  -3,  4,  -3, -6,\n          -8, -8, 9,  0,  -8,  -3, -2,  -2, 8,   2,  3,  -6,  3,  6,  -3,\n          7,  7,  -9, -3, 8,   7,  7,   -1, -6,  5,  2,  -1,  -1, 1,  5,\n          0,  -4, 3,  -4, -10, 1,  -2,  -8, -9,  -6, 4,  4,   -7, -1, -1,\n          -9, 7,  1,  -1, 8,   0,  -2,  -7, 5,   7,  8,  9,   -3, -8, -6,\n          -7, -8, -1, 8,  -4,  7,  5,   -9, 9,   3,  0,  -10, 7,  -9, 4,\n          -7, 5,  -2, -2, 3,   3,  -6,  2,  0,   8,  -5, -10, 3,  -7, 0,\n          -6, 2,  3,  -1, 3,   3,  -10, 1,  3,   -7, -1, 8,   -2, -1, -1,\n          -3, -9, 7,  4,  -6,  3,  0,   -7, -4,  -5, -8, -6,  10, -6, 4\n        ],\n        [4, 5, 3, 3]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor4D, b: tf.Tensor4D) => tf.matMul(a, b, false, true));\n    const [da, db] = grads([a, b], dy);\n\n    expect(da.shape).toEqual(a.shape);\n    expectArraysClose(await da.data(), [\n      -48, -4,   72,  9,   60,  -1,  13,   -57, 64,  3,   -48, -11, -4,  -24,\n      16,  38,   44,  -10, -55, -45, 92,   -43, 14,  -4,  71,  -61, -51, 16,\n      46,  -57,  48,  78,  104, 57,  -17,  -11, -85, -33, 16,  1,   86,  21,\n      -48, 21,   -8,  34,  14,  -35, 36,   48,  85,  108, -38, -40, 3,   -8,\n      -7,  -1,   6,   -16, 46,  -33, 26,   -79, -70, -29, 92,  -84, -6,  -47,\n      98,  -129, -55, -17, 79,  40,  -118, -64, 68,  75,  71,  111, 5,   -48,\n      98,  -36,  21,  13,  112, -34, 26,   57,  32,  44,  28,  50,  88,  27,\n      44,  -39,  -16, 15,  -21, -6,  -67,  -89, -46, -64, -19, -12, -3,  11,\n      41,  63,   78,  -73, 67,  -92, 102,  -18\n    ]);\n\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      -27,  44,   -9,  -16, 85,  30,  -110, 38,  47,  -23, -39, -15, 0,    -76,\n      -8,   -128, 26,  136, 31,  -26, -26,  39,  136, -85, -45, 93,  37,   -68,\n      -112, -6,   90,  70,  169, -7,  15,   68,  -16, -33, -16, -47, -21,  0,\n      6,    -4,   84,  24,  15,  20,  -41,  -1,  79,  -86, 87,  -23, -26,  -64,\n      18,   9,    52,  64,  34,  -16, 122,  -66, -1,  47,  1,   43,  -11,  -33,\n      -17,  27,   -45, -73, -60, -66, -92,  -42, 32,  -85, -44, -44, -28,  -13,\n      8,    -20,  9,   -9,  -49, 79,  -76,  15,  73,  -7,  7,   -8,  -110, 93,\n      106,  -39,  64,  -84, -29, -19, 13,   14,  63,  2,   -15, 23,  17,   49,\n      -3,   -31,  -65, 30,  -95, 63,  -82,  40\n    ]);\n  });\n\n  it('gradients: A^t x B', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 3, 2]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 3, 2]);\n    const dy = tf.tensor3d(\n        [8, 2, -3, -2, -8, 4, 5, 7, 4, -4, -4, 5, 8, 10, 1, 0, 6, 6, -4, 7],\n        [5, 2, 2]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor3D, b: tf.Tensor3D) => tf.matMul(a, b, true, false));\n    const [da, db] = grads([a, b], dy);\n\n    expect(da.shape).toEqual(a.shape);\n    expectArraysClose(await da.data(), [\n      -72, 32, -8, 3,  -56, 21,  -12, 36,   -40, 44,  40, 51, -52, 61, -44,\n      49,  -4, 13, -2, -9,  -10, 0,   -108, -1,  -24, 49, 60, 26,  -6, -40\n    ]);\n\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      -25, 0,   -72, -28, 8,  12, -67, -33, 3,   -87, 23, 17,  36,  -38, 44,\n      -50, -20, 28,  48,  70, 12, 10,  -26, -40, 40,  -4, -34, -89, 20,  -2\n    ]);\n  });\n\n  it('gradients: A^t x B^t', async () => {\n    const a = tf.tensor3d(\n        [\n          -5, -5, -6, 8, -2, -8, 4, -7, -6, -9, -1, 3,  7,  -2, 5,\n          -6, 3,  8,  7, -8, 1,  4, -4, 6,  4,  -4, -9, -5, 2,  -2\n        ],\n        [5, 3, 2]);\n    const b = tf.tensor3d(\n        [\n          -8, -4, -1, 0,  -7, 0, 3,  3,  6,   2,  -1, 8, -4, 9, -6,\n          5,  8,  9,  -9, 7,  0, -1, -1, -10, -7, 3,  4, 6,  3, -4\n        ],\n        [5, 2, 3]);\n    const dy = tf.tensor3d(\n        [8, 2, -3, -2, -8, 4, 5, 7, 4, -4, -4, 5, 8, 10, 1, 0, 6, 6, -4, 7],\n        [5, 2, 2]);\n\n    const grads = tf.grads(\n        (a: tf.Tensor3D, b: tf.Tensor3D) => tf.matMul(a, b, true, true));\n    const [da, db] = grads([a, b], dy);\n\n    expect(da.shape).toEqual(a.shape);\n    expectArraysClose(await da.data(), [\n      -64, 24,  -46, 26,  -8, 3,  -16, 29,   -28, 8,  -16, 86, -36, 41, 4,\n      4,   -60, 69,  -82, -9, 46, 7,   -100, 0,   -6, 70,  36, 9,   0,  -44\n    ]);\n\n    expect(db.shape).toEqual(b.shape);\n    expectArraysClose(await db.data(), [\n      -25, -72, 8,  0,  -28, 12,  -67, 3,  23,  -33, -87, 17, 36, 44,  -20,\n      -38, -50, 28, 48, 12,  -26, 70,  10, -40, 40,  -34, 20, -4, -89, -2\n    ]);\n  });\n});\n\ndescribeWithFlags('dot', ALL_ENVS, () => {\n  let a: tf.Tensor1D;\n  let b: tf.Tensor2D;\n  let c: tf.Tensor2D;\n  let d: tf.Tensor3D;\n  let e: tf.Scalar;\n  let f: tf.Tensor3D;\n\n  beforeEach(() => {\n    a = tf.tensor1d([1, 2]);\n    b = tf.tensor2d([[1, 2], [3, 4]]);\n    c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n    d = tf.tensor3d([1, 2], [1, 1, 2]);\n    e = tf.scalar(1);\n    f = tf.tensor3d([1, 2, 1, 2], [2, 1, 2]);\n  });\n\n  it('vector-vector', async () => {\n    const aa = tf.dot(a, a);\n    expectArraysClose(await aa.data(), [5]);\n    expect(aa.shape).toEqual([]);\n  });\n\n  it('vector-matrix', async () => {\n    const ab = tf.dot(a, b);\n    const ac = tf.dot(a, c);\n    expect(ab.shape).toEqual([2]);\n    expect(ac.shape).toEqual([3]);\n    expectArraysClose(await ab.data(), [7, 10]);\n    expectArraysClose(await ac.data(), [9, 12, 15]);\n  });\n\n  it('matrix-vector', async () => {\n    const ba = b.dot(a);\n    expect(ba.shape).toEqual([2]);\n    expectArraysClose(await ba.data(), [5, 11]);\n  });\n\n  it('matrix-matrix', async () => {\n    const bb = tf.dot(b, b);\n    const bc = tf.dot(b, c);\n    expect(bb.shape).toEqual([2, 2]);\n    expect(bc.shape).toEqual([2, 3]);\n    expectArraysClose(await bb.data(), [7, 10, 15, 22]);\n    expectArraysClose(await bc.data(), [9, 12, 15, 19, 26, 33]);\n  });\n\n  it('matmul A x B asymmetric', async () => {\n    const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n    const b = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n\n    const c = tf.matMul(a, b);\n    const cData = await c.data();\n\n    expect(c.shape).toEqual([2, 3]);\n    expectArraysClose(cData, [9, 12, 15, 19, 26, 33]);\n  });\n\n  it('throws error on incompatible dimensions', () => {\n    expect(() => tf.dot(c, f)).toThrowError();\n  });\n\n  it('throws error when inputs are not rank 1 or 2', () => {\n    expect(() => tf.dot(a, d)).toThrowError();\n    expect(() => tf.dot(a, e)).toThrowError();\n  });\n\n  it('accepts a tensor-like object', async () => {\n    const a = [1, 2, 3];\n    const res = tf.dot(a, a);\n    expectArraysClose(await res.data(), [14]);\n    expect(res.shape).toEqual([]);\n  });\n\n  it('throws error for string tensors', () => {\n    expect(() => tf.dot('a', 'b'))\n        .toThrowError(/Argument 't1' passed to 'dot' must be numeric tensor/);\n  });\n\n  it('ensure no memory leak', async () => {\n    const numTensorsBefore = tf.memory().numTensors;\n    const numDataIdBefore = tf.engine().backend.numDataIds();\n    const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n    const b = tf.tensor2d([0, 1, -3, 2, 2, 1], [3, 2]);\n\n    const c = tf.matMul(a, b);\n\n    expect(c.shape).toEqual([2, 2]);\n    expectArraysClose(await c.data(), [0, 8, -3, 20]);\n\n    a.dispose();\n    b.dispose();\n    c.dispose();\n\n    const numTensorsAfter = tf.memory().numTensors;\n    const numDataIdAfter = tf.engine().backend.numDataIds();\n    expect(numTensorsAfter).toBe(numTensorsBefore);\n    expect(numDataIdAfter).toBe(numDataIdBefore);\n  });\n});\n"]}