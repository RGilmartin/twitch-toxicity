{"version":3,"file":"local_response_normalization_backprop.js","sourceRoot":"","sources":["../../src/ops/local_response_normalization_backprop.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,MAAM,EAAC,MAAM,WAAW,CAAC;AACjC,OAAO,EAAC,OAAO,EAA8B,MAAM,iBAAiB,CAAC;AAKrE,OAAO,EAAC,EAAE,EAAC,MAAM,aAAa,CAAC;AAE/B,SAAS,mCAAmC,CACxC,CAAI,EAAE,CAAI,EAAE,EAAK,EAAE,WAAW,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG;IACrE,MAAM,MAAM,GAAkB,EAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC;IAEzC,MAAM,KAAK,GAAiB,EAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;IAE7D,OAAO,MAAM,CAAC,SAAS,CACnB,OAAO,EAAE,MAA8B,EAAE,KAA2B,CAAC,CAAC;AAC5E,CAAC;AAED,MAAM,CAAC,MAAM,kCAAkC,GAC3C,EAAE,CAAC,EAAC,mCAAmC,EAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LRNGrad, LRNGradAttrs, LRNGradInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nimport {op} from './operation';\n\nfunction localResponseNormalizationBackprop_<T extends Tensor4D>(\n    x: T, y: T, dy: T, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5): T {\n  const inputs: LRNGradInputs = {x, y, dy};\n\n  const attrs: LRNGradAttrs = {depthRadius, bias, alpha, beta};\n\n  return ENGINE.runKernel(\n      LRNGrad, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const localResponseNormalizationBackprop =\n    op({localResponseNormalizationBackprop_});\n"]}