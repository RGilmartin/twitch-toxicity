{"version":3,"file":"conv3d_transpose_test.js","sourceRoot":"","sources":["../../src/ops/conv3d_transpose_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose} from '../test_util';\n\ndescribeWithFlags('conv3dTranspose', ALL_ENVS, () => {\n  // Reference Python TensorFlow code\n  // ```python\n  // import numpy as np\n  // import tensorflow as tf\n  // tf.enable_eager_execution()\n  // x = np.array([2], dtype = np.float32).reshape(1, 1, 1, 1, 1)\n  // w = np.array([5, 4, 8, 7, 1, 2, 6, 3], dtype = np.float32).reshape(2, 2, 2,\n  //   1, 1)\n  // tf.nn.conv3d_transpose(x, w, output_shape=[1, 2, 2, 2, 1], padding='VALID')\n  // ```\n  it('input=2x2x2x1,d2=1,f=2,s=1,p=valid', async () => {\n    const origInputDepth = 1;\n    const origOutputDepth = 1;\n    const inputShape: [number, number, number, number] =\n        [1, 1, 1, origOutputDepth];\n    const fSize = 2;\n    const origPad = 'valid';\n    const origStride = 1;\n\n    const x = tf.tensor4d([2], inputShape);\n    const w = tf.tensor5d(\n        [5, 4, 8, 7, 1, 2, 6, 3],\n        [fSize, fSize, fSize, origInputDepth, origOutputDepth]);\n\n    const result = tf.conv3dTranspose(x, w, [2, 2, 2, 1], origStride, origPad);\n    const expected = [10, 8, 16, 14, 2, 4, 12, 6];\n\n    expect(result.shape).toEqual([2, 2, 2, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n\n  // Reference Python TensorFlow code\n  // ```python\n  // import numpy as np\n  // import tensorflow as tf\n  // tf.enable_eager_execution()\n  // x = np.array([2, 3], dtype = np.float32).reshape(2, 1, 1, 1, 1, 1)\n  // w = np.array([5, 4, 8, 7, 1, 2, 6, 3], dtype = np.float32).reshape(2,\n  //   2, 2, 1, 1)\n  // tf.nn.conv3d_transpose(x, w, output_shape=[2, 2, 2, 2, 1], padding='VALID')\n  // ```\n  it('input=2x2x2x1,d2=1,f=2,s=1,p=valid, batch=2', async () => {\n    const origInputDepth = 1;\n    const origOutputDepth = 1;\n    const inputShape: [number, number, number, number, number] =\n        [2, 1, 1, 1, origOutputDepth];\n    const fSize = 2;\n    const origPad = 'valid';\n    const origStride = 1;\n\n    const x = tf.tensor5d([2, 3], inputShape);\n    const w = tf.tensor5d(\n        [5, 4, 8, 7, 1, 2, 6, 3],\n        [fSize, fSize, fSize, origInputDepth, origOutputDepth]);\n\n    const result =\n        tf.conv3dTranspose(x, w, [2, 2, 2, 2, 1], origStride, origPad);\n    const expected = [10, 8, 16, 14, 2, 4, 12, 6, 15, 12, 24, 21, 3, 6, 18, 9];\n\n    expect(result.shape).toEqual([2, 2, 2, 2, 1]);\n    expectArraysClose(await result.data(), expected);\n  });\n});\n"]}