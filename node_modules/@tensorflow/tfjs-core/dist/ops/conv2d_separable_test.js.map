{"version":3,"file":"conv2d_separable_test.js","sourceRoot":"","sources":["../../src/ops/conv2d_separable_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose} from '../test_util';\n\ndescribeWithFlags('separableConv2d', ALL_ENVS, () => {\n  it('input=1x3x3x1,f=2,s=1,d=1,p=valid,chMul=1,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride = 1;\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [0.303873, 0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter =\n        tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.10702161, -0.21404321, 0.10316753, -0.20633507, 0.06704096, -0.13408193,\n      0.07788632, -0.15577264\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('input=1x3x3x1,f=2,s=1,d=1,p=valid,chMul=1,outDepth=2 in tensor',\n     async () => {\n       const fSize = 2;\n       const pad = 'valid';\n       const stride = 1;\n       const chMul = 1;\n       const inDepth = 1;\n       const outDepth = 2;\n\n       const x = tf.tensor4d(\n           [\n             0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n             0.0741907, 0.409265, 0.351377\n           ],\n           [1, 3, 3, inDepth]);\n       const depthwiseFilter = tf.tensor4d(\n           [0.303873, 0.229223, 0.144333, 0.803373],\n           [fSize, fSize, inDepth, chMul],\n       );\n       const pointwiseFilter =\n           tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n       const result =\n           x.separableConv2d(depthwiseFilter, pointwiseFilter, stride, pad);\n\n       expectArraysClose(await result.data(), [\n         0.10702161, -0.21404321, 0.10316753, -0.20633507, 0.06704096,\n         -0.13408193, 0.07788632, -0.15577264\n       ]);\n       expect(result.shape).toEqual([1, 2, 2, outDepth]);\n     });\n\n  it('input=1x3x3x1,f=2,s=1,d=1,p=valid,chMul=2,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride = 1;\n    const chMul = 2;\n    const inDepth = 1;\n    const outDepth = 3;\n\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [\n          0.303873, 0.229223, 0.144333, 0.803373, -0.303873, -0.229223,\n          -0.144333, -0.803373\n        ],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter = tf.tensor4d(\n        [0.1, -0.2, -0.1, 0.2, 0.15, 0.15], [1, 1, inDepth * chMul, outDepth]);\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.00305368, 0.0140969, 0.00980358, -0.10853045, -0.06339455, -0.0699412,\n      0.11010849, 0.0347524, 0.05214475, 0.10307151, 0.02221644, 0.04224815\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('input=1x3x3x1,f=2,s=1,d=1,p=valid,chMul=1,outDepth=2,3D input',\n     async () => {\n       const fSize = 2;\n       const pad = 'valid';\n       const stride = 1;\n       const chMul = 1;\n       const inDepth = 1;\n       const outDepth = 2;\n\n       const x = tf.tensor3d(\n           [\n             0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n             0.0741907, 0.409265, 0.351377\n           ],\n           [3, 3, inDepth]);\n       const depthwiseFilter = tf.tensor4d(\n           [0.303873, 0.229223, 0.144333, 0.803373],\n           [fSize, fSize, inDepth, chMul],\n       );\n       const pointwiseFilter =\n           tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n       const result =\n           tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n       expectArraysClose(await result.data(), [\n         0.10702161, -0.21404321, 0.10316753, -0.20633507, 0.06704096,\n         -0.13408193, 0.07788632, -0.15577264\n       ]);\n       expect(result.shape).toEqual([2, 2, outDepth]);\n     });\n\n  it('input=1x4x4x1,f=2,s=2,d=1,p=valid,chMul=1,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride: [number, number] = [2, 2];\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n\n    const x = tf.tensor4d(\n        [\n          0.675707, 0.758567, 0.413529, 0.963967, 0.217291, 0.101335, 0.804231,\n          0.329673, 0.924503, 0.728742, 0.180217, 0.210459, 0.133869, 0.650827,\n          0.047613, 0.554795\n        ],\n        [1, 4, 4, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [0.303873, 0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter =\n        tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.04919822, -0.09839644, 0.07275512, -0.14551024, 0.09901544, -0.19803089,\n      0.05555845, -0.11111691\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('input=2x4x4x1,f=2,s=2,d=1,p=valid,chMul=1,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride: [number, number] = [2, 2];\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n\n    const x = tf.tensor4d(\n        [\n          0.675707,  0.758567,  0.413529,  0.963967,  0.217291,  0.101335,\n          0.804231,  0.329673,  0.924503,  0.728742,  0.180217,  0.210459,\n          0.133869,  0.650827,  0.047613,  0.554795,  -0.675707, -0.758567,\n          -0.413529, -0.963967, -0.217291, -0.101335, -0.804231, -0.329673,\n          -0.924503, -0.728742, -0.180217, -0.210459, -0.133869, -0.650827,\n          -0.047613, -0.554795\n        ],\n        [2, 4, 4, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [0.303873, 0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter =\n        tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.04919822, -0.09839644, 0.07275512, -0.14551024, 0.09901544, -0.19803089,\n      0.05555845, -0.11111691, -0.04919822, 0.09839644, -0.07275512, 0.14551024,\n      -0.09901544, 0.19803089, -0.05555845, 0.11111691\n    ]);\n    expect(result.shape).toEqual([2, 2, 2, outDepth]);\n  });\n\n  it('input=1x4x4x2,f=2,s=2,d=1,p=valid,chMul=1,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride: [number, number] = [2, 2];\n    const chMul = 1;\n    const inDepth = 2;\n    const outDepth = 2;\n\n    const x = tf.tensor4d(\n        [\n          0.675707,  0.758567,  0.413529,  0.963967,  0.217291,  0.101335,\n          0.804231,  0.329673,  0.924503,  0.728742,  0.180217,  0.210459,\n          0.133869,  0.650827,  0.047613,  0.554795,  -0.675707, -0.758567,\n          -0.413529, -0.963967, -0.217291, -0.101335, -0.804231, -0.329673,\n          -0.924503, -0.728742, -0.180217, -0.210459, -0.133869, -0.650827,\n          -0.047613, -0.554795\n        ],\n        [1, 4, 4, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [\n          0.303873, 0.229223, 0.144333, 0.803373, 0.98976838, 0.56597068,\n          0.42654137, 0.66445535\n        ],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter = tf.tensor4d(\n        [0.1, -0.2, 0.05, -0.05], [1, 1, inDepth * chMul, outDepth]);\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.20072255, -0.32641545, 0.08474462, -0.11823604, -0.20072255, 0.32641545,\n      -0.08474462, 0.11823604\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('input=1x4x4x1,f=2,s=1,d=2,p=valid,chMul=1,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride = 1;\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n    const dilationRate = 2;\n\n    const x = tf.tensor4d(\n        [\n          0.675707, 0.758567, 0.413529, 0.963967, 0.217291, 0.101335, 0.804231,\n          0.329673, 0.924503, 0.728742, 0.180217, 0.210459, 0.133869, 0.650827,\n          0.047613, 0.554795\n        ],\n        [1, 4, 4, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [0.303873, 0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter =\n        tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n    const result = tf.separableConv2d(\n        x, depthwiseFilter, pointwiseFilter, stride, pad, dilationRate);\n\n    expectArraysClose(await result.data(), [\n      0.05783373, -0.11566745, 0.07257301, -0.14514601, 0.03079498, -0.06158997,\n      0.06460048, -0.12920095\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('input=1x4x4x1,f=2,s=1,d=1,p=same,chMul=1,outDepth=2', async () => {\n    const fSize = 2;\n    const pad = 'same';\n    const stride = 1;\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n\n    const x = tf.tensor4d(\n        [\n          0.675707, 0.758567, 0.413529, 0.963967, 0.217291, 0.101335, 0.804231,\n          0.329673, 0.924503, 0.728742, 0.180217, 0.210459, 0.133869, 0.650827,\n          0.047613, 0.554795\n        ],\n        [1, 4, 4, inDepth]);\n    const depthwiseFilter = tf.tensor4d(\n        [0.303873, 0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n    const pointwiseFilter =\n        tf.tensor4d([0.1, -0.2], [1, 1, inDepth * chMul, outDepth]);\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.04919822, -0.09839644, 0.09860218, -0.19720435, 0.07275512, -0.14551024,\n      0.03405062, -0.06810125, 0.08081452, -0.16162904, 0.04651042, -0.09302084,\n      0.05150411, -0.10300821, 0.01305549, -0.02611098, 0.09901544, -0.19803089,\n      0.03949417, -0.07898834, 0.05555845, -0.11111691, 0.0144028,  -0.02880561,\n      0.01898637, -0.03797274, 0.02086828, -0.04173655, 0.01416401, -0.02832802,\n      0.01685872, -0.03371745\n    ]);\n    expect(result.shape).toEqual([1, 4, 4, outDepth]);\n  });\n\n  it('TensorLike', async () => {\n    const pad = 'valid';\n    const stride = 1;\n    const outDepth = 2;\n\n    const x = [[\n      [[0.230664], [0.987388], [0.0685208]],\n      [[0.419224], [0.887861], [0.731641]],\n      [[0.0741907], [0.409265], [0.351377]]\n    ]];\n    const depthwiseFilter =\n        [[[[0.303873]], [[0.229223]]], [[[0.144333]], [[0.803373]]]];\n    const pointwiseFilter = [[[[0.1, -0.2]]]];\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.10702161, -0.21404321, 0.10316753, -0.20633507, 0.06704096, -0.13408193,\n      0.07788632, -0.15577264\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('TensorLike Chained', async () => {\n    const pad = 'valid';\n    const stride = 1;\n    const outDepth = 2;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, inDepth]);\n    const depthwiseFilter =\n        [[[[0.303873]], [[0.229223]]], [[[0.144333]], [[0.803373]]]];\n    const pointwiseFilter = [[[[0.1, -0.2]]]];\n\n    const result =\n        x.separableConv2d(depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.10702161, -0.21404321, 0.10316753, -0.20633507, 0.06704096, -0.13408193,\n      0.07788632, -0.15577264\n    ]);\n    expect(result.shape).toEqual([1, 2, 2, outDepth]);\n  });\n\n  it('Incorrect input rank raises error', () => {\n    // tslint:disable-next-line:no-any\n    const x = tf.zeros([4, 4]) as any;\n    const depthwiseFilter: tf.Tensor4D = tf.zeros([2, 2, 1, 3]);\n    const pointwiseFilter: tf.Tensor4D = tf.zeros([1, 1, 2, 4]);\n    expect(\n        () =>\n            tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, 1, 'valid'))\n        .toThrowError(/rank 4/);\n  });\n\n  it('Incorrect depthwise filter rank raises error', () => {\n    const x: tf.Tensor4D = tf.zeros([1, 4, 4, 1]);\n    // tslint:disable-next-line:no-any\n    const depthwiseFilter = tf.zeros([2, 2, 1]) as any;\n    const pointwiseFilter: tf.Tensor4D = tf.zeros([1, 1, 2, 4]);\n    expect(\n        () =>\n            tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, 1, 'valid'))\n        .toThrowError(/rank 4/);\n  });\n\n  it('Incorrect depthwise filter rank raises error', () => {\n    const x: tf.Tensor4D = tf.zeros([1, 4, 4, 1]);\n    const depthwiseFilter: tf.Tensor4D = tf.zeros([2, 2, 1, 3]);\n    // tslint:disable-next-line:no-any\n    const pointwiseFilter = tf.zeros([1, 1, 2]) as any;\n    expect(\n        () =>\n            tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, 1, 'valid'))\n        .toThrowError(/rank 4/);\n  });\n\n  it('Incorrect point filter 1st dimension raises error', () => {\n    const x: tf.Tensor4D = tf.zeros([1, 4, 4, 1]);\n    const depthwiseFilter: tf.Tensor4D = tf.zeros([2, 2, 1, 3]);\n    const pointwiseFilter: tf.Tensor4D = tf.zeros([2, 1, 3, 6]);\n    expect(\n        () =>\n            tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, 1, 'valid'))\n        .toThrowError(/must be 1, but got 2/);\n  });\n\n  it('Incorrect point filter 2nd dimension raises error', () => {\n    const x: tf.Tensor4D = tf.zeros([1, 4, 4, 1]);\n    const depthwiseFilter: tf.Tensor4D = tf.zeros([2, 2, 1, 3]);\n    const pointwiseFilter: tf.Tensor4D = tf.zeros([1, 5, 3, 6]);\n    expect(\n        () =>\n            tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, 1, 'valid'))\n        .toThrowError(/must be 1, but got 5/);\n  });\n\n  it('Incorrect pointwise filter 3rd dimension raises error', () => {\n    const x: tf.Tensor4D = tf.zeros([1, 4, 4, 1]);\n    const depthwiseFilter: tf.Tensor4D = tf.zeros([2, 2, 1, 3]);\n    const pointwiseFilter: tf.Tensor4D = tf.zeros([1, 1, 4, 6]);\n    expect(\n        () =>\n            tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, 1, 'valid'))\n        .toThrowError(/must be 3, but got 4/);\n  });\n\n  it('throws when passed x as a non-tensor', () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride = 1;\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n\n    const depthwiseFilter: tf.Tensor4D =\n        tf.zeros([fSize, fSize, inDepth, chMul]);\n    const pointwiseFilter: tf.Tensor4D =\n        tf.zeros([1, 1, inDepth * chMul, outDepth]);\n\n    const e = /Argument 'x' passed to 'separableConv2d' must be a Tensor/;\n    expect(\n        () => tf.separableConv2d(\n            {} as tf.Tensor3D, depthwiseFilter, pointwiseFilter, stride, pad))\n        .toThrowError(e);\n  });\n\n  it('throws when passed depthwiseFilter as a non-tensor', () => {\n    const pad = 'valid';\n    const stride = 1;\n    const chMul = 1;\n    const inDepth = 1;\n    const outDepth = 2;\n\n    const x: tf.Tensor4D = tf.zeros([1, 3, 3, inDepth]);\n    const pointwiseFilter: tf.Tensor4D =\n        tf.zeros([1, 1, inDepth * chMul, outDepth]);\n\n    const e = new RegExp(\n        'Argument \\'depthwiseFilter\\' passed to \\'separableConv2d\\'' +\n        ' must be a Tensor');\n    expect(\n        () => tf.separableConv2d(\n            x, {} as tf.Tensor4D, pointwiseFilter, stride, pad))\n        .toThrowError(e);\n  });\n\n  it('throws when passed pointwiseFilter as a non-tensor', () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const stride = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x: tf.Tensor4D = tf.zeros([1, 3, 3, inDepth]);\n    const depthwiseFilter: tf.Tensor4D =\n        tf.zeros([fSize, fSize, inDepth, chMul]);\n\n    const e = new RegExp(\n        'Argument \\'pointwiseFilter\\' passed to \\'separableConv2d\\'' +\n        ' must be a Tensor');\n    expect(\n        () => tf.separableConv2d(\n            x, depthwiseFilter, {} as tf.Tensor4D, stride, pad))\n        .toThrowError(e);\n  });\n\n  it('accepts a tensor-like object', async () => {\n    const pad = 'valid';\n    const stride = 1;\n    const outDepth = 2;\n\n    // 3x3x1\n    const x = [\n      [[0.230664], [0.987388], [0.0685208]],\n      [[0.419224], [0.887861], [0.731641]],\n      [[0.0741907], [0.409265], [0.351377]]\n    ];\n    // 2x2x1x1\n    const depthwiseFilter =\n        [[[[0.303873]], [[0.229223]]], [[[0.144333]], [[0.803373]]]];\n    // 1x1x1x2\n    const pointwiseFilter = [[[[0.1, -0.2]]]];\n\n    const result =\n        tf.separableConv2d(x, depthwiseFilter, pointwiseFilter, stride, pad);\n\n    expectArraysClose(await result.data(), [\n      0.10702161, -0.21404321, 0.10316753, -0.20633507, 0.06704096, -0.13408193,\n      0.07788632, -0.15577264\n    ]);\n    expect(result.shape).toEqual([2, 2, outDepth]);\n  });\n});\n"]}