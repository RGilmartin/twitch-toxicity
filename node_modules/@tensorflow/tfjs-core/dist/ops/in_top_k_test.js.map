{"version":3,"file":"in_top_k_test.js","sourceRoot":"","sources":["../../src/ops/in_top_k_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {expectArraysClose} from '../test_util';\n\nimport {tensor1d, tensor2d, tensor3d} from './ops';\n\ndescribeWithFlags('inTopKAsync', ALL_ENVS, async () => {\n  it('predictions 2d array, targets 1d array, with default k', async () => {\n    const predictions = tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n    const targets = tensor1d([2, 0]);\n    const precision = await tf.inTopKAsync(predictions, targets);\n    expect(precision.shape).toEqual([2]);\n    expect(precision.dtype).toBe('bool');\n    expectArraysClose(await precision.data(), [1, 0]);\n  });\n\n  it('predictions 2d array, targets 1d array, with k=2', async () => {\n    const predictions = tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n    const targets = tensor1d([2, 0]);\n    const k = 2;\n    const precision = await tf.inTopKAsync(predictions, targets, k);\n    expect(precision.shape).toEqual([2]);\n    expect(precision.dtype).toBe('bool');\n    expectArraysClose(await precision.data(), [1, 1]);\n  });\n\n  it('predictions 3d array, targets 2d array, with default k', async () => {\n    const predictions =\n        tensor3d([[[1, 5, 2], [4, 3, 6]], [[3, 2, 1], [1, 2, 3]]]);\n    const targets = tensor2d([[1, 2], [0, 1]]);\n    const precision = await tf.inTopKAsync(predictions, targets);\n    expect(precision.shape).toEqual([2, 2]);\n    expect(precision.dtype).toBe('bool');\n    expectArraysClose(await precision.data(), [1, 1, 1, 0]);\n  });\n\n  it('predictions 3d array, targets 2d array, with k=2', async () => {\n    const predictions =\n        tensor3d([[[1, 5, 2], [4, 3, 6]], [[3, 2, 1], [1, 2, 3]]]);\n    const targets = tensor2d([[1, 2], [0, 1]]);\n    const k = 2;\n    const precision = await tf.inTopKAsync(predictions, targets, k);\n    expect(precision.shape).toEqual([2, 2]);\n    expect(precision.dtype).toBe('bool');\n    expectArraysClose(await precision.data(), [1, 1, 1, 1]);\n  });\n\n  it('lower-index element count first, with default k', async () => {\n    const predictions = tensor2d([[1, 2, 2, 1]]);\n\n    const targets1 = tensor1d([1]);\n    const precision1 = await tf.inTopKAsync(predictions, targets1);\n    expect(precision1.shape).toEqual([1]);\n    expect(precision1.dtype).toBe('bool');\n    expectArraysClose(await precision1.data(), [1]);\n\n    const targets2 = tensor1d([2]);\n    const precision2 = await tf.inTopKAsync(predictions, targets2);\n    expect(precision2.shape).toEqual([1]);\n    expect(precision2.dtype).toBe('bool');\n    expectArraysClose(await precision2.data(), [0]);\n  });\n\n  it('accept tensor-like object, with default k', async () => {\n    const predictions = [[20, 10, 40, 30], [30, 50, -20, 10]];\n    const targets = [2, 0];\n    const precision = await tf.inTopKAsync(predictions, targets);\n    expect(precision.shape).toEqual([2]);\n    expect(precision.dtype).toBe('bool');\n    expectArraysClose(await precision.data(), [1, 0]);\n  });\n\n  it('doesnt leak tensors with tensor-like objects', async () => {\n    const numTensors = tf.memory().numTensors;\n\n    const predictions = [[20, 10, 40, 30], [30, 50, -20, 10]];\n    const targets = [2, 0];\n    const precision = await tf.inTopKAsync(predictions, targets);\n    precision.dispose();\n\n    expect(tf.memory().numTensors).toBe(numTensors);\n  });\n\n  it('throws when predictions_rank <2', async () => {\n    const predictions = tensor1d([20, 10, 40, 30]);\n    const targets = [2];\n\n    // expect(...).toThrowError() does not support async functions.\n    // See https://github.com/jasmine/jasmine/issues/1410\n    try {\n      await tf.inTopKAsync(predictions, targets);\n      throw new Error('The line above should have thrown an error');\n    } catch (ex) {\n      expect(ex.message)\n          .toEqual(\n              'inTopK() expects the predictions to ' +\n              'be of rank 2 or higher, but got 1');\n    }\n  });\n\n  it('throws when prediction.rank != targets.rank + 1', async () => {\n    const predictions = tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n    const targets = tensor2d([[0], [0]]);\n\n    // expect(...).toThrowError() does not support async functions.\n    // See https://github.com/jasmine/jasmine/issues/1410\n    try {\n      await tf.inTopKAsync(predictions, targets);\n      throw new Error('The line above should have thrown an error');\n    } catch (ex) {\n      expect(ex.message)\n          .toEqual(\n              'predictions rank should be 1 larger than targets rank,' +\n              ' but got predictions rank 2 and targets rank 2');\n    }\n  });\n\n  it('throws when k > size of last dimension of predictions', async () => {\n    const predictions = tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n    const targets = tensor1d([2, 0]);\n    const k = 5;\n\n    // expect(...).toThrowError() does not support async functions.\n    // See https://github.com/jasmine/jasmine/issues/1410\n    try {\n      await tf.inTopKAsync(predictions, targets, k);\n      throw new Error('The line above should have thrown an error');\n    } catch (ex) {\n      expect(ex.message)\n          .toEqual(\n              '\\'k\\' passed to inTopK() must be > 0 && <= the predictions ' +\n              'last dimension (4), but got 5');\n    }\n  });\n});\n"]}