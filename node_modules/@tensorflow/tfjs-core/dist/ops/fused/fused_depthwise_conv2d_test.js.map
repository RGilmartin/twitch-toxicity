{"version":3,"file":"fused_depthwise_conv2d_test.js","sourceRoot":"","sources":["../../../src/ops/fused/fused_depthwise_conv2d_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAClC,OAAO,EAAC,QAAQ,EAAE,iBAAiB,EAAC,MAAM,oBAAoB,CAAC;AAC/D,OAAO,EAAC,iBAAiB,EAAC,MAAM,iBAAiB,CAAC;AAElD,iBAAiB,CAAC,uBAAuB,EAAE,QAAQ,EAAE,GAAG,EAAE;IACxD,EAAE,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACrB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,GAAG,OAAO,CAAC;QACpB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,OAAO,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YAC3D,SAAS,EAAE,QAAQ,EAAE,QAAQ;SAC9B,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAC1C,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CACjC,CAAC;QAEF,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAC,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;QACvD,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,GAAG,OAAO,CAAC;QACpB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,OAAO,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YAC3D,SAAS,EAAE,QAAQ,EAAE,QAAQ;SAC9B,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAC1C,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CACjC,CAAC;QAEF,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CACnC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,EAAC,CAAC,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QAChD,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,MAAM,CAAC;QACnB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SACrD,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1E,MAAM,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEvC,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;QAC5E,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG;YACf,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YACtD,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAG,EAAE,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;YACvD,CAAC,EAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAC,EAAG,CAAC,EAAG,EAAE,EAAE,EAAE;SACvD,CAAC;QACF,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,GAAG,OAAO,CAAC;QACpB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,OAAO,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YAC3D,SAAS,EAAE,QAAQ,EAAE,QAAQ;SAC9B,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAC1C,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CACjC,CAAC;QAEF,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CACnC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAC,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACtD,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACrB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,GAAG,OAAO,CAAC;QACpB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,OAAO,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG,QAAQ,EAAE,OAAO;YACnE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;SACvC,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QACxB,MAAM,KAAK,GAAG,EAAE,CAAC,QAAQ,CACrB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;YAChE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;SAChC,EACD,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CACjC,CAAC;QAEF,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC;YACtC,CAAC;YACD,MAAM,EAAE,CAAC;YACT,OAAO;YACP,GAAG;YACH,UAAU,EAAE,OAAO;YACnB,sBAAsB,EAAE,KAAK;SAC9B,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG;YACf,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM;YAClE,CAAC,MAAM,EAAE,CAAC,OAAO;SAClB,CAAC;QACF,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;QACzB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,GAAG,OAAO,CAAC;QACpB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,OAAO,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG,QAAQ,EAAE,OAAO;YACnE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;SACvC,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QACxB,MAAM,KAAK,GAAG,GAAG,CAAC;QAClB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;YAChE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;SAChC,EACD,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CACjC,CAAC;QAEF,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC;YACtC,CAAC;YACD,MAAM,EAAE,CAAC;YACT,OAAO;YACP,GAAG;YACH,UAAU,EAAE,WAAW;YACvB,cAAc,EAAE,KAAK;SACtB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG;YACf,CAAC,kBAAkB,EAAE,CAAC,kBAAkB,EAAE,CAAC,kBAAkB;YAC7D,CAAC,kBAAkB,EAAE,CAAC,kBAAkB,EAAE,CAAC,kBAAkB;YAC7D,CAAC,kBAAkB,EAAE,CAAC,iBAAiB,EAAE,CAAC,kBAAkB;SAC7D,CAAC;QACF,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,GAAG,GAAG,OAAO,CAAC;QACpB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,KAAK,GAAG,CAAC,CAAC;QAChB,MAAM,OAAO,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG,QAAQ,EAAE,OAAO;YACnE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;YACpE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;SACvC,EACD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB;YACE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;YAChE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ;SAChC,EACD,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CACjC,CAAC;QAEF,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,CACnC,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAC,CAAC,CAAC;QAEzD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG;YACf,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;YACtE,UAAU,EAAE,SAAS,EAAE,UAAU;SAClC,CAAC;QACF,iBAAiB,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,WAAW,GAAG,CAAC,CAAC;QACtB,MAAM,UAAU,GAAqC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;QAC3E,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,CAAC,CAAC;QAEd,MAAM,WAAW,GACb,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC;QAE1D,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACxE,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE/D,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAClB,CAAC,CAAc,EAAE,MAAmB,EAAE,EAAE,CACpC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,EAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAE7C,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAClC,iBAAiB,CACb,MAAM,EAAE,CAAC,IAAI,EAAE,EACf,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE1E,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC3C,iBAAiB,CAAC,MAAM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,WAAW,GAAG,CAAC,CAAC;QACtB,MAAM,UAAU,GAAqC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;QAC3E,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,CAAC,CAAC;QAEd,MAAM,WAAW,GACb,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEnC,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACxE,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE/D,MAAM,UAAU,GAAG,EAAE,CAAC,KAAK,CACvB,CAAC,CAAc,EAAE,CAAc,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC;YAC9D,CAAC;YACD,MAAM,EAAE,CAAC;YACT,OAAO;YACP,GAAG;YACH,UAAU,EAAE,MAAM;YAClB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC;SACR,CAAC,CAAC,CAAC;QACR,MAAM,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,CAAC,GACrC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAc,EAAE,MAAmB,EAAE,IAAI,EAAE,EAAE;YACnE,MAAM,IAAI,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;YACzD,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAE1D,iBAAiB,CAAC,MAAM,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;QAC3D,iBAAiB,CAAC,MAAM,YAAY,CAAC,KAAK,EAAE,EAAE,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;QACrE,iBAAiB,CAAC,MAAM,UAAU,CAAC,KAAK,EAAE,EAAE,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EACnE,KAAK,IAAI,EAAE;QACT,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,WAAW,GAAG,CAAC,CAAC;QACtB,MAAM,UAAU,GACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;QAC1B,MAAM,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,CAAC,CAAC;QAEd,MAAM,WAAW,GACb,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEnC,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACxE,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE/D,MAAM,UAAU,GAAG,EAAE,CAAC,KAAK,CACvB,CAAC,CAAc,EAAE,CAAc,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC;YAC9D,CAAC;YACD,MAAM,EAAE,CAAC;YACT,OAAO;YACP,GAAG;YACH,UAAU,EAAE,MAAM;YAClB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC;YACP,UAAU,EAAE,MAAM;SACnB,CAAC,CAAC,CAAC;QACR,MAAM,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,CAAC,GACrC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAc,EAAE,MAAmB,EAAE,IAAI,EAAE,EAAE;YACnE,MAAM,IAAI,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;YACzD,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAE1D,iBAAiB,CAAC,MAAM,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;QAC3D,iBAAiB,CAAC,MAAM,YAAY,CAAC,KAAK,EAAE,EAAE,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;QACrE,iBAAiB,CAAC,MAAM,UAAU,CAAC,KAAK,EAAE,EAAE,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../../index';\nimport {ALL_ENVS, describeWithFlags} from '../../jasmine_util';\nimport {expectArraysClose} from '../../test_util';\n\ndescribeWithFlags('fused depthwiseConv2D', ALL_ENVS, () => {\n  it('basic', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const strides = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, inDepth]);\n    const w = tf.tensor4d(\n        [-0.303873, -0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n\n    const result = tf.fused.depthwiseConv2d({x, filter: w, strides, pad});\n    expect(result.shape).toEqual([1, 2, 2, 1]);\n    const expected = [0.47737, 0.40018, 0.00859, -0.09615];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with relu', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const strides = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, inDepth]);\n    const w = tf.tensor4d(\n        [-0.303873, -0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n\n    const result = tf.fused.depthwiseConv2d(\n        {x, filter: w, strides, pad, activation: 'relu'});\n    expect(result.shape).toEqual([1, 2, 2, 1]);\n    const expected = [0.47737, 0.40018, 0.00859, 0];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with channel-wise broadcasted bias and relu', async () => {\n    const strides = 1;\n    const pad = 'same';\n    const x = tf.tensor4d(\n        [\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 1, 2, 3, 4, 5, 6, 7, 8,\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 1, 2, 3, 4, 5, 6, 7, 8\n        ],\n        [1, 3, 3, 4]);\n    const w = tf.tensor4d(\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2, 2, 4, 1]);\n    const bias = tf.tensor1d([0, 1, 2, 3]);\n\n    const result = tf.fused.depthwiseConv2d({x, filter: w, strides, pad, bias});\n    expect(result.shape).toEqual([1, 3, 3, 4]);\n    const expected = [\n      124, 167, 92,  142, 112, 117, 76,  124, 16, 28, 44, 64,\n      88,  134, 134, 88,  76,  120, 154, 205, 40, 58, 80, 106,\n      4,   18,  36,  31,  20,  33,  50,  71,  0,  7,  16, 27\n    ];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with broadcasted bias and relu', async () => {\n    const fSize = 2;\n    const pad = 'valid';\n    const strides = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.230664, 0.987388, 0.0685208, 0.419224, 0.887861, 0.731641,\n          0.0741907, 0.409265, 0.351377\n        ],\n        [1, 3, 3, inDepth]);\n    const w = tf.tensor4d(\n        [-0.303873, -0.229223, 0.144333, 0.803373],\n        [fSize, fSize, inDepth, chMul],\n    );\n\n    const result = tf.fused.depthwiseConv2d(\n        {x, filter: w, strides, pad, bias: tf.scalar(1), activation: 'relu'});\n    expect(result.shape).toEqual([1, 2, 2, 1]);\n    const expected = [1.47737, 1.40018, 1.00859, 0.90385];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('prelu', async () => {\n    const fSize = 3;\n    const pad = 'valid';\n    const strides = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.149194, 0.089009, 0.654891, 0.083324, 0.537043, 0.644331, 0.563037,\n          0.211859, 0.633501, 0.186427, 0.777034, 0.50001,  0.607341, 0.95303,\n          0.696479, 0.050387, 0.62045,  0.728049, 0.028043, 0.437009, 0.712881,\n          0.741935, 0.974474, 0.621102, 0.171411\n        ],\n        [1, 5, 5, inDepth]);\n    const alpha = tf.tensor4d(\n        [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [1, 3, 3, 1]);\n    const w = tf.tensor4d(\n        [\n          -0.125386, -0.975199, -0.640437, -0.281895, -0.990968, -0.347208,\n          -0.889702, -0.180695, -0.691992\n        ],\n        [fSize, fSize, inDepth, chMul],\n    );\n\n    const result = tf.fused.depthwiseConv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      activation: 'prelu',\n      preluActivationWeights: alpha\n    });\n    expect(result.shape).toEqual([1, 3, 3, 1]);\n    const expected = [\n      -0.25400, -0.50118, -0.73622, -0.94068, -1.2298, -1.84585, -2.3089,\n      -2.7499, -2.64077\n    ];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('leakyrelu', async () => {\n    const fSize = 3;\n    const pad = 'valid';\n    const strides = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.149194, 0.089009, 0.654891, 0.083324, 0.537043, 0.644331, 0.563037,\n          0.211859, 0.633501, 0.186427, 0.777034, 0.50001,  0.607341, 0.95303,\n          0.696479, 0.050387, 0.62045,  0.728049, 0.028043, 0.437009, 0.712881,\n          0.741935, 0.974474, 0.621102, 0.171411\n        ],\n        [1, 5, 5, inDepth]);\n    const alpha = 0.3;\n    const w = tf.tensor4d(\n        [\n          -0.125386, -0.975199, -0.640437, -0.281895, -0.990968, -0.347208,\n          -0.889702, -0.180695, -0.691992\n        ],\n        [fSize, fSize, inDepth, chMul],\n    );\n\n    const result = tf.fused.depthwiseConv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      activation: 'leakyrelu',\n      leakyreluAlpha: alpha\n    });\n\n    expect(result.shape).toEqual([1, 3, 3, 1]);\n    const expected = [\n      -0.7620067596435547, -0.7517655491828918, -0.7362186312675476,\n      -0.7055101990699768, -0.7378802299499512, -0.9229262471199036,\n      -0.9895440340042114, -1.031226396560669, -0.8802568912506104\n    ];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('sigmoid', async () => {\n    const fSize = 3;\n    const pad = 'valid';\n    const strides = 1;\n    const chMul = 1;\n    const inDepth = 1;\n\n    const x = tf.tensor4d(\n        [\n          0.149194, 0.089009, 0.654891, 0.083324, 0.537043, 0.644331, 0.563037,\n          0.211859, 0.633501, 0.186427, 0.777034, 0.50001,  0.607341, 0.95303,\n          0.696479, 0.050387, 0.62045,  0.728049, 0.028043, 0.437009, 0.712881,\n          0.741935, 0.974474, 0.621102, 0.171411\n        ],\n        [1, 5, 5, inDepth]);\n    const w = tf.tensor4d(\n        [\n          -0.125386, -0.975199, -0.640437, -0.281895, -0.990968, -0.347208,\n          -0.889702, -0.180695, -0.691992\n        ],\n        [fSize, fSize, inDepth, chMul],\n    );\n\n    const result = tf.fused.depthwiseConv2d(\n        {x, filter: w, strides, pad, activation: 'sigmoid'});\n\n    expect(result.shape).toEqual([1, 3, 3, 1]);\n    const expected = [\n      0.07309964, 0.07544667, 0.07914197, 0.08693069, 0.07873929, 0.04409045,\n      0.03562334, 0.0311462, 0.05048907\n    ];\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const strides = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor4D) =>\n            tf.fused.depthwiseConv2d({x, filter, strides, pad}));\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(\n        await dx.data(),\n        [-3, 2, 1, -8, 1.5, 0.5, -4, 1, 0, -3, 2, 1, -8, 1.5, 0.5, -4, 1, 0]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [26, 38, 62, 74]);\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0 with bias', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const strides = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n    const bias = tf.ones([2, 2, 2, 1]);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const fusedGrads = tf.grads(\n        (x: tf.Tensor4D, w: tf.Tensor4D, b) => tf.fused.depthwiseConv2d({\n          x,\n          filter: w,\n          strides,\n          pad,\n          dataFormat: 'NHWC',\n          dilations: [1, 1],\n          bias: b\n        }));\n    const [dxFused, dfilterFused, dbiasFused] =\n        fusedGrads([x, filter, bias], dy);\n\n    const grads = tf.grads((x: tf.Tensor4D, filter: tf.Tensor4D, bias) => {\n      const conv = tf.depthwiseConv2d(x, filter, strides, pad);\n      const sum = tf.add(conv, bias);\n      return sum;\n    });\n    const [dx, dfilter, dbias] = grads([x, filter, bias], dy);\n\n    expectArraysClose(await dxFused.array(), await dx.array());\n    expectArraysClose(await dfilterFused.array(), await dfilter.array());\n    expectArraysClose(await dbiasFused.array(), await dbias.array());\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0 with bias and activation',\n     async () => {\n       const inputDepth = 1;\n       const outputDepth = 1;\n       const inputShape: [number, number, number, number] =\n           [2, 3, 3, inputDepth];\n       const filterSize = 2;\n       const strides = 1;\n       const pad = 0;\n\n       const filterShape: [number, number, number, number] =\n           [filterSize, filterSize, inputDepth, outputDepth];\n       const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n       const bias = tf.ones([2, 2, 2, 1]);\n\n       const x = tf.tensor4d(\n           [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n       const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n       const fusedGrads = tf.grads(\n           (x: tf.Tensor4D, w: tf.Tensor4D, b) => tf.fused.depthwiseConv2d({\n             x,\n             filter: w,\n             strides,\n             pad,\n             dataFormat: 'NHWC',\n             dilations: [1, 1],\n             bias: b,\n             activation: 'relu'\n           }));\n       const [dxFused, dfilterFused, dbiasFused] =\n           fusedGrads([x, filter, bias], dy);\n\n       const grads = tf.grads((x: tf.Tensor4D, filter: tf.Tensor4D, bias) => {\n         const conv = tf.depthwiseConv2d(x, filter, strides, pad);\n         const sum = tf.add(conv, bias);\n         return tf.relu(sum);\n       });\n       const [dx, dfilter, dbias] = grads([x, filter, bias], dy);\n\n       expectArraysClose(await dxFused.array(), await dx.array());\n       expectArraysClose(await dfilterFused.array(), await dfilter.array());\n       expectArraysClose(await dbiasFused.array(), await dbias.array());\n     });\n});\n"]}