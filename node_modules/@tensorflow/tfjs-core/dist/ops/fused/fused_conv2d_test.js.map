{"version":3,"file":"fused_conv2d_test.js","sourceRoot":"","sources":["../../../src/ops/fused/fused_conv2d_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../../index';\nimport {ALL_ENVS, describeWithFlags} from '../../jasmine_util';\nimport {expectArraysClose} from '../../test_util';\n\nfunction generateCaseInputs(totalSizeTensor: number, totalSizeFilter: number) {\n  const inp = new Array(totalSizeTensor);\n  const filt = new Array(totalSizeFilter);\n\n  for (let i = 0; i < totalSizeTensor; i++) {\n    inp[i] = i * 0.001 - totalSizeTensor * 0.001 / 2;\n  }\n  for (let i = 0; i < totalSizeFilter; i++) {\n    const sign = i % 2 === 0 ? -1 : 1;\n    filt[i] = i * 0.001 * sign;\n  }\n\n  return {input: inp, filter: filt};\n}\n\ndescribeWithFlags('fused conv2d', ALL_ENVS, () => {\n  it('basic', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({x, filter: w, strides: stride, pad});\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected =\n        [-5, 2, -11, 5, -17, 8, -23, 11, -29, 14, -35, 17, -41, 20, -47, 23];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with relu', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'relu'\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected = [0, 2, 0, 5, 0, 8, 0, 11, 0, 14, 0, 17, 0, 20, 0, 23];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('relu with stride 2 x=[1,8,8,16] f=[3,3,16,1] s=[2,2] d=1 p=same',\n     async () => {\n       const inputDepth = 16;\n       const xSize = 8;\n       const inputShape: [number, number, number, number] =\n           [1, xSize, xSize, inputDepth];\n       const outputDepth = 1;\n       const fSize = 3;\n       const pad = 'same';\n       const stride: [number, number] = [2, 2];\n\n       // TODO(annxingyuan): Make this test work with large inputs\n       // https://github.com/tensorflow/tfjs/issues/3143\n       const inputData = [];\n       for (let i = 0; i < xSize * xSize * inputDepth; i++) {\n         inputData.push(i % 5);\n       }\n\n       const wData = [];\n       for (let i = 0; i < fSize * fSize * inputDepth * outputDepth; i++) {\n         wData.push(i % 5);\n       }\n\n       const x = tf.tensor4d(inputData, inputShape);\n       const w = tf.tensor4d(wData, [fSize, fSize, inputDepth, outputDepth]);\n\n       const result = tf.fused.conv2d({\n         x,\n         filter: w,\n         strides: stride,\n         pad,\n         dataFormat: 'NHWC',\n         dilations: [1, 1],\n         activation: 'relu'\n       });\n       expect(result.shape).toEqual([1, 4, 4, 1]);\n       expectArraysClose(await result.data(), new Float32Array([\n                           854, 431, 568, 382, 580, 427, 854, 288, 431, 568,\n                           580, 289, 285, 570, 285, 258\n                         ]));\n     });\n\n  it('relu bias stride 2 x=[1,8,8,16] f=[3,3,16,1] s=[2,2] d=8 p=same',\n     async () => {\n       const inputDepth = 16;\n       const xSize = 8;\n       const inputShape: [number, number, number, number] =\n           [1, xSize, xSize, inputDepth];\n       const outputDepth = 8;\n       const fSize = 3;\n       const pad = 'same';\n       const stride: [number, number] = [2, 2];\n\n       const inputs = generateCaseInputs(\n           1 * xSize * xSize * inputDepth,\n           fSize * fSize * inputDepth * outputDepth);\n       const x = tf.tensor4d(inputs.input, inputShape);\n       const w =\n           tf.tensor4d(inputs.filter, [fSize, fSize, inputDepth, outputDepth]);\n       const bias = tf.tensor1d([1, 4, 2, 3, 9, 6, 5, 8]);\n       const result = tf.fused.conv2d({\n         x,\n         filter: w,\n         strides: stride,\n         pad,\n         dataFormat: 'NHWC',\n         dilations: [1, 1],\n         activation: 'relu',\n         bias\n       });\n       expect(result.shape).toEqual([1, 4, 4, 8]);\n       expectArraysClose(await result.data(), new Float32Array([\n                           25.75398063659668,\n                           0,\n                           26.857805252075195,\n                           0,\n                           33.961631774902344,\n                           0,\n                           30.065458297729492,\n                           0,\n                           23.118206024169922,\n                           0,\n                           24.212820053100586,\n                           0,\n                           31.307422637939453,\n                           0,\n                           27.402034759521484,\n                           0,\n                           20.482431411743164,\n                           0,\n                           21.567821502685547,\n                           0,\n                           28.653217315673828,\n                           0,\n                           24.73861312866211,\n                           0,\n                           11.078080177307129,\n                           0,\n                           12.130399703979492,\n                           0,\n                           19.182720184326172,\n                           0,\n                           15.235037803649902,\n                           0,\n                           4.6677775382995605,\n                           0.31717729568481445,\n                           5.697869777679443,\n                           0,\n                           12.727968215942383,\n                           2.2569849491119385,\n                           8.758066177368164,\n                           4.226885795593262,\n                           2.0319995880126953,\n                           2.9575586318969727,\n                           3.052880048751831,\n                           1.9366796016693115,\n                           10.073760032653809,\n                           4.915799617767334,\n                           6.094639778137207,\n                           6.89492130279541,\n                           0,\n                           5.5979437828063965,\n                           0.4078875780105591,\n                           4.586280822753906,\n                           7.419551849365234,\n                           7.5746169090271,\n                           3.43121600151062,\n                           9.562952041625977,\n                           0,\n                           6.404943943023682,\n                           0,\n                           5.401776313781738,\n                           6.5998077392578125,\n                           8.398608207702637,\n                           2.602976083755493,\n                           10.395440101623535,\n                           0,\n                           21.440250396728516,\n                           0,\n                           20.483882904052734,\n                           0,\n                           23.527509689331055,\n                           0,\n                           25.571144104003906,\n                           0,\n                           24.080629348754883,\n                           0,\n                           23.133480072021484,\n                           0,\n                           26.186328887939453,\n                           0,\n                           28.239177703857422,\n                           0,\n                           26.721012115478516,\n                           0,\n                           25.783079147338867,\n                           0,\n                           28.84514808654785,\n                           0,\n                           30.907209396362305,\n                           0,\n                           18.914127349853516,\n                           0,\n                           17.960111618041992,\n                           0,\n                           21.006093978881836,\n                           0,\n                           23.052082061767578,\n                           0,\n                           17.89089584350586,\n                           0,\n                           16.95684814453125,\n                           0,\n                           20.022798538208008,\n                           0,\n                           22.088754653930664,\n                           0,\n                           19.06132698059082,\n                           0,\n                           18.133424758911133,\n                           0,\n                           21.205520629882812,\n                           0,\n                           23.27761459350586,\n                           0,\n                           20.23175811767578,\n                           0,\n                           19.309999465942383,\n                           0,\n                           22.388240814208984,\n                           0,\n                           24.46647834777832,\n                           0,\n                           13.584352493286133,\n                           0,\n                           12.6395845413208,\n                           0,\n                           15.694815635681152,\n                           0,\n                           17.750045776367188\n                         ]));\n     });\n\n  it('prelu bias stride 2 x=[1,8,8,16] f=[3,3,16,1] s=[2,2] d=8 p=same',\n     async () => {\n       const inputDepth = 16;\n       const xSize = 8;\n       const inputShape: [number, number, number, number] =\n           [1, xSize, xSize, inputDepth];\n       const outputDepth = 8;\n       const fSize = 3;\n       const pad = 'same';\n       const stride: [number, number] = [2, 2];\n\n       const inputs = generateCaseInputs(\n           1 * xSize * xSize * inputDepth,\n           fSize * fSize * inputDepth * outputDepth);\n       const x = tf.tensor4d(inputs.input, inputShape);\n       const w =\n           tf.tensor4d(inputs.filter, [fSize, fSize, inputDepth, outputDepth]);\n       const bias = tf.tensor1d([1, 4, 2, 3, 9, 6, 5, 8]);\n       const preluActivationWeights = tf.tensor1d([1, 2, 3, 4, 5, 6, 7, 8]);\n\n       const result = tf.fused.conv2d({\n         x,\n         filter: w,\n         strides: stride,\n         pad,\n         dataFormat: 'NHWC',\n         dilations: [1, 1],\n         activation: 'prelu',\n         preluActivationWeights,\n         bias\n       });\n       expect(result.shape).toEqual([1, 4, 4, 8]);\n       expectArraysClose(\n           await result.data(), new Float32Array([\n             25.75398063659668,   -41.61178970336914,  26.857805252075195,\n             -87.63885498046875,  33.961631774902344,  -114.0812759399414,\n             30.065458297729492,  -136.93893432617188, 23.118206024169922,\n             -36.33102035522461,  24.212820053100586,  -77.04048156738281,\n             31.307422637939453,  -98.12835693359375,  27.402034759521484,\n             -115.5947265625,     20.482431411743164,  -31.050262451171875,\n             21.567821502685547,  -66.44209289550781,  28.653217315673828,\n             -82.17544555664062,  24.73861312866211,   -94.25041198730469,\n             11.078080177307129,  -12.208478927612305, 12.130399703979492,\n             -28.626232147216797, 19.182720184326172,  -25.253299713134766,\n             15.235037803649902,  -18.08960723876953,  4.6677775382995605,\n             0.31717729568481445, 5.697869777679443,   -2.8516759872436523,\n             12.727968215942383,  2.2569849491119385,  8.758066177368164,\n             4.226885795593262,   2.0319995880126953,  2.9575586318969727,\n             3.052880048751831,   1.9366796016693115,  10.073760032653809,\n             4.915799617767334,   6.094639778137207,   6.89492130279541,\n             -0.6037763357162476, 5.5979437828063965,  0.4078875780105591,\n             4.586280822753906,   7.419551849365234,   7.5746169090271,\n             3.43121600151062,    9.562952041625977,   -1.4065279960632324,\n             6.404943943023682,   -1.2100803852081299, 5.401776313781738,\n             6.5998077392578125,  8.398608207702637,   2.602976083755493,\n             10.395440101623535,  -16.418434143066406, 21.440250396728516,\n             -46.38618850708008,  20.483882904052734,  -42.52848815917969,\n             23.527509689331055,  -87.84530639648438,  25.571144104003906,\n             -19.054208755493164, 24.080629348754883,  -54.32115936279297,\n             23.133480072021484,  -55.79951477050781,  26.186328887939453,\n             -106.48924255371094, 28.239177703857422,  -21.689987182617188,\n             26.721012115478516,  -62.25614929199219,  25.783079147338867,\n             -69.070556640625,    28.84514808654785,   -125.13325500488281,\n             30.907209396362305,  -13.891133308410645, 18.914127349853516,\n             -38.81135940551758,  17.960111618041992,  -29.915504455566406,\n             21.006093978881836,  -70.20361328125,     23.052082061767578,\n             -12.857919692993164, 17.89089584350586,   -35.771610260009766,\n             16.95684814453125,   -24.949115753173828, 20.022798538208008,\n             -63.39042282104492,  22.088754653930664,  -14.02528190612793,\n             19.06132698059082,   -39.2921257019043,   18.133424758911133,\n             -30.847349166870117, 21.205520629882812,  -71.69097137451172,\n             23.27761459350586,   -15.192638397216797, 20.23175811767578,\n             -42.8126335144043,   19.309999465942383,  -36.74560546875,\n             22.388240814208984,  -79.99152374267578,  24.46647834777832,\n             -8.556736946105957,  13.584352493286133,  -22.835901260375977,\n             12.6395845413208,    -3.336000442504883,  15.694815635681152,\n             -33.0570182800293,   17.750045776367188\n           ]));\n     });\n\n  it('relu6 bias stride 2 x=[1,8,8,16] f=[3,3,16,8] s=[2,2] d=8 p=same',\n     async () => {\n       const inputDepth = 16;\n       const xSize = 8;\n       const inputShape: [number, number, number, number] =\n           [1, xSize, xSize, inputDepth];\n       const outputDepth = 8;\n       const fSize = 3;\n       const pad = 'same';\n       const stride: [number, number] = [2, 2];\n\n       const inputs = generateCaseInputs(\n           1 * xSize * xSize * inputDepth,\n           fSize * fSize * inputDepth * outputDepth);\n       const x = tf.tensor4d(inputs.input, inputShape);\n       const w =\n           tf.tensor4d(inputs.filter, [fSize, fSize, inputDepth, outputDepth]);\n       const bias = tf.tensor1d([1, 4, 2, 3, 9, 6, 5, 8]);\n\n       const result = tf.fused.conv2d({\n         x,\n         filter: w,\n         strides: stride,\n         pad,\n         dataFormat: 'NHWC',\n         dilations: [1, 1],\n         activation: 'relu6',\n         bias\n       });\n       expect(result.shape).toEqual([1, 4, 4, 8]);\n       const resultData = await result.data();\n       expectArraysClose(resultData, new Float32Array([\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           4.6677775382995605,\n                           0.31717729568481445,\n                           5.697869777679443,\n                           0,\n                           6,\n                           2.2569849491119385,\n                           6,\n                           4.226885795593262,\n                           2.0319995880126953,\n                           2.9575586318969727,\n                           3.052880048751831,\n                           1.9366796016693115,\n                           6,\n                           4.915799617767334,\n                           6,\n                           6,\n                           0,\n                           5.5979437828063965,\n                           0.4078875780105591,\n                           4.586280822753906,\n                           6,\n                           6,\n                           3.43121600151062,\n                           6,\n                           0,\n                           6,\n                           0,\n                           5.401776313781738,\n                           6,\n                           6,\n                           2.602976083755493,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6,\n                           0,\n                           6\n                         ]));\n     });\n\n  it('leakyrelu bias stride 2 x=[1,8,8,16] f=[3,3,16,1] s=[2,2] d=8 p=same',\n     async () => {\n       const inputDepth = 16;\n       const xSize = 8;\n       const inputShape: [number, number, number, number] =\n           [1, xSize, xSize, inputDepth];\n       const outputDepth = 8;\n       const fSize = 3;\n       const pad = 'same';\n       const stride: [number, number] = [2, 2];\n\n       const inputs = generateCaseInputs(\n           1 * xSize * xSize * inputDepth,\n           fSize * fSize * inputDepth * outputDepth);\n       const x = tf.tensor4d(inputs.input, inputShape);\n       const w =\n           tf.tensor4d(inputs.filter, [fSize, fSize, inputDepth, outputDepth]);\n       const bias = tf.tensor1d([1, 4, 2, 3, 9, 6, 5, 8]);\n       const leakyreluAlpha = 0.3;\n\n       const result = tf.fused.conv2d({\n         x,\n         filter: w,\n         strides: stride,\n         pad,\n         dataFormat: 'NHWC',\n         dilations: [1, 1],\n         activation: 'leakyrelu',\n         leakyreluAlpha,\n         bias\n       });\n       expect(result.shape).toEqual([1, 4, 4, 8]);\n       expectArraysClose(\n           await result.data(), new Float32Array([\n             25.75398063659668,    -6.241768836975098,   26.857805252075195,\n             -6.5729146003723145,  33.961631774902344,   -5.704063892364502,\n             30.065458297729492,   -5.135210037231445,   23.118206024169922,\n             -5.449653148651123,   24.212820053100586,   -5.778036117553711,\n             31.307422637939453,   -4.906418323516846,   27.402034759521484,\n             -4.334802627563477,   20.482431411743164,   -4.657539367675781,\n             21.567821502685547,   -4.983157157897949,   28.653217315673828,\n             -4.108772277832031,   24.73861312866211,    -3.534390687942505,\n             11.078080177307129,   -1.8312718868255615,  12.130399703979492,\n             -2.1469674110412598,  19.182720184326172,   -1.262665033340454,\n             15.235037803649902,   -0.6783602833747864,  4.6677775382995605,\n             0.31717729568481445,  5.697869777679443,    -0.21387571096420288,\n             12.727968215942383,   2.2569849491119385,   8.758066177368164,\n             4.226885795593262,    2.0319995880126953,   2.9575586318969727,\n             3.052880048751831,    1.9366796016693115,   10.073760032653809,\n             4.915799617767334,    6.094639778137207,    6.89492130279541,\n             -0.18113291263580322, 5.5979437828063965,   0.4078875780105591,\n             4.586280822753906,    7.419551849365234,    7.5746169090271,\n             3.43121600151062,     9.562952041625977,    -0.42195841670036316,\n             6.404943943023682,    -0.12100804597139359, 5.401776313781738,\n             6.5998077392578125,   8.398608207702637,    2.602976083755493,\n             10.395440101623535,   -4.925530433654785,   21.440250396728516,\n             -4.6386189460754395,  20.483882904052734,   -2.5517091751098633,\n             23.527509689331055,   -3.764799118041992,   25.571144104003906,\n             -5.7162628173828125,  24.080629348754883,   -5.432116508483887,\n             23.133480072021484,   -3.347970962524414,   26.186328887939453,\n             -4.5638251304626465,  28.239177703857422,   -6.5069966316223145,\n             26.721012115478516,   -6.225615501403809,   25.783079147338867,\n             -4.144233703613281,   28.84514808654785,    -5.36285400390625,\n             30.907209396362305,   -4.167340278625488,   18.914127349853516,\n             -3.881135940551758,   17.960111618041992,   -1.794930338859558,\n             21.006093978881836,   -3.0087265968322754,  23.052082061767578,\n             -3.8573760986328125,  17.89089584350586,    -3.5771610736846924,\n             16.95684814453125,    -1.4969470500946045,  20.022798538208008,\n             -2.7167325019836426,  22.088754653930664,   -4.207584857940674,\n             19.06132698059082,    -3.9292125701904297,  18.133424758911133,\n             -1.8508410453796387,  21.205520629882812,   -3.0724704265594482,\n             23.27761459350586,    -4.557791709899902,   20.23175811767578,\n             -4.28126335144043,    19.309999465942383,   -2.2047364711761475,\n             22.388240814208984,   -3.428208351135254,   24.46647834777832,\n             -2.567021131515503,   13.584352493286133,   -2.283590316772461,\n             12.6395845413208,     -0.20016004145145416, 15.694815635681152,\n             -1.41672945022583,    17.750045776367188\n           ]));\n     });\n\n  it('basic with bias', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      bias: tf.tensor1d([5, 6])\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected =\n        [0, 8, -6, 11, -12, 14, -18, 17, -24, 20, -30, 23, -36, 26, -42, 29];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with explicit padding', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const pad =\n        [[0, 0], [1, 2], [0, 1], [0, 0]] as tf.backend_util.ExplicitPadding;\n    const stride = 1;\n    const dataFormat = 'NHWC';\n    const dilation = 1;\n\n    const x = tf.tensor3d([1, 2, 3, 4, 5, 6, 7, 8], [4, 2, inputDepth]);\n    const w =\n        tf.tensor4d([3, 1, 5, 0, 2, 7, 8, 9], [4, 2, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d(\n        {x, filter: w, strides: stride, pad, dataFormat, dilations: dilation});\n\n    const resultData = await result.data();\n    expect(result.shape).toEqual([4, 2, 1]);\n    expectArraysClose(resultData, [133, 66, 200, 102, 108, 58, 56, 58]);\n  });\n\n  it('basic with elu', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'elu'\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected =\n        [-0.99326, 2, -1, 5, -1, 8, -1, 11, -1, 14, -1, 17, -1, 20, -1, 23];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with prelu', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const alpha = tf.tensor3d([0.25, 0.75], [1, 1, 2]);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'prelu',\n      preluActivationWeights: alpha\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected = [\n      -1.25, 2, -2.75, 5, -4.25, 8, -5.75, 11, -7.25, 14, -8.75, 17, -10.25, 20,\n      -11.75, 23\n    ];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with leakyrelu', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const alpha = 0.3;\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'leakyrelu',\n      leakyreluAlpha: alpha\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected = [\n      -1.5, 2, -3.3000001907348633, 5, -5.100000381469727, 8,\n      -6.900000095367432, 11, -8.700000762939453, 14, -10.5, 17,\n      -12.300000190734863, 20, -14.100000381469727, 23\n    ];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with sigmoid', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const alpha = 0.3;\n    const w = tf.tensor4d(\n        [-0.1, 0.1, -0.2, 0.05], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'sigmoid',\n      leakyreluAlpha: alpha\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected = [\n      0.3775407, 0.549834, 0.24973989, 0.6224593, 0.15446526, 0.6899744,\n      0.09112296, 0.7502601, 0.0521535, 0.80218387, 0.02931219, 0.84553474,\n      0.0163025, 0.8807971, 0.0090133, 0.908877\n    ];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('basic with broadcasted bias and relu', async () => {\n    const inputDepth = 2;\n    const inShape: [number, number, number, number] = [2, 2, 2, inputDepth];\n    const outputDepth = 2;\n    const fSize = 1;\n    const pad = 0;\n    const stride = 1;\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], inShape);\n    const w =\n        tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides: stride,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      bias: tf.scalar(5),\n      activation: 'relu'\n    });\n    expect(result.shape).toEqual([2, 2, 2, 2]);\n    const expected = [0, 7, 0, 10, 0, 13, 0, 16, 0, 19, 0, 22, 0, 25, 0, 28];\n\n    expectArraysClose(await result.data(), expected);\n  });\n\n  it('im2row', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [2, 2];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({x, filter: w, strides, pad});\n\n    expectArraysClose(\n        await result.data(),\n        [10, 5, 10, 50, 25, 50, -10, -5, -10, -50, -25, -50]);\n  });\n\n  it('im2row with relu', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [2, 2];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'relu'\n    });\n\n    expectArraysClose(\n        await result.data(), [10, 5, 10, 50, 25, 50, 0, 0, 0, 0, 0, 0]);\n  });\n\n  it('im2row with prelu', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [2, 2];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n    const alpha = tf.tensor3d([0.5], [1, 1, inputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'prelu',\n      preluActivationWeights: alpha\n    });\n\n    expectArraysClose(\n        await result.data(),\n        [10, 5, 10, 50, 25, 50, -5, -2.5, -5, -25, -12.5, -25]);\n  });\n\n  it('im2row with leakyrelu', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [2, 2];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n    const alpha = 0.3;\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'leakyrelu',\n      leakyreluAlpha: alpha\n    });\n\n    expectArraysClose(await result.data(), [\n      10, 5, 10, 50, 25, 50, -3, -1.5, -3, -15.000000953674316,\n      -7.500000476837158, -15.000000953674316\n    ]);\n  });\n\n  it('pointwise with prelu', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [1, 1];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n    const alpha = tf.tensor3d([0.5], [1, 1, inputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'prelu',\n      preluActivationWeights: alpha\n    });\n\n    expectArraysClose(await result.data(), [\n      10,  5,    10,  30,  15,   30,  50,  25,    50,  70,  35,    70,\n      20,  10,   20,  40,  20,   40,  60,  30,    60,  80,  40,    80,\n      -5,  -2.5, -5,  -15, -7.5, -15, -25, -12.5, -25, -35, -17.5, -35,\n      -10, -5,   -10, -20, -10,  -20, -30, -15,   -30, -40, -20,   -40\n    ]);\n  });\n\n  it('pointwise with leakyrelu', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [1, 1];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n    const alpha = 0.3;\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      activation: 'leakyrelu',\n      leakyreluAlpha: alpha\n    });\n\n    expectArraysClose(await result.data(), [\n      10,\n      5,\n      10,\n      30,\n      15,\n      30,\n      50,\n      25,\n      50,\n      70,\n      35,\n      70,\n      20,\n      10,\n      20,\n      40,\n      20,\n      40,\n      60,\n      30,\n      60,\n      80,\n      40,\n      80,\n      -3,\n      -1.5,\n      -3,\n      -9,\n      -4.5,\n      -9,\n      -15.000000953674316,\n      -7.500000476837158,\n      -15.000000953674316,\n      -21,\n      -10.5,\n      -21,\n      -6,\n      -3,\n      -6,\n      -12,\n      -6,\n      -12,\n      -18,\n      -9,\n      -18,\n      -24,\n      -12,\n      -24\n    ]);\n  });\n\n  it('im2row with broadcasted bias and relu', async () => {\n    const inputDepth = 1;\n    const inputShape: [number, number, number] = [4, 4, inputDepth];\n    const outputDepth = 3;\n    const fSize = 1;\n    const pad = 'same';\n    const strides: [number, number] = [2, 2];\n\n    const x = tf.tensor3d(\n        [\n          10, 30, 50, 70, 20, 40, 60, 80, -10, -30, -50, -70, -20, -40, -60, -80\n        ],\n        inputShape);\n    const w = tf.tensor4d([1, 0.5, 1], [fSize, fSize, inputDepth, outputDepth]);\n\n    const result = tf.fused.conv2d({\n      x,\n      filter: w,\n      strides,\n      pad,\n      dataFormat: 'NHWC',\n      dilations: [1, 1],\n      bias: tf.scalar(5),\n      activation: 'relu'\n    });\n\n    expectArraysClose(\n        await result.data(), [15, 10, 15, 55, 30, 55, 0, 0, 0, 0, 0, 0]);\n  });\n\n  it('backProp input x=[2,3,3,1] f=[2,2,1,1] s=1 p=0', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const strides = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D) => tf.fused.conv2d({x, filter, strides, pad}));\n    const [dx] = grads([x], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(\n        await dx.data(),\n        [-3, 2, 1, -8, 1.5, 0.5, -4, 1, 0, -3, 2, 1, -8, 1.5, 0.5, -4, 1, 0]);\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const strides = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const grads = tf.grads(\n        (x: tf.Tensor4D, filter: tf.Tensor4D) =>\n            tf.fused.conv2d({x, filter, strides, pad}));\n    const [dx, dfilter] = grads([x, filter], dy);\n\n    expect(dx.shape).toEqual(x.shape);\n    expectArraysClose(\n        await dx.data(),\n        [-3, 2, 1, -8, 1.5, 0.5, -4, 1, 0, -3, 2, 1, -8, 1.5, 0.5, -4, 1, 0]);\n\n    expect(dfilter.shape).toEqual(filterShape);\n    expectArraysClose(await dfilter.data(), [26, 38, 62, 74]);\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0 with bias', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const strides = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n    const bias = tf.ones([2, 2, 2, 1]);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const fusedGrads =\n        tf.grads((x: tf.Tensor4D, w: tf.Tensor4D, b) => tf.fused.conv2d({\n          x,\n          filter: w,\n          strides,\n          pad,\n          dataFormat: 'NHWC',\n          dilations: [1, 1],\n          bias: b\n        }));\n    const [dxFused, dfilterFused, dbiasFused] =\n        fusedGrads([x, filter, bias], dy);\n\n    const grads = tf.grads((x: tf.Tensor4D, filter: tf.Tensor4D, bias) => {\n      const conv = tf.conv2d(x, filter, strides, pad);\n      const sum = tf.add(conv, bias);\n      return sum;\n    });\n    const [dx, dfilter, dbias] = grads([x, filter, bias], dy);\n\n    expectArraysClose(await dxFused.array(), await dx.array());\n    expectArraysClose(await dfilterFused.array(), await dfilter.array());\n    expectArraysClose(await dbiasFused.array(), await dbias.array());\n  });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0 with bias and relu',\n     async () => {\n       const inputDepth = 1;\n       const outputDepth = 1;\n       const inputShape: [number, number, number, number] =\n           [2, 3, 3, inputDepth];\n       const filterSize = 2;\n       const strides = 1;\n       const pad = 0;\n\n       const filterShape: [number, number, number, number] =\n           [filterSize, filterSize, inputDepth, outputDepth];\n       const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n       const bias = tf.ones([2, 2, 2, 1]);\n\n       const x = tf.tensor4d(\n           [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n       const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n       const fusedGrads =\n           tf.grads((x: tf.Tensor4D, w: tf.Tensor4D, b) => tf.fused.conv2d({\n             x,\n             filter: w,\n             strides,\n             pad,\n             dataFormat: 'NHWC',\n             dilations: [1, 1],\n             bias: b,\n             activation: 'relu'\n           }));\n       const [dxFused, dfilterFused, dbiasFused] =\n           fusedGrads([x, filter, bias], dy);\n\n       const grads = tf.grads((x: tf.Tensor4D, filter: tf.Tensor4D, bias) => {\n         const conv = tf.conv2d(x, filter, strides, pad);\n         const sum = tf.add(conv, bias);\n         return tf.relu(sum);\n       });\n       const [dx, dfilter, dbias] = grads([x, filter, bias], dy);\n\n       expectArraysClose(await dxFused.array(), await dx.array());\n       expectArraysClose(await dfilterFused.array(), await dfilter.array());\n       expectArraysClose(await dbiasFused.array(), await dbias.array());\n     });\n\n  it('gradient x=[2,3,3,1] f=[2,2,1,1] s=1 p=0 with bias and elu', async () => {\n    const inputDepth = 1;\n    const outputDepth = 1;\n    const inputShape: [number, number, number, number] = [2, 3, 3, inputDepth];\n    const filterSize = 2;\n    const strides = 1;\n    const pad = 0;\n\n    const filterShape: [number, number, number, number] =\n        [filterSize, filterSize, inputDepth, outputDepth];\n    const filter = tf.tensor4d([-1, 1, -2, 0.5], filterShape);\n    const bias = tf.ones([2, 2, 2, 1]);\n\n    const x = tf.tensor4d(\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9], inputShape);\n    const dy = tf.tensor4d([3, 1, 2, 0, 3, 1, 2, 0], [2, 2, 2, 1]);\n\n    const fusedGrads =\n        tf.grads((x: tf.Tensor4D, w: tf.Tensor4D, b) => tf.fused.conv2d({\n          x,\n          filter: w,\n          strides,\n          pad,\n          dataFormat: 'NHWC',\n          dilations: [1, 1],\n          bias: b,\n          activation: 'elu'\n        }));\n    const [dxFused, dfilterFused, dbiasFused] =\n        fusedGrads([x, filter, bias], dy);\n\n    const grads = tf.grads((x: tf.Tensor4D, filter: tf.Tensor4D, bias) => {\n      const conv = tf.conv2d(x, filter, strides, pad);\n      const sum = tf.add(conv, bias);\n      return tf.elu(sum);\n    });\n    const [dx, dfilter, dbias] = grads([x, filter, bias], dy);\n\n    expectArraysClose(await dxFused.array(), await dx.array());\n    expectArraysClose(await dfilterFused.array(), await dfilter.array());\n    expectArraysClose(await dbiasFused.array(), await dbias.array());\n  });\n});\n"]}