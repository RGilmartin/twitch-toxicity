{"version":3,"file":"multi_rnn_cell_test.js","sourceRoot":"","sources":["../../src/ops/multi_rnn_cell_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '../index';\nimport {ALL_ENVS, describeWithFlags} from '../jasmine_util';\nimport {Tensor2D} from '../tensor';\nimport {expectArraysClose} from '../test_util';\nimport {Rank} from '../types';\n\ndescribeWithFlags('lstm', ALL_ENVS, () => {\n  it('MultiRNNCell with 2 BasicLSTMCells', async () => {\n    const lstmKernel1 = tf.tensor2d(\n        [\n          0.26242125034332275, -0.8787832260131836, 0.781475305557251,\n          1.337337851524353, 0.6180247068405151, -0.2760246992111206,\n          -0.11299663782119751, -0.46332040429115295, -0.1765323281288147,\n          0.6807947158813477, -0.8326982855796814, 0.6732975244522095\n        ],\n        [3, 4]);\n    const lstmBias1 = tf.tensor1d(\n        [1.090713620185852, -0.8282332420349121, 0, 1.0889357328414917]);\n    const lstmKernel2 = tf.tensor2d(\n        [\n          -1.893059492111206, -1.0185645818710327, -0.6270437240600586,\n          -2.1829540729522705, -0.4583775997161865, -0.5454602241516113,\n          -0.3114445209503174, 0.8450229167938232\n        ],\n        [2, 4]);\n    const lstmBias2 = tf.tensor1d(\n        [0.9906240105628967, 0.6248329877853394, 0, 1.0224634408950806]);\n\n    const forgetBias = tf.scalar(1.0);\n    const lstm1 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel1, lstmBias1, data, c, h);\n    const lstm2 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel2, lstmBias2, data, c, h);\n    const c = [\n      tf.zeros<Rank.R2>([1, lstmBias1.shape[0] / 4]),\n      tf.zeros<Rank.R2>([1, lstmBias2.shape[0] / 4])\n    ];\n    const h = [\n      tf.zeros<Rank.R2>([1, lstmBias1.shape[0] / 4]),\n      tf.zeros<Rank.R2>([1, lstmBias2.shape[0] / 4])\n    ];\n\n    const onehot = tf.buffer<Rank.R2>([1, 2], 'float32');\n    onehot.set(1.0, 0, 0);\n\n    const output = tf.multiRNNCell([lstm1, lstm2], onehot.toTensor(), c, h);\n\n    expectArraysClose(await output[0][0].data(), [-0.7440074682235718]);\n    expectArraysClose(await output[0][1].data(), [0.7460772395133972]);\n    expectArraysClose(await output[1][0].data(), [-0.5802832245826721]);\n    expectArraysClose(await output[1][1].data(), [0.5745711922645569]);\n  });\n});\n\ndescribeWithFlags('multiRNN throws when passed non-tensor', ALL_ENVS, () => {\n  it('input: data', () => {\n    const lstmKernel1: tf.Tensor2D = tf.zeros([3, 4]);\n    const lstmBias1: tf.Tensor1D = tf.zeros([4]);\n    const lstmKernel2: tf.Tensor2D = tf.zeros([2, 4]);\n    const lstmBias2: tf.Tensor1D = tf.zeros([4]);\n\n    const forgetBias = tf.scalar(1.0);\n    const lstm1 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel1, lstmBias1, data, c, h);\n    const lstm2 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel2, lstmBias2, data, c, h);\n    const c = [\n      tf.zeros<Rank.R2>([1, lstmBias1.shape[0] / 4]),\n      tf.zeros<Rank.R2>([1, lstmBias2.shape[0] / 4])\n    ];\n    const h = [\n      tf.zeros<Rank.R2>([1, lstmBias1.shape[0] / 4]),\n      tf.zeros<Rank.R2>([1, lstmBias2.shape[0] / 4])\n    ];\n\n    expect(() => tf.multiRNNCell([lstm1, lstm2], {} as tf.Tensor2D, c, h))\n        .toThrowError(\n            /Argument 'data' passed to 'multiRNNCell' must be a Tensor/);\n  });\n\n  it('input: c', () => {\n    const lstmKernel1: tf.Tensor2D = tf.zeros([3, 4]);\n    const lstmBias1: tf.Tensor1D = tf.zeros([4]);\n    const lstmKernel2: tf.Tensor2D = tf.zeros([2, 4]);\n    const lstmBias2: tf.Tensor1D = tf.zeros([4]);\n\n    const forgetBias = tf.scalar(1.0);\n    const lstm1 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel1, lstmBias1, data, c, h);\n    const lstm2 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel2, lstmBias2, data, c, h);\n\n    const h = [\n      tf.zeros<Rank.R2>([1, lstmBias1.shape[0] / 4]),\n      tf.zeros<Rank.R2>([1, lstmBias2.shape[0] / 4])\n    ];\n    const data: tf.Tensor2D = tf.zeros([1, 2]);\n\n    expect(() => tf.multiRNNCell([lstm1, lstm2], data, [{} as tf.Tensor2D], h))\n        .toThrowError(\n            /Argument 'c\\[0\\]' passed to 'multiRNNCell' must be a Tensor/);\n  });\n\n  it('input: h', () => {\n    const lstmKernel1: tf.Tensor2D = tf.zeros([3, 4]);\n    const lstmBias1: tf.Tensor1D = tf.zeros([4]);\n    const lstmKernel2: tf.Tensor2D = tf.zeros([2, 4]);\n    const lstmBias2: tf.Tensor1D = tf.zeros([4]);\n\n    const forgetBias = tf.scalar(1.0);\n    const lstm1 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel1, lstmBias1, data, c, h);\n    const lstm2 = (data: Tensor2D, c: Tensor2D, h: Tensor2D) =>\n        tf.basicLSTMCell(forgetBias, lstmKernel2, lstmBias2, data, c, h);\n    const c = [\n      tf.zeros<Rank.R2>([1, lstmBias1.shape[0] / 4]),\n      tf.zeros<Rank.R2>([1, lstmBias2.shape[0] / 4])\n    ];\n    const data: tf.Tensor2D = tf.zeros([1, 2]);\n\n    expect(() => tf.multiRNNCell([lstm1, lstm2], data, c, [{} as tf.Tensor2D]))\n        .toThrowError(\n            /Argument 'h\\[0\\]' passed to 'multiRNNCell' must be a Tensor/);\n  });\n});\n"]}