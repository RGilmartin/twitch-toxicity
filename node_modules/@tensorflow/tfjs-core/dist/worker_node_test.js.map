{"version":3,"file":"worker_node_test.js","sourceRoot":"","sources":["../src/worker_node_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,iBAAiB,EAAE,eAAe,EAAC,MAAM,gBAAgB,CAAC;AAClE,OAAO,EAAC,iBAAiB,EAAC,MAAM,aAAa,CAAC;AAC9C,oCAAoC;AAEpC,MAAM,SAAS,GAAG,CAAC,EAAY,EAAU,EAAE;IACzC,MAAM,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC;IAC5C,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,mCAAmC;AACnC,MAAM,cAAc,GAAG,GAAG,EAAE;IAC1B,6EAA6E;IAC7E,0BAA0B;IAC1B,MAAM,EAAE,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;IACvC,MAAM,EAAC,UAAU,EAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC/C,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACb,UAAU,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,iBAAiB,CAAC,kCAAkC,EAAE,eAAe,EAAE,GAAG,EAAE;IAC1E,gCAAgC;IAChC,EAAE,CAAC,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE;QAC9B,MAAM,EAAC,MAAM,EAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QACnE,kCAAkC;QAClC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,GAAQ,EAAE,EAAE;YAChC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACtB,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {describeWithFlags, HAS_NODE_WORKER} from './jasmine_util';\nimport {expectArraysClose} from './test_util';\n// tslint:disable:no-require-imports\n\nconst fn2String = (fn: Function): string => {\n  const funcStr = '(' + fn.toString() + ')()';\n  return funcStr;\n};\n\n// The source code of a web worker.\nconst workerTestNode = () => {\n  // Web worker scripts in node live relative to the CWD, not to the dir of the\n  // file that spawned them.\n  const tf = require('@tensorflow/tfjs');\n  const {parentPort} = require('worker_threads');\n  let a = tf.tensor1d([1, 2, 3]);\n  const b = tf.tensor1d([3, 2, 1]);\n  a = a.add(b);\n  parentPort.postMessage({data: a.dataSync()});\n};\n\ndescribeWithFlags('computation in worker (node env)', HAS_NODE_WORKER, () => {\n  // tslint:disable-next-line: ban\n  it('tensor in worker', (done) => {\n    const {Worker} = require('worker_threads');\n    const worker = new Worker(fn2String(workerTestNode), {eval: true});\n    // tslint:disable-next-line:no-any\n    worker.on('message', (msg: any) => {\n      const data = msg.data;\n      expectArraysClose(data, [4, 4, 4]);\n      done();\n    });\n  });\n});\n"]}