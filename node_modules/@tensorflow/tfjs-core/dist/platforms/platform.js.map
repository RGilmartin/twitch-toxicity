{"version":3,"file":"platform.js","sourceRoot":"","sources":["../../src/platforms/platform.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {RequestDetails} from '../io/types';\n\n/**\n * At any given time a single platform is active and represents and\n * implementation of this interface. In practice, a platform is an environment\n * where TensorFlow.js can be executed, e.g. the browser or Node.js.\n */\nexport interface Platform {\n  /**\n   * Makes an HTTP request.\n   * @param path The URL path to make a request to\n   * @param init The request init. See init here:\n   *     https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n   */\n  fetch(path: string, requestInits?: RequestInit, options?: RequestDetails):\n      Promise<Response>;\n\n  /**\n   * Returns the current high-resolution time in milliseconds relative to an\n   * arbitrary time in the past. It works across different platforms (node.js,\n   * browsers).\n   */\n  now(): number;\n\n  /**\n   * Encode the provided string into an array of bytes using the provided\n   * encoding.\n   */\n  encode(text: string, encoding: string): Uint8Array;\n  /** Decode the provided bytes into a string using the provided encoding. */\n  decode(bytes: Uint8Array, encoding: string): string;\n}\n"]}