{"version":3,"file":"non_max_suppression_util_test.js","sourceRoot":"","sources":["../../src/backends/non_max_suppression_util_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as non_max_suppression_util from './non_max_suppression_util';\n\ndescribe('non_max_suppression_util', () => {\n  const insertionPoint = (i: number) => -(i + 1);\n\n  describe('binarySearch', () => {\n    const d = [\n      -897123.9, -321434.58758, -1321.3124, -324, -9, -3, 0, 0, 0, 0.31255, 5,\n      142.88888708, 334, 342, 453, 54254\n    ];\n\n    it('-897123.9 should be found at index 0', () => {\n      const result = non_max_suppression_util.binarySearch(d, -897123.9);\n      expect(result).toBe(0);\n    });\n\n    it(`54254 should be found at index ${d.length - 1}`, () => {\n      const result = non_max_suppression_util.binarySearch(d, 54254);\n      expect(result).toBe(d.length - 1);\n    });\n\n    it('-3 should be found at index 5', () => {\n      const result = non_max_suppression_util.binarySearch(d, -3);\n      expect(result).toBe(5);\n    });\n\n    it('0 should be found at index 6', () => {\n      const result = non_max_suppression_util.binarySearch(d, 0);\n      expect(result).toBe(6);\n    });\n\n    it('-900000 should have an insertion point of 0', () => {\n      const result = non_max_suppression_util.binarySearch(d, -900000);\n      expect(result).toBeLessThan(0);\n      expect(insertionPoint(result)).toBe(0);\n    });\n\n    it(`54255 should have an insertion point of ${d.length}`, () => {\n      const result = non_max_suppression_util.binarySearch(d, 54255);\n      expect(result).toBeLessThan(0);\n      expect(insertionPoint(result)).toEqual(d.length);\n    });\n\n    it('1.1 should have an insertion point of 10', () => {\n      const result = non_max_suppression_util.binarySearch(d, 1.1);\n      expect(result).toBeLessThan(0);\n      expect(insertionPoint(result)).toEqual(10);\n    });\n  });\n\n  describe('binarySearch with custom comparator', () => {\n    const e = [\n      54254,\n      453,\n      342,\n      334,\n      142.88888708,\n      5,\n      0.31255,\n      0,\n      0,\n      0,\n      -3,\n      -9,\n      -324,\n      -1321.3124,\n      -321434.58758,\n      -897123.9,\n    ];\n\n    const revComparator = (a: number, b: number) => (b - a);\n\n    it('54254 should be found at index 0', () => {\n      const result =\n          non_max_suppression_util.binarySearch(e, 54254, revComparator);\n      expect(result).toBe(0);\n    });\n\n    it(`-897123.9 should be found at index ${e.length - 1}`, () => {\n      const result =\n          non_max_suppression_util.binarySearch(e, -897123.9, revComparator);\n      expect(result).toBe(e.length - 1);\n    });\n\n    it('-3 should be found at index 10', () => {\n      const result =\n          non_max_suppression_util.binarySearch(e, -3, revComparator);\n      expect(result).toBe(10);\n    });\n\n    it('0 should be found at index 7', () => {\n      const result = non_max_suppression_util.binarySearch(e, 0, revComparator);\n      expect(result).toBe(7);\n    });\n\n    it('54254.1 should have an insertion point of 0', () => {\n      const result =\n          non_max_suppression_util.binarySearch(e, 54254.1, revComparator);\n      expect(result).toBeLessThan(0);\n      expect(insertionPoint(result)).toBe(0);\n    });\n\n    it(`-897124 should have an insertion point of ${e.length}`, () => {\n      const result =\n          non_max_suppression_util.binarySearch(e, -897124, revComparator);\n      expect(result).toBeLessThan(0);\n      expect(insertionPoint(result)).toBe(e.length);\n    });\n  });\n\n  describe(\n      'binarySearch with custom comparator with single element array', () => {\n        const g = [1];\n\n        const revComparator = (a: number, b: number) => (b - a);\n\n        it('1 should be found at index 0', () => {\n          const result =\n              non_max_suppression_util.binarySearch(g, 1, revComparator);\n          expect(result).toBe(0);\n        });\n\n        it('2 should have an insertion point of 0', () => {\n          const result =\n              non_max_suppression_util.binarySearch(g, 2, revComparator);\n          expect(result).toBeLessThan(0);\n          expect(insertionPoint(result)).toBe(0);\n        });\n\n        it('0 should have an insertion point of 1', () => {\n          const result =\n              non_max_suppression_util.binarySearch(g, 0, revComparator);\n          expect(result).toBeLessThan(0);\n          expect(insertionPoint(result)).toBe(1);\n        });\n      });\n\n  describe('binarySearch test left-most duplicated element', () => {\n    it('should find the index of the first 0', () => {\n      const result = non_max_suppression_util.binarySearch([0, 0, 1], 0);\n      expect(result).toBe(0);\n    });\n\n    it('should find the index of the first 1', () => {\n      const result = non_max_suppression_util.binarySearch([0, 1, 1], 1);\n      expect(result).toBe(1);\n    });\n  });\n\n  describe('binaryInsert', () => {\n    it('inserts correctly', () => {\n      const a: number[] = [];\n\n      non_max_suppression_util.binaryInsert(a, 3);\n      expect(a).toEqual([3]);\n\n      non_max_suppression_util.binaryInsert(a, 3);\n      expect(a).toEqual([3, 3]);\n\n      non_max_suppression_util.binaryInsert(a, 1);\n      expect(a).toEqual([1, 3, 3]);\n\n      non_max_suppression_util.binaryInsert(a, 5);\n      expect(a).toEqual([1, 3, 3, 5]);\n    });\n  });\n});\n"]}