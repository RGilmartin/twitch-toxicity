{"version":3,"file":"local_response_normalization.js","sourceRoot":"","sources":["../../../src/public/chained_ops/local_response_normalization.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,EAAC,0BAA0B,EAAC,MAAM,wCAAwC,CAAC;AAClF,OAAO,EAAC,oBAAoB,EAAS,MAAM,cAAc,CAAC;AAU1D,oBAAoB,EAAE,CAAC,SAAS,CAAC,0BAA0B;IACvD,UACI,WAAoB,EAAE,IAAa,EAAE,KAAc,EAAE,IAAa;QACxE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,0BAA0B,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAM,CAAC;IAC/E,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {localResponseNormalization} from '../../ops/local_response_normalization';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    localResponseNormalization<T extends Tensor>(\n        depthRadius?: number, bias?: number, alpha?: number, beta?: number): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.localResponseNormalization =\n    function<T extends Tensor>(\n        depthRadius?: number, bias?: number, alpha?: number, beta?: number): T {\n  this.throwIfDisposed();\n  return localResponseNormalization(this, depthRadius, bias, alpha, beta) as T;\n};\n"]}