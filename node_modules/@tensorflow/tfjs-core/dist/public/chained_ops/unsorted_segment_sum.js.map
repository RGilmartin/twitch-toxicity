{"version":3,"file":"unsorted_segment_sum.js","sourceRoot":"","sources":["../../../src/public/chained_ops/unsorted_segment_sum.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,kBAAkB,EAAC,MAAM,gCAAgC,CAAC;AAClE,OAAO,EAAC,oBAAoB,EAAmB,MAAM,cAAc,CAAC;AAUpE,oBAAoB,EAAE,CAAC,SAAS,CAAC,kBAAkB;IAC/C,UACa,UAAiC,EAAE,WAAmB;QACrE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,kBAAkB,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IAC3D,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {unsortedSegmentSum} from '../../ops/unsorted_segment_sum';\nimport {getGlobalTensorClass, Tensor, Tensor1D} from '../../tensor';\nimport {Rank, TensorLike1D} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    unsortedSegmentSum<T extends Tensor>(\n        this: T, segmentIds: Tensor1D|TensorLike1D, numSegments: number): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.unsortedSegmentSum =\n    function<T extends Tensor>(\n        this: T, segmentIds: Tensor1D|TensorLike1D, numSegments: number): T {\n  this.throwIfDisposed();\n  return unsortedSegmentSum(this, segmentIds, numSegments);\n};\n"]}