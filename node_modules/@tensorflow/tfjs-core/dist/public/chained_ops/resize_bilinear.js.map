{"version":3,"file":"resize_bilinear.js","sourceRoot":"","sources":["../../../src/public/chained_ops/resize_bilinear.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,EAAC,cAAc,EAAC,MAAM,iCAAiC,CAAC;AAC/D,OAAO,EAAC,oBAAoB,EAAqB,MAAM,cAAc,CAAC;AAWtE,oBAAoB,EAAE,CAAC,SAAS,CAAC,cAAc;IAC3C,UACa,UAA4B,EAAE,YAAsB,EAC7D,gBAA0B;QAChC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;IAC1E,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {resizeBilinear} from '../../ops/image/resize_bilinear';\nimport {getGlobalTensorClass, Tensor3D, Tensor4D} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    resizeBilinear<T extends Tensor3D|Tensor4D>(\n        newShape2D: [number, number], alignCorners?: boolean,\n        halfPixelCenters?: boolean): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.resizeBilinear =\n    function<T extends Tensor3D|Tensor4D>(\n        this: T, newShape2D: [number, number], alignCorners?: boolean,\n        halfPixelCenters?: boolean): T {\n  this.throwIfDisposed();\n  return resizeBilinear(this, newShape2D, alignCorners, halfPixelCenters);\n};\n"]}