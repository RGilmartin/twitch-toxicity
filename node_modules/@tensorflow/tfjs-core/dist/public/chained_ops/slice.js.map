{"version":3,"file":"slice.js","sourceRoot":"","sources":["../../../src/public/chained_ops/slice.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,kDAAkD;AAClD,OAAO,EAAC,KAAK,EAAC,MAAM,eAAe,CAAC;AACpC,OAAO,EAAC,oBAAoB,EAAS,MAAM,cAAc,CAAC;AAU1D,oBAAoB,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,UAC5B,KAAsB,EAAE,IAAsB;IACzD,IAAI,CAAC,eAAe,EAAE,CAAC;IACvB,OAAO,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {slice} from '../../ops/ops';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    slice<T extends Tensor>(\n        this: T, begin: number|number[], size?: number|number[]): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.slice = function<T extends Tensor>(\n    this: T, begin: number|number[], size?: number|number[]): T {\n  this.throwIfDisposed();\n  return slice(this, begin, size);\n};\n"]}