{"version":3,"file":"worker_test.js","sourceRoot":"","sources":["../src/worker_test.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,KAAK,EAAE,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAC,iBAAiB,EAAE,UAAU,EAAC,MAAM,gBAAgB,CAAC;AAC7D,OAAO,EAAC,iBAAiB,EAAC,MAAM,aAAa,CAAC;AAE9C,MAAM,YAAY,GAAG,CAAC,EAAY,EAAU,EAAE;IAC5C,MAAM,IAAI,GACN,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,EAAE,EAAC,IAAI,EAAE,wBAAwB,EAAC,CAAC,CAAC;IAC9E,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC;AAEF,mCAAmC;AACnC,MAAM,UAAU,GAAG,GAAG,EAAE;IACtB,YAAY;IACZ,aAAa,CAAC,oDAAoD,CAAC,CAAC;IACpE,YAAY;IACZ,aAAa,CAAC,2DAA2D,CAAC,CAAC;IAC3E,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,YAAY;IACZ,IAAI,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,iBAAiB,CAAC,uBAAuB,EAAE,UAAU,EAAE,GAAG,EAAE;IAC1D,EAAE,CAAC,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE;QAC9B,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC,SAAS,GAAG,CAAC,GAAG,EAAE,EAAE;YACzB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from './index';\nimport {describeWithFlags, HAS_WORKER} from './jasmine_util';\nimport {expectArraysClose} from './test_util';\n\nconst fn2workerURL = (fn: Function): string => {\n  const blob =\n      new Blob(['(' + fn.toString() + ')()'], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n};\n\n// The source code of a web worker.\nconst workerTest = () => {\n  //@ts-ignore\n  importScripts('http://bs-local.com:12345/base/dist/tf-core.min.js');\n  //@ts-ignore\n  importScripts('http://bs-local.com:12345/base/dist/tf-backend-cpu.min.js');\n  let a = tf.tensor1d([1, 2, 3]);\n  const b = tf.tensor1d([3, 2, 1]);\n  a = tf.add(a, b);\n  //@ts-ignore\n  self.postMessage({data: a.dataSync()});\n};\n\ndescribeWithFlags('computation in worker', HAS_WORKER, () => {\n  it('tensor in worker', (done) => {\n    const worker = new Worker(fn2workerURL(workerTest));\n    worker.onmessage = (msg) => {\n      const data = msg.data.data;\n      expectArraysClose(data, [4, 4, 4]);\n      done();\n    };\n  });\n});\n"]}