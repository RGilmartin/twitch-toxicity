{"version":3,"file":"progress_test.js","sourceRoot":"","sources":["../../src/io/progress_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {monitorPromisesProgress} from './progress';\n\ndescribe('util.monitorPromisesProgress', () => {\n  it('Default progress from 0 to 1', (done) => {\n    const expectFractions: number[] = [0.25, 0.50, 0.75, 1.00];\n    const fractionList: number[] = [];\n    const tasks = Array(4).fill(0).map(() => {\n      return Promise.resolve();\n    });\n    monitorPromisesProgress(tasks, (progress: number) => {\n      fractionList.push(parseFloat(progress.toFixed(2)));\n    }).then(() => {\n      expect(fractionList).toEqual(expectFractions);\n      done();\n    });\n  });\n\n  it('Progress with pre-defined range', (done) => {\n    const startFraction = 0.2;\n    const endFraction = 0.8;\n    const expectFractions: number[] = [0.35, 0.50, 0.65, 0.80];\n    const fractionList: number[] = [];\n    const tasks = Array(4).fill(0).map(() => {\n      return Promise.resolve();\n    });\n    monitorPromisesProgress(tasks, (progress: number) => {\n      fractionList.push(parseFloat(progress.toFixed(2)));\n    }, startFraction, endFraction).then(() => {\n      expect(fractionList).toEqual(expectFractions);\n      done();\n    });\n  });\n\n  it('throws error when progress fraction is out of range', () => {\n    expect(() => {\n      const startFraction = -1;\n      const endFraction = 1;\n      const tasks = Array(4).fill(0).map(() => {\n        return Promise.resolve();\n      });\n      monitorPromisesProgress(\n          tasks, (progress: number) => {}, startFraction, endFraction);\n    }).toThrowError();\n  });\n\n  it('throws error when startFraction more than endFraction', () => {\n    expect(() => {\n      const startFraction = 0.8;\n      const endFraction = 0.2;\n      const tasks = Array(4).fill(0).map(() => {\n        return Promise.resolve();\n      });\n      monitorPromisesProgress(\n          tasks, (progress: number) => {}, startFraction, endFraction);\n    }).toThrowError();\n  });\n\n  it('throws error when promises is null', () => {\n    expect(() => {\n      monitorPromisesProgress(null, (progress: number) => {});\n    }).toThrowError();\n  });\n\n  it('throws error when promises is empty array', () => {\n    expect(() => {\n      monitorPromisesProgress([], (progress: number) => {});\n    }).toThrowError();\n  });\n});\n"]}