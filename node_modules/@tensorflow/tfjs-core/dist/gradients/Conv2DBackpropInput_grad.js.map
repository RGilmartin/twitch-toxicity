{"version":3,"file":"Conv2DBackpropInput_grad.js","sourceRoot":"","sources":["../../src/gradients/Conv2DBackpropInput_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,EAAC,mBAAmB,EAA2B,MAAM,iBAAiB,CAAC;AAE9E,OAAO,EAAC,MAAM,EAAC,MAAM,eAAe,CAAC;AACrC,OAAO,EAAC,oBAAoB,EAAC,MAAM,+BAA+B,CAAC;AAGnE,MAAM,CAAC,MAAM,6BAA6B,GAAe;IACvD,UAAU,EAAE,mBAAmB;IAC/B,YAAY,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC;IAC9B,QAAQ,EAAE,CAAC,GAAa,EAAE,KAAe,EAAE,KAAmB,EAAE,EAAE;QAChE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,KAA6B,CAAC;QAEnD,MAAM,EAAC,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,eAAe,EAAC,GAC7C,KAAuC,CAAC;QAE5C,OAAO;YACL,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,CACZ,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,CAAC,eAAe,EACxD,eAAe,CAAC;YACpB,MAAM,EAAE,GAAG,EAAE,CAAC,oBAAoB,CAC9B,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,eAAe,CAAC;SACtE,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Conv2DBackpropInput, Conv2DBackpropInputAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {conv2d} from '../ops/conv2d';\nimport {conv2DBackpropFilter} from '../ops/conv2d_backprop_filter';\nimport {Tensor, Tensor4D} from '../tensor';\n\nexport const conv2DBackpropInputGradConfig: GradConfig = {\n  kernelName: Conv2DBackpropInput,\n  inputsToSave: ['dy', 'filter'],\n  gradFunc: (ddx: Tensor4D, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [dy, filter] = saved as [Tensor4D, Tensor4D];\n\n    const {strides, pad, dataFormat, dimRoundingMode} =\n        attrs as {} as Conv2DBackpropInputAttrs;\n\n    return {\n      dy: () => conv2d(\n          ddx, filter, strides, pad, dataFormat, 1 /* dilations */,\n          dimRoundingMode),\n      filter: () => conv2DBackpropFilter(\n          ddx, dy, filter.shape, strides, pad, dataFormat, dimRoundingMode)\n    };\n  }\n};\n"]}