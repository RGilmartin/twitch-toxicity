{"version":3,"file":"Conv2D_grad.js","sourceRoot":"","sources":["../../src/gradients/Conv2D_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,EAAC,MAAM,EAAc,MAAM,iBAAiB,CAAC;AAEpD,OAAO,EAAC,oBAAoB,EAAC,MAAM,+BAA+B,CAAC;AACnE,OAAO,EAAC,mBAAmB,EAAC,MAAM,8BAA8B,CAAC;AACjE,OAAO,KAAK,SAAS,MAAM,kBAAkB,CAAC;AAE9C,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAEhC,MAAM,CAAC,MAAM,gBAAgB,GAAe;IAC1C,UAAU,EAAE,MAAM;IAClB,YAAY,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC;IAC7B,QAAQ,EAAE,CAAC,EAAY,EAAE,KAAe,EAAE,KAAmB,EAAE,EAAE;QAC/D,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,KAA6B,CAAC;QACrD,MAAM,EAAC,SAAS,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAC,GAAG,KAA0B,CAAC;QAEzE,IAAI,CAAC,MAAM,CACP,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,EACtC,GAAG,EAAE,CAAC,6DAA6D;YAC/D,sDAAsD,SAAS,GAAG,CAAC,CAAC;QAE5E,OAAO;YACL,CAAC,EAAE,GAAG,EAAE,CACJ,mBAAmB,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,CAAC;YACzE,MAAM,EAAE,GAAG,EAAE,CACT,oBAAoB,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,CAAC;SAC3E,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Conv2D, Conv2DAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {conv2DBackpropFilter} from '../ops/conv2d_backprop_filter';\nimport {conv2DBackpropInput} from '../ops/conv2d_backprop_input';\nimport * as conv_util from '../ops/conv_util';\nimport {Tensor, Tensor4D} from '../tensor';\nimport * as util from '../util';\n\nexport const conv2DGradConfig: GradConfig = {\n  kernelName: Conv2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: (dy: Tensor4D, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x4D, $filter] = saved as [Tensor4D, Tensor4D];\n    const {dilations, strides, pad, dataFormat} = attrs as {} as Conv2DAttrs;\n\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of conv2D: dilation rates greater than 1 ' +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n\n    return {\n      x: () =>\n          conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat),\n      filter: () =>\n          conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat)\n    };\n  }\n};\n"]}