{"version":3,"file":"BatchMatMul_grad.js","sourceRoot":"","sources":["../../src/gradients/BatchMatMul_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,WAAW,EAAmB,MAAM,iBAAiB,CAAC;AAE9D,OAAO,EAAC,MAAM,EAAC,MAAM,gBAAgB,CAAC;AAGtC,MAAM,CAAC,MAAM,qBAAqB,GAAe;IAC/C,UAAU,EAAE,WAAW;IACvB,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACxB,QAAQ,EAAE,CAAC,EAAU,EAAE,KAAe,EAAE,KAAmB,EAAE,EAAE;QAC7D,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QAErB,MAAM,EAAC,UAAU,EAAE,UAAU,EAAC,GAAG,KAA+B,CAAC;QAEjE,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;YAC9B,OAAO;gBACL,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;gBACnC,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC;aACpC,CAAC;SACH;aAAM,IAAI,CAAC,UAAU,IAAI,UAAU,EAAE;YACpC,OAAO;gBACL,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;gBACpC,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;aACpC,CAAC;SACH;aAAM,IAAI,UAAU,IAAI,CAAC,UAAU,EAAE;YACpC,OAAO;gBACL,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;gBACnC,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC;aACrC,CAAC;SACH;aAAM;YACL,OAAO;gBACL,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;gBAClC,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;aACnC,CAAC;SACH;IACH,CAAC;CACF,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {matMul} from '../ops/mat_mul';\nimport {Tensor} from '../tensor';\n\nexport const batchMatMulGradConfig: GradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [a, b] = saved;\n\n    const {transposeA, transposeB} = attrs as {} as BatchMatMulAttrs;\n\n    if (!transposeA && !transposeB) {\n      return {\n        a: () => matMul(dy, b, false, true),\n        b: () => matMul(a, dy, true, false)\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: () => matMul(dy, b, false, false),\n        b: () => matMul(dy, a, true, false)\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: () => matMul(b, dy, false, true),\n        b: () => matMul(a, dy, false, false)\n      };\n    } else {\n      return {\n        a: () => matMul(b, dy, true, true),\n        b: () => matMul(dy, a, true, true)\n      };\n    }\n  }\n};\n"]}